var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.493,1,2.618]],["body/controllers/AppController.html",[0,2.407,1,4.222,2,1.927,3,0.264,4,0.236,5,0.209,6,4.156,7,0.576,8,1.718,9,5.932,10,2.259,11,0.018,12,0.85,13,4.831,14,1.375,15,1.061,16,0.634,17,0.986,18,3.942,19,4.156,20,0.292,21,0.033,22,4.156,23,1.194,24,1.312,25,4.831,26,0.014,27,0.014]],["title/modules/AppModule.html",[28,1.493,29,2.618]],["body/modules/AppModule.html",[1,3.722,2,1.815,3,0.173,4,0.155,5,0.138,11,0.018,16,0.742,17,0.648,18,3.835,19,2.731,20,0.192,21,0.022,26,0.011,27,0.011,28,2.122,29,5.069,30,1.571,31,1.668,32,1.901,33,1.901,34,1.668,35,3.186,36,1.901,37,2.731,38,2.731,39,2.731,40,4.128,41,3.835,42,4.128,43,3.835,44,2.726,45,1.901,46,1.901,47,3.174,48,2.726,49,3.174,50,2.22,51,1.333,52,3.174,53,3.174,54,2.731,55,2.731,56,3.174,57,2.731,58,1.776,59,3.174,60,3.174,61,2.438,62,3.174,63,3.174,64,3.174,65,3.174,66,2.731,67,3.174,68,0.379,69,2.731,70,2.22,71,3.174,72,2.731,73,3.174,74,1.333,75,2.731,76,1.266,77,3.174,78,2.731,79,3.174,80,2.046,81,3.174,82,2.731,83,2.934,84,2.731]],["title/injectables/AppService.html",[18,2.242,85,0.925]],["body/injectables/AppService.html",[3,0.277,4,0.248,5,0.22,7,0.604,8,1.769,9,6.032,11,0.018,12,0.891,14,1.441,15,1.093,16,0.532,17,1.034,18,3.722,20,0.306,21,0.035,24,1.375,26,0.015,27,0.015,85,1.536,86,2.243,87,4.358,88,5.066,89,5.066,90,5.066]],["title/controllers/AuthenticationController.html",[0,1.493,91,2.618]],["body/controllers/AuthenticationController.html",[0,1.173,2,0.718,3,0.098,4,0.088,5,0.078,7,0.215,8,0.837,10,1.375,11,0.019,12,0.656,14,1.061,15,0.757,16,0.643,17,0.368,20,0.178,21,0.012,23,0.727,24,1.289,26,0.007,27,0.007,51,0.756,68,0.642,74,1.994,76,1.718,91,2.057,92,1.383,93,2.14,94,3.73,95,2.237,96,2.941,97,2.941,98,1.8,99,1.8,100,1.013,101,0.966,102,0.922,103,1.8,104,3.476,105,1.8,106,2.26,107,1.8,108,2.057,109,2.941,110,1.8,111,1.8,112,2.53,113,1.259,114,1.16,115,1.383,116,1.259,117,1.8,118,1.548,119,1.007,120,1.896,121,3.73,122,1.383,123,1.007,124,1.234,125,0.842,126,1.846,127,1.383,128,1.8,129,3.013,130,1.8,131,1.8,132,1.007,133,1.545,134,0.842,135,2.609,136,1.16,137,1.8,138,0.619,139,1.383,140,1.078,141,1.078,142,1.846,143,2.265,144,2.26,145,1.8,146,2.26,147,1.383,148,4.748,149,1.8,150,1.8,151,1.8,152,2.941,153,2.53,154,0.964,155,2.941,156,1.8,157,3.476,158,2.355,159,2.941,160,2.865,161,1.846,162,2.941,163,2.941,164,2.355,165,3.73,166,3.73,167,3.73,168,3.73,169,3.73,170,3.73,171,1.8,172,2.941,173,1.383,174,1.8,175,2.657,176,1.8,177,1.8,178,4.748,179,1.8,180,2.941,181,1.16,182,1.16,183,1.8,184,1.8,185,1.8,186,1.8,187,1.8,188,1.383,189,1.548,190,1.383,191,1.8,192,2.53,193,1.548,194,1.8,195,1.548,196,1.259,197,2.53,198,1.548,199,1.548]],["title/modules/AuthenticationModule.html",[28,1.493,40,2.413]],["body/modules/AuthenticationModule.html",[2,1.871,3,0.181,4,0.162,5,0.144,11,0.018,16,0.761,17,0.676,20,0.2,21,0.023,26,0.011,27,0.011,28,2.173,30,1.639,31,1.74,32,1.983,33,1.983,34,1.74,35,3.262,36,3.262,40,4.631,41,3.889,44,2.809,45,1.983,46,1.983,48,2.809,50,2.316,51,1.391,55,2.849,91,3.81,119,1.853,124,0.644,125,1.548,135,2.316,136,2.134,200,2.849,201,3.312,202,2.849,203,2.849,204,3.377,205,4.022,206,4.031,207,3.312,208,3.312,209,3.023,210,3.312,211,3.312,212,2.849,213,3.604,214,3.312,215,3.312,216,3.312,217,3.312,218,4.035,219,1.983,220,2.849,221,3.312,222,3.312,223,2.316,224,3.312]],["title/classes/BcryptService.html",[21,0.026,204,1.853]],["body/classes/BcryptService.html",[3,0.192,4,0.172,5,0.152,7,0.419,8,1.392,11,0.018,12,1.07,14,1.601,15,1.164,16,0.514,20,0.212,21,0.024,23,1.391,24,1.527,26,0.012,27,0.012,68,0.726,76,2.55,93,2.362,95,2.244,100,1.527,101,1.457,102,1.391,120,3.152,124,1.399,125,1.643,154,1.603,158,1.476,190,2.7,204,2.421,225,1.152,226,3.023,227,4.322,228,5.626,229,4.891,230,4.891,231,4.891,232,2.287,233,2.458,234,2.458,235,3.421,236,3.514,237,4.891,238,3.514,239,3.277,240,4.891,241,3.514,242,4.891,243,3.514,244,3.514,245,3.514,246,3.514,247,3.514]],["title/controllers/CoreController.html",[0,1.493,248,2.618]],["body/controllers/CoreController.html",[0,2.382,2,1.895,3,0.26,4,0.233,5,0.206,7,0.567,8,1.7,10,2.222,11,0.018,12,0.835,14,1.352,15,0.835,16,0.628,17,0.97,20,0.287,21,0.032,24,1.29,26,0.014,27,0.014,122,3.65,123,2.659,248,4.178,249,4.087,250,5.896,251,5.973,252,4.751,253,3.577,254,4.751,255,4.751,256,4.751]],["title/modules/CoreModule.html",[28,1.493,41,2.242]],["body/modules/CoreModule.html",[2,2.316,3,0.248,4,0.222,5,0.197,11,0.018,16,0.673,17,0.928,20,0.275,21,0.031,26,0.014,27,0.014,28,2.552,30,2.249,31,2.388,32,2.721,33,2.721,34,2.388,35,3.832,36,3.477,41,4.268,44,3.477,45,2.721,46,2.721,48,2.721,248,4.476,257,3.909,258,3.909,259,4.593,260,4.544,261,4.544,262,3.909,263,4.544]],["title/classes/CreateTeacherDto.html",[21,0.026,264,2.242]],["body/classes/CreateTeacherDto.html",[3,0.198,4,0.177,5,0.157,7,0.433,11,0.018,12,1.273,15,1.314,20,0.219,21,0.025,26,0.012,27,0.012,68,0.864,74,2.401,76,2.281,154,1.638,225,1.189,232,2.337,264,2.993,265,6.28,266,2.785,267,4.393,268,4,269,4.393,270,4.393,271,4.393,272,4.393,273,4.393,274,4.393,275,4.393,276,4.735,277,3.625,278,3.625,279,3.625,280,3.625,281,3.625,282,3.625,283,3.625,284,3.625,285,3.625,286,3.625,287,3.625]],["title/classes/CreateUserCommand.html",[21,0.026,288,2.413]],["body/classes/CreateUserCommand.html",[3,0.262,4,0.234,5,0.208,11,0.018,12,0.842,15,1.056,16,0.504,20,0.29,21,0.033,23,1.699,26,0.014,27,0.014,68,0.782,74,2.012,76,1.911,100,1.301,101,1.241,102,1.184,138,2.065,142,2.972,225,1.571,288,3.87,289,4.612,290,4.121,291,4.791,292,5.165,293,4.791,294,3.67,295,3.088]],["title/classes/CreateUserDto.html",[21,0.026,296,2.242]],["body/classes/CreateUserDto.html",[3,0.26,4,0.233,5,0.206,7,0.567,11,0.018,12,1.149,15,1.205,16,0.499,20,0.287,21,0.032,26,0.014,27,0.014,68,0.78,74,2.743,76,2.606,154,1.958,225,1.558,294,4.035,295,3.062,296,3.577,297,5.896,298,3.65,299,4.751,300,4.751,301,4.751]],["title/classes/CreateUserException.html",[21,0.026,302,2.618]],["body/classes/CreateUserException.html",[3,0.276,4,0.247,5,0.219,11,0.018,12,0.887,15,1.09,20,0.305,21,0.034,26,0.015,27,0.015,68,0.602,100,1.369,101,1.307,102,1.247,124,0.98,138,1.735,182,3.995,225,1.653,253,3.02,302,4.336,303,5.333,304,3.874,305,2.899,306,5.333,307,4.339,308,2.496,309,4.339]],["title/classes/CreateUserExceptionFilter.html",[21,0.026,310,2.618]],["body/classes/CreateUserExceptionFilter.html",[3,0.221,4,0.198,5,0.175,7,0.483,8,1.532,11,0.018,12,0.712,14,1.152,16,0.678,17,0.826,20,0.245,21,0.028,26,0.013,27,0.013,58,2.265,68,0.483,70,4.232,100,1.099,101,1.049,102,1,113,2.831,124,0.787,143,2.042,181,3.9,225,1.327,302,4.511,308,2.003,310,3.766,311,4.136,312,4.136,313,3.9,314,3.109,315,2.518,316,5.205,317,4.632,318,5.548,319,3.482,320,3.109,321,4.632,322,4.047,323,2.829,324,3.482,325,4.047,326,3.482,327,3.482,328,3.482,329,3.482,330,2.424,331,2.265,332,3.482,333,2.424,334,3.482]],["title/classes/CreateUserHandler.html",[21,0.026,335,2.618]],["body/classes/CreateUserHandler.html",[3,0.179,4,0.16,5,0.142,7,0.391,8,1.324,11,0.018,12,0.818,14,0.932,16,0.7,20,0.198,21,0.022,23,1.15,24,0.889,26,0.011,27,0.011,51,1.375,68,0.555,74,1.375,76,1.306,93,1.954,95,2.159,100,1.263,101,1.206,102,1.15,120,3.489,124,1.052,132,1.832,133,3.097,134,1.531,138,1.6,140,1.96,141,2.786,143,1.242,158,2.475,160,3.574,164,1.954,175,2.604,204,2.918,219,1.96,225,1.073,232,1.531,239,2.303,288,3.799,308,1.62,313,2.11,315,2.176,335,3.254,336,4.657,337,2.816,338,4.657,339,3.254,340,2.515,341,3.274,342,4.003,343,3.274,344,2.816,345,2.816,346,2.515,347,3.274,348,2.11,349,2.816,350,2.816,351,3.274,352,3.274,353,3.274,354,4.003,355,4.003,356,4.653,357,3.274,358,3.274,359,3.274,360,3.274,361,3.274,362,3.274]],["title/classes/CreateUserRequest.html",[21,0.026,363,2.618]],["body/classes/CreateUserRequest.html",[3,0.211,4,0.189,5,0.167,7,0.46,10,2.761,11,0.018,12,1.038,15,1.112,16,0.621,20,0.233,21,0.036,23,1.774,26,0.012,27,0.012,68,0.705,74,2.48,76,2.355,123,2.159,154,1.709,225,1.264,253,3.122,294,4.016,295,2.486,363,3.646,364,5.441,365,3.318,366,5.213,367,3.857,368,3.857,369,3.857,370,5.213,371,4.485,372,3.857,373,3.857,374,3.857,375,3.857,376,6.325,377,3.857,378,5.906,379,3.318,380,6.325,381,3.318,382,3.857]],["title/injectables/DatabaseStrategy.html",[85,0.925,206,2.413]],["body/injectables/DatabaseStrategy.html",[3,0.173,4,0.155,5,0.137,7,0.378,8,1.293,11,0.018,12,0.799,14,0.901,15,1.125,16,0.693,17,0.646,20,0.191,21,0.022,23,1.123,24,0.859,26,0.011,27,0.011,51,1.329,68,0.542,74,2.581,76,2.552,85,1.123,86,1.401,93,1.907,95,2.119,100,1.233,101,1.177,102,1.123,119,1.772,124,1.129,125,1.48,132,1.772,133,3.05,134,1.48,138,1.562,140,1.895,141,2.72,143,1.201,158,1.907,164,2.231,175,2.974,189,2.723,190,2.432,204,3.262,206,2.928,212,2.723,239,2.248,268,2.214,305,2.124,340,2.432,371,3.908,383,2.723,384,4.543,385,4.543,386,3.165,387,4.543,388,3.165,389,3.165,390,2.432,391,2.214,392,2.723,393,2.432,394,2.432,395,2.214,396,3.165,397,3.165,398,3.165,399,2.723,400,4.543,401,3.165,402,3.165,403,3.165,404,3.165,405,3.165,406,3.165,407,2.723,408,2.723,409,3.165,410,3.165]],["title/classes/DuplicateUserException.html",[21,0.026,348,2.413]],["body/classes/DuplicateUserException.html",[3,0.274,4,0.246,5,0.218,11,0.018,12,0.883,15,1.087,20,0.304,21,0.034,26,0.015,27,0.015,68,0.599,100,1.363,101,1.301,102,1.241,124,0.976,138,1.727,182,3.985,225,1.646,253,3.007,304,3.857,305,2.891,306,5.318,307,4.32,309,4.32,348,3.985,354,4.32,355,4.32,411,5.318]],["title/classes/DuplicateUserExceptionFilter.html",[21,0.026,412,2.618]],["body/classes/DuplicateUserExceptionFilter.html",[3,0.221,4,0.198,5,0.175,7,0.483,8,1.532,11,0.018,12,0.712,14,1.152,16,0.678,17,0.826,20,0.245,21,0.028,26,0.013,27,0.013,58,2.265,68,0.483,70,4.232,100,1.099,101,1.049,102,1,113,2.831,124,0.787,143,2.042,181,3.9,225,1.327,311,4.136,313,3.9,314,3.109,315,2.518,316,5.205,317,4.632,318,5.548,319,3.482,320,3.109,321,4.632,323,2.829,324,3.482,326,3.482,327,3.482,328,3.482,329,3.482,330,2.424,331,2.265,332,3.482,333,2.424,334,3.482,348,4.157,349,3.482,412,3.766,413,4.136,414,4.047,415,4.047]],["title/injectables/ExceptionInterceptor.html",[85,0.925,416,2.876]],["body/injectables/ExceptionInterceptor.html",[3,0.241,4,0.216,5,0.191,7,0.526,8,1.62,11,0.018,12,0.775,14,1.253,16,0.598,17,0.899,20,0.266,21,0.03,24,1.196,26,0.013,27,0.013,68,0.526,85,1.407,86,1.95,100,1.196,101,1.141,102,1.089,164,1.85,315,2.06,416,4.372,417,3.789,418,4.372,419,4.372,420,5.12,421,5.12,422,5.12,423,4.405,424,3.384,425,4.844,426,5.692,427,4.372,428,3.789,429,4.896,430,3.081,431,4.405,432,4.405]],["title/classes/FetchUserByIdCommand.html",[21,0.026,433,2.618]],["body/classes/FetchUserByIdCommand.html",[3,0.282,4,0.252,5,0.224,11,0.017,12,0.907,15,1.192,20,0.312,21,0.035,26,0.015,27,0.015,68,0.615,100,1.4,101,1.336,102,1.275,124,1.222,138,1.774,225,1.691,433,4.395,434,5.406,435,3.961,436,5.157,437,5.157,438,6.284,439,5.157]],["title/classes/FetchUserByIdHandler.html",[21,0.026,440,2.876]],["body/classes/FetchUserByIdHandler.html",[3,0.249,4,0.223,5,0.198,7,0.544,8,1.657,11,0.018,12,0.802,14,1.298,16,0.612,21,0.031,24,1.239,26,0.014,27,0.014,68,0.544,95,2.557,100,1.239,101,1.182,102,1.128,124,1.246,219,2.732,225,1.496,239,2.882,315,2.722,338,5.515,339,4.072,342,5.008,344,3.925,345,3.925,433,4.724,435,3.505,440,4.472,441,5.008,442,4.562,443,4.562,444,4.562,445,4.562,446,3.191]],["title/controllers/HealthController.html",[0,1.493,447,2.618]],["body/controllers/HealthController.html",[0,1.364,2,1.364,3,0.187,4,0.167,5,0.148,7,0.408,8,1.366,10,1.599,11,0.018,12,0.601,14,0.973,16,0.665,17,0.698,20,0.207,21,0.023,24,1.303,26,0.011,27,0.011,93,2.524,122,2.627,123,1.914,138,1.176,250,5.646,262,2.942,331,3.364,408,5.446,447,3.357,448,2.942,449,2.627,450,3.42,451,4.799,452,3.42,453,3.42,454,3.42,455,4.799,456,4.799,457,4.799,458,4.799,459,3.42,460,3.42,461,5.544,462,2.627,463,3.357,464,3.42,465,4.799,466,2.204,467,2.942,468,3.42,469,3.42,470,3.42,471,3.42,472,2.627,473,4.799,474,3.42,475,4.799,476,3.42,477,3.42,478,3.42,479,3.42,480,4.799,481,3.42,482,4.128,483,4.799,484,4.799,485,3.42,486,3.42,487,4.799,488,6.011,489,4.799,490,3.42,491,3.42]],["title/modules/HealthModule.html",[28,1.493,492,2.876]],["body/modules/HealthModule.html",[2,2.453,3,0.272,4,0.244,5,0.216,11,0.018,16,0.732,17,1.016,20,0.301,21,0.034,26,0.015,27,0.015,28,2.453,30,2.464,48,2.981,447,4.667,462,3.824,492,4.724,493,4.978,494,6.149,495,6.149,496,4.282,497,4.978]],["title/interfaces/IErrorBody.html",[323,1.967,498,1.288]],["body/interfaces/IErrorBody.html",[3,0.183,4,0.163,5,0.145,7,0.399,11,0.018,15,1.316,20,0.394,23,1.851,26,0.011,27,0.011,68,0.872,102,1.69,142,1.653,154,1.547,232,3.198,323,2.48,330,3.562,331,3.329,333,3.562,498,2.046,499,1.755,500,2,501,4.16,502,4.407,503,2,504,2.336,505,2.336,506,2.336,507,2.336,508,2.336,509,2.336,510,2.336,511,2.336,512,2.336,513,2.642,514,3.301,515,2.642,516,2.336,517,2]],["title/interfaces/ItemsBody.html",[498,1.288,515,2.095]],["body/interfaces/ItemsBody.html",[3,0.209,4,0.187,5,0.166,7,0.456,11,0.018,15,1.285,20,0.411,23,1.878,26,0.012,27,0.012,68,0.81,142,1.89,154,1.698,232,3.175,323,2.006,330,2.287,331,2.137,333,2.287,498,2.167,499,2.006,500,2.287,501,2.671,502,3.787,503,2.287,504,2.671,505,2.671,506,2.671,507,2.671,508,2.671,509,2.671,510,2.671,511,2.671,512,2.671,513,2.898,514,4.406,515,3.288,516,4.406,517,2.287]],["title/injectables/JwtStorage.html",[85,0.925,205,2.095]],["body/injectables/JwtStorage.html",[3,0.137,4,0.123,5,0.109,7,0.299,8,1.088,10,1.173,11,0.018,12,1.075,14,1.088,15,1.075,16,0.618,17,0.512,20,0.152,21,0.017,23,1.717,24,1.038,26,0.009,27,0.009,51,1.053,68,0.771,85,0.945,86,1.11,93,2.852,95,2.345,100,1.258,101,1.2,102,1.145,114,1.617,124,1.085,125,1.173,126,1.893,132,1.404,133,3.089,134,1.173,135,4.751,136,1.617,138,1.315,140,2.775,141,3.661,143,0.951,144,1.927,146,1.927,147,1.927,154,1.254,157,2.29,158,1.053,161,1.241,164,1.053,175,1.404,188,1.927,205,2.14,227,4.516,233,2.674,234,2.674,235,2.674,239,2.565,315,1.173,395,1.754,498,0.863,518,1.927,519,3.986,520,3.986,521,4.112,522,3.289,523,3.289,524,2.508,525,3.824,526,3.289,527,2.508,528,3.289,529,2.508,530,2.508,531,3.289,532,2.508,533,3.289,534,2.508,535,2.158,536,3.625,537,3.289,538,2.158,539,2.158,540,2.158,541,3.289,542,2.158,543,2.158,544,2.158,545,2.158,546,2.158,547,2.158]],["title/injectables/JwtStrategy.html",[85,0.925,548,2.618]],["body/injectables/JwtStrategy.html",[3,0.183,4,0.163,5,0.145,7,0.399,8,1.343,11,0.018,12,0.83,14,0.951,15,0.587,16,0.704,17,0.682,20,0.285,21,0.032,23,0.826,24,0.907,26,0.011,27,0.011,58,1.87,68,0.563,85,1.167,86,1.479,93,1.403,95,2.183,100,1.282,101,1.223,102,1.167,104,2,114,2.153,116,4.16,119,1.87,124,1.064,125,1.562,126,3.314,127,2.566,138,1.623,139,2.566,143,1.79,157,2.826,158,1.403,173,2.566,181,2.153,209,2.153,223,3.301,239,2.336,305,2.559,390,4.569,391,3.301,393,2.566,394,2.566,446,2.336,521,3.828,548,3.301,549,2.566,550,4.72,551,3.34,552,3.34,553,4.06,554,3.34,555,2.874,556,2.874,557,2.874,558,4.709,559,4.709,560,4.06,561,2.874,562,2.874,563,2.874]],["title/classes/NestJwtStrategy.html",[21,0.026,209,2.413]],["body/classes/NestJwtStrategy.html",[3,0.203,4,0.181,5,0.161,11,0.018,15,0.652,16,0.724,17,0.757,20,0.307,21,0.035,23,0.916,24,1.007,26,0.012,27,0.012,58,2.075,85,1.254,93,1.557,95,1.479,114,2.389,116,3.55,119,2.075,124,1.125,125,1.734,126,3.08,127,2.848,138,1.275,139,2.848,143,1.925,157,3.039,158,1.557,173,2.848,181,2.389,209,3.271,223,4.047,225,1.215,239,1.835,305,2.706,390,4.445,391,3.55,393,2.848,394,2.848,446,2.593,521,2.593,548,2.593,549,2.848,553,3.189,555,3.189,556,3.189,557,3.189,558,4.978,559,4.978,560,4.366,561,3.189,562,3.189,563,4.366]],["title/interfaces/PaginationMetaInterface.html",[498,1.288,503,2.242]],["body/interfaces/PaginationMetaInterface.html",[3,0.172,4,0.154,5,0.136,7,0.376,11,0.018,15,1.307,20,0.386,23,1.837,26,0.011,27,0.011,68,0.864,102,1.664,142,1.558,154,1.483,232,3.427,323,1.654,330,1.885,331,1.762,333,1.885,498,1.992,499,1.654,500,1.885,501,2.202,502,3.414,503,2.709,504,4.05,505,4.05,506,4.05,507,4.05,508,4.05,509,4.05,510,4.05,511,4.05,512,4.05,513,2.532,514,3.165,515,2.532,516,2.202,517,1.885]],["title/interfaces/Req.html",[104,2.242,498,1.288]],["body/interfaces/Req.html",[3,0.282,4,0.252,5,0.224,7,0.615,11,0.018,16,0.542,20,0.312,23,1.275,26,0.015,27,0.015,58,2.886,68,0.615,104,3.763,116,3.607,124,1.371,154,2.06,305,2.938,498,1.774,499,2.709,564,4.436,565,6.777]],["title/interfaces/ResourceBody.html",[498,1.288,513,2.095]],["body/interfaces/ResourceBody.html",[3,0.209,4,0.187,5,0.166,7,0.456,11,0.018,15,1.285,20,0.411,23,1.878,26,0.012,27,0.012,68,0.81,142,3.118,154,1.698,232,3.175,323,2.006,330,2.287,331,2.137,333,2.287,498,2.167,499,2.006,500,2.287,501,2.671,502,3.787,503,2.287,504,2.671,505,2.671,506,2.671,507,2.671,508,2.671,509,2.671,510,2.671,511,2.671,512,2.671,513,3.288,514,4.406,515,2.898,516,2.671,517,2.287]],["title/injectables/ResponseTransformInterceptor.html",[85,0.925,259,2.413]],["body/injectables/ResponseTransformInterceptor.html",[3,0.178,4,0.159,5,0.141,7,0.388,8,1.319,11,0.019,12,0.572,14,0.926,15,0.572,16,0.679,17,0.665,20,0.28,21,0.022,24,1.754,26,0.011,27,0.011,68,0.388,83,2.098,85,1.146,86,1.441,100,0.884,101,0.843,102,0.805,106,3.56,142,2.91,143,2.047,164,1.367,253,1.949,259,2.987,315,1.522,418,4.145,419,2.501,420,4.517,421,4.145,422,4.517,424,3.56,425,4.145,427,3.56,430,2.277,446,3.774,463,2.277,466,2.987,517,2.775,566,3.241,567,2.277,568,3.255,569,2.8,570,3.255,571,3.255,572,2.501,573,3.255,574,3.255,575,2.8,576,2.501,577,2.8,578,3.56,579,2.8,580,3.255,581,3.255,582,3.255,583,3.255,584,3.255,585,3.255,586,4.634,587,3.255,588,3.255,589,2.8,590,3.255,591,3.255,592,3.255,593,3.255,594,3.255,595,3.255]],["title/entities/Teacher.html",[596,2.242,597,2.095]],["body/entities/Teacher.html",[3,0.158,4,0.141,5,0.125,7,0.344,10,3.235,11,0.018,12,1.217,15,1.254,16,0.53,20,0.175,21,0.029,23,1.246,26,0.01,27,0.01,68,0.825,80,1.861,83,3.249,124,1.245,134,1.35,154,1.393,161,2.495,232,1.986,267,3.872,268,3.526,269,3.872,270,3.872,271,3.872,272,3.872,273,3.872,274,3.872,275,3.872,276,4.271,596,2.544,597,2.378,598,2.483,599,6.323,600,2.887,601,2.887,602,2.887,603,2.887,604,2.887,605,4.336,606,2.887,607,2.887,608,2.887,609,2.887,610,2.887,611,2.887,612,4.248,613,4.248,614,2.887,615,2.887,616,2.483,617,4.248,618,2.483,619,4.248,620,2.483,621,2.483,622,2.217,623,2.483,624,2.217,625,2.217,626,3.263,627,2.483]],["title/controllers/TeacherController.html",[0,1.493,628,2.618]],["body/controllers/TeacherController.html",[0,1.259,2,1.259,3,0.172,4,0.154,5,0.137,7,0.377,8,1.29,10,2.871,11,0.018,12,1.08,14,1.747,15,1.207,16,0.609,17,0.645,20,0.191,21,0.022,22,2.715,23,0.78,24,1.667,26,0.011,27,0.011,68,0.692,100,1.574,101,1.502,102,1.433,115,4.075,161,3.164,264,3.177,308,2.244,449,2.425,597,1.767,628,3.171,629,2.715,630,4.055,631,3.171,632,3.171,633,3.171,634,2.715,635,3.157,636,3.157,637,2.208,638,3.9,639,3.157,640,2.208,641,3.9,642,3.157,643,2.208,644,4.713,645,3.9,646,3.157,647,3.9,648,2.715,649,2.715,650,2.715,651,3.177,652,2.715,653,3.157,654,3.9,655,2.715,656,3.157,657,2.715,658,3.157,659,3.157,660,2.715,661,3.157,662,2.715,663,3.157,664,2.715,665,3.157]],["title/modules/TeacherModule.html",[28,1.493,42,2.413]],["body/modules/TeacherModule.html",[2,2.148,3,0.221,4,0.198,5,0.175,11,0.018,16,0.752,17,0.826,20,0.245,21,0.028,26,0.013,27,0.013,28,2.413,30,2.003,31,2.127,32,2.424,33,2.424,34,2.127,35,3.623,36,2.424,42,4.614,43,4.021,44,3.224,45,2.424,46,2.424,48,3.224,50,2.831,51,1.699,124,0.787,597,2.265,623,3.482,628,4.232,651,4.135,652,3.482,666,3.482,667,3.482,668,4.047,669,4.047,670,4.047,671,3.482,672,2.127,673,3.482,674,4.047,675,4.047]],["title/injectables/TeacherService.html",[85,0.925,651,2.242]],["body/injectables/TeacherService.html",[3,0.146,4,0.13,5,0.116,7,0.318,8,1.139,11,0.018,12,1.058,14,1.63,15,0.846,16,0.602,17,0.544,20,0.161,21,0.018,23,0.659,24,1.451,26,0.009,27,0.009,51,1.119,68,0.638,74,1.119,76,1.063,85,0.99,86,1.18,93,1.681,95,2.827,100,1.556,101,1.484,102,1.416,108,3.739,124,1.114,132,1.492,133,2.809,134,1.246,138,1.377,142,2.646,143,1.519,158,1.681,161,3.09,232,2.248,264,1.596,267,2.048,268,1.864,269,2.048,270,2.048,271,2.048,272,2.048,273,2.048,274,2.048,275,2.048,294,1.492,308,2.38,339,1.864,596,1.596,597,2.992,630,3.739,631,2.8,632,2.8,633,2.8,634,3.444,637,2.8,640,2.8,643,2.8,651,2.397,671,2.293,672,3.28,673,2.293,676,2.293,677,2.665,678,2.665,679,4.004,680,2.665,681,2.665,682,2.665,683,2.665,684,2.665,685,2.665,686,2.665,687,2.665,688,2.665,689,2.665,690,2.665,691,2.665,692,2.665,693,2.665,694,2.665,695,2.665,696,2.665,697,2.665,698,2.665,699,2.665,700,2.665,701,2.665,702,2.665,703,2.665,704,2.293,705,2.665,706,2.665,707,2.293,708,2.293,709,2.665]],["title/injectables/TimeoutInterceptor.html",[85,0.925,710,2.876]],["body/injectables/TimeoutInterceptor.html",[3,0.227,4,0.203,5,0.18,7,0.495,8,1.558,11,0.018,12,0.73,14,1.181,16,0.575,17,0.847,20,0.251,21,0.028,24,1.663,26,0.013,27,0.013,68,0.495,85,1.353,86,1.837,100,1.127,101,1.075,102,1.026,164,2.299,182,2.675,315,1.94,418,4.205,419,4.205,420,5.004,421,4.706,422,5.004,424,3.188,425,4.706,427,4.205,428,3.57,429,5.27,430,2.902,589,3.57,710,4.205,711,3.57,712,4.15,713,5.474,714,4.15,715,5.474,716,4.15,717,4.15,718,4.15,719,4.15]],["title/interfaces/TokenBody.html",[498,1.288,536,2.618]],["body/interfaces/TokenBody.html",[3,0.177,4,0.159,5,0.141,7,0.387,11,0.018,15,1.168,16,0.678,17,0.663,20,0.196,21,0.022,23,1.595,24,1.256,26,0.011,27,0.011,51,1.363,68,0.792,85,1.143,93,2.466,95,1.845,114,2.092,124,0.899,125,1.518,126,2.289,132,1.817,133,2.831,134,1.518,135,4.513,136,2.092,138,1.116,140,2.769,141,3.226,143,1.231,144,2.493,146,2.493,147,2.493,154,1.516,157,1.944,158,1.363,161,1.607,164,1.363,175,1.817,188,2.493,205,1.817,227,3.553,235,2.27,239,2.289,315,1.518,395,2.27,498,1.116,499,1.705,518,2.493,519,2.792,520,2.792,521,3.235,526,2.792,528,2.792,531,2.792,533,2.792,535,2.792,536,4.341,537,5.34,538,2.792,539,2.792,540,2.792,541,3.979,542,2.792,543,2.792,544,2.792,545,2.792,546,2.792,547,2.792]],["title/injectables/TokenGuard.html",[85,0.925,720,2.876]],["body/injectables/TokenGuard.html",[3,0.29,4,0.259,5,0.23,11,0.018,16,0.671,17,1.082,20,0.32,21,0.036,26,0.015,27,0.015,85,1.579,86,2.346,118,4.559,119,2.966,305,2.987,720,4.908,721,4.559,722,6.389]],["title/interfaces/TokenStorage.html",[126,1.853,498,1.288]],["body/interfaces/TokenStorage.html",[3,0.266,4,0.238,5,0.211,7,0.581,11,0.018,15,0.857,16,0.512,20,0.295,23,1.5,26,0.014,27,0.014,68,0.724,124,1.18,125,2.278,126,3.003,154,1.989,157,2.918,239,3.003,498,1.676,499,2.56,522,5.95,523,5.95,578,5.313,723,4.191]],["title/classes/UpdateTeacherDto.html",[21,0.026,644,2.618]],["body/classes/UpdateTeacherDto.html",[3,0.288,4,0.258,5,0.229,11,0.018,16,0.67,20,0.319,21,0.036,26,0.015,27,0.015,123,2.952,225,1.729,264,3.159,266,4.052,305,2.979,308,2.611,644,4.456,654,4.538,724,4.538,725,6.371,726,4.538]],["title/classes/UpdateUserDto.html",[21,0.026,727,2.618]],["body/classes/UpdateUserDto.html",[3,0.288,4,0.258,5,0.229,11,0.018,16,0.67,20,0.319,21,0.036,26,0.015,27,0.015,123,2.952,225,1.729,296,3.159,298,4.052,305,2.979,308,2.611,726,4.538,727,4.456,728,4.538,729,6.371,730,4.538]],["title/entities/User.html",[124,0.728,596,2.242]],["body/entities/User.html",[3,0.175,4,0.157,5,0.139,7,0.383,10,3.006,11,0.018,12,1.13,15,1.13,16,0.563,20,0.194,21,0.031,23,1.766,26,0.011,27,0.011,68,0.79,74,2.248,76,2.136,80,2.069,83,3.766,106,2.466,124,0.892,134,1.501,154,1.504,161,2.65,233,3.209,276,4.488,294,3.788,295,2.069,381,5.026,596,2.747,599,5.026,605,4.606,616,3.947,618,2.761,620,3.947,621,5.026,622,2.466,624,2.466,625,2.466,626,3.524,627,2.761,731,2.761,732,5.354,733,5.354,734,3.21,735,3.21,736,3.21,737,3.21,738,4.588,739,5.026,740,3.21,741,3.21,742,3.21,743,3.21,744,3.21,745,3.21,746,5.354,747,3.21,748,3.21,749,3.21]],["title/controllers/UserController.html",[0,1.493,750,2.618]],["body/controllers/UserController.html",[0,1.007,2,1.007,3,0.138,4,0.124,5,0.109,7,0.301,8,1.093,10,2.617,11,0.018,12,0.984,14,1.592,15,1.138,16,0.68,17,0.515,20,0.153,21,0.017,23,0.95,24,1.6,26,0.009,27,0.009,68,0.62,93,1.614,95,1.856,100,1.412,101,1.347,102,1.285,108,1.766,115,2.952,124,0.747,138,0.868,143,0.958,158,1.06,161,2.918,164,1.06,175,1.413,219,1.512,288,1.627,289,1.939,296,1.512,308,1.25,310,2.688,312,1.939,313,2.477,320,2.952,350,2.172,363,3.637,412,2.688,413,1.939,449,1.939,466,1.627,467,2.172,630,3.637,631,2.688,632,2.688,633,2.688,637,1.766,638,3.306,640,1.766,641,3.306,643,1.766,645,3.306,647,4.474,648,2.172,649,2.172,650,2.172,655,2.172,657,2.172,660,2.172,662,2.172,664,2.172,672,2.444,727,4.418,730,2.172,750,2.688,751,2.172,752,3.843,753,2.525,754,4.652,755,2.525,756,2.525,757,3.843,758,3.843,759,2.525,760,2.525,761,2.525,762,2.525,763,2.525,764,2.525,765,2.525,766,4.652,767,3.843,768,2.525,769,2.525,770,2.525,771,2.525,772,2.525,773,2.525,774,3.843,775,2.525,776,2.525,777,2.172,778,3.843,779,2.525,780,2.525,781,2.525,782,2.525,783,2.525,784,2.525,785,2.525]],["title/classes/UserDetailResponse.html",[21,0.026,129,2.618]],["body/classes/UserDetailResponse.html",[3,0.261,4,0.233,5,0.207,11,0.018,12,0.839,16,0.501,20,0.362,21,0.032,26,0.014,27,0.014,68,0.715,100,1.295,101,1.236,102,1.179,124,1.272,125,2.231,129,4.189,138,1.641,225,1.564,305,2.8,315,2.8,624,4.6,625,5.028,626,3.665,786,4.6,787,3.665,788,5.631,789,4.771,790,4.771,791,4.104,792,4.771]],["title/modules/UserModule.html",[28,1.493,43,2.242]],["body/modules/UserModule.html",[2,2.123,3,0.217,4,0.195,5,0.172,11,0.018,16,0.749,17,0.812,20,0.24,21,0.027,26,0.013,27,0.013,28,2.392,30,1.969,31,2.09,32,2.382,33,2.382,34,2.09,35,3.592,36,3.592,43,4.202,44,3.187,45,2.382,46,2.382,48,2.382,50,2.782,51,1.67,124,0.773,204,1.969,218,4.578,219,2.382,220,3.421,335,3.722,346,3.055,672,3.866,750,4.195,793,3.421,794,3.421,795,3.421,796,3.977,797,3.977,798,3.977,799,3.421,800,3.977,801,3.977,802,3.977]],["title/injectables/UserService.html",[85,0.925,672,1.967]],["body/injectables/UserService.html",[3,0.122,4,0.109,5,0.097,7,0.267,8,0.995,11,0.018,12,1.067,14,1.669,15,0.758,16,0.59,17,0.456,20,0.135,21,0.015,23,0.552,24,1.523,26,0.008,27,0.008,51,0.938,68,0.669,74,1.469,76,1.944,85,0.864,86,0.989,93,1.469,95,2.854,100,1.592,101,1.519,102,1.45,108,3.924,112,3.009,113,1.563,120,2.777,124,0.838,132,1.251,133,2.561,134,1.045,138,1.203,140,1.338,141,2.094,142,3.159,143,1.634,158,2.222,160,1.717,161,3.357,164,0.938,175,1.251,192,3.009,193,1.922,195,1.922,196,1.563,204,2.413,232,2.918,294,1.251,296,1.338,308,1.731,339,3.014,340,1.717,346,1.717,395,1.563,399,1.922,630,3.409,631,2.446,632,2.446,633,2.446,637,2.446,640,2.446,643,2.446,672,1.838,704,1.922,707,4.193,708,3.707,799,1.922,803,1.922,804,3.497,805,3.497,806,2.235,807,3.497,808,2.235,809,3.497,810,2.235,811,3.497,812,2.235,813,2.235,814,2.235,815,2.235,816,2.235,817,2.235,818,2.235,819,2.235,820,2.235,821,2.235,822,2.235,823,2.235,824,2.235,825,2.235,826,2.235,827,2.235,828,4.309,829,4.309,830,3.497,831,2.235]],["title/coverage.html",[832,3.924]],["body/coverage.html",[0,2.106,1,1.359,5,0.084,6,1.672,11,0.018,18,1.164,21,0.046,26,0.007,27,0.007,34,1.021,61,2.404,68,0.232,85,1.513,87,1.672,91,1.359,92,2.404,104,1.164,124,0.764,126,0.962,129,1.359,164,0.816,196,1.359,204,0.962,205,1.088,206,1.252,209,1.252,213,1.493,226,1.672,248,1.359,249,1.672,259,1.252,264,1.164,265,1.672,266,2.404,288,1.252,289,1.493,290,1.672,296,1.164,297,1.672,298,2.404,302,1.359,303,1.672,304,2.404,310,1.359,311,2.404,312,1.493,313,2.017,314,2.404,323,1.021,335,1.359,336,1.672,337,1.672,348,1.252,363,1.359,364,1.672,365,1.672,383,1.672,411,1.672,412,1.359,413,1.493,416,1.493,417,1.672,433,1.359,434,1.672,435,2.404,440,1.493,441,1.672,447,1.359,448,1.672,463,1.359,466,1.252,498,1.91,500,2.698,503,1.164,513,1.088,515,1.088,518,2.404,536,1.359,548,1.359,549,2.404,564,1.672,566,2.749,567,2.749,572,1.493,576,1.493,578,2.404,596,1.874,597,1.088,598,1.672,628,1.359,629,1.672,644,1.359,651,1.164,672,1.021,676,1.672,710,1.493,711,1.672,720,1.493,721,1.672,723,1.672,724,1.672,727,1.359,728,1.672,731,1.672,750,1.359,751,1.672,786,1.493,787,1.493,803,1.672,832,1.493,833,1.943,834,1.943,835,1.943,836,6.579,837,6.847,838,3.93,839,6.847,840,7.175,841,4.94,842,1.672,843,1.672,844,1.943,845,1.943,846,2.693,847,2.693,848,2.693,849,1.672,850,1.672,851,1.672,852,1.672,853,1.672,854,1.672,855,2.693,856,1.672,857,1.672,858,2.693,859,3.13,860,1.943,861,1.672,862,1.943,863,3.13,864,1.943,865,3.381,866,1.672,867,1.672,868,1.672,869,1.672,870,1.672,871,1.943,872,1.943]],["title/dependencies.html",[31,2.366,873,2.69]],["body/dependencies.html",[11,0.018,17,0.78,21,0.035,26,0.012,27,0.012,31,2.006,51,1.603,54,3.285,57,4.454,58,2.898,119,2.137,120,2.461,123,2.137,134,1.785,136,2.461,219,2.287,223,2.671,295,2.461,379,3.285,391,4.109,392,3.285,430,2.671,462,2.933,496,3.285,575,3.285,622,2.933,874,3.818,875,3.818,876,3.818,877,5.875,878,3.818,879,3.818,880,3.818,881,3.818,882,3.818,883,3.818,884,5.178,885,3.818,886,3.818,887,3.818,888,3.818,889,3.818,890,3.818,891,3.818,892,3.818,893,3.818,894,3.818,895,3.818,896,3.818,897,3.818,898,3.818,899,3.818,900,3.818,901,3.818,902,3.818,903,3.818,904,3.818,905,3.818,906,3.818,907,3.818,908,3.818,909,3.818,910,3.818,911,3.818,912,3.818,913,3.285,914,3.818,915,3.818,916,3.818,917,3.818,918,3.818]],["title/miscellaneous/enumerations.html",[919,1.643,920,3.873]],["body/miscellaneous/enumerations.html",[7,0.425,11,0.018,26,0.012,27,0.012,124,1.189,234,5.332,294,2.761,597,2.761,919,1.869,920,3.061,921,4.933,922,3.558,923,4.933,924,3.558,925,4.933,926,3.558,927,3.061,928,6.115,929,4.933,930,6.115,931,4.244,932,6.115,933,3.558,934,4.933,935,4.933,936,3.558,937,4.933,938,4.933,939,4.933,940,3.558,941,4.933,942,4.933,943,4.933,944,3.558,945,6.645,946,4.933,947,3.558,948,6.115,949,6.115,950,6.115,951,6.115,952,3.558,953,3.558,954,3.558]],["title/miscellaneous/functions.html",[919,1.643,955,3.873]],["body/miscellaneous/functions.html",[7,0.663,11,0.016,26,0.016,27,0.016,34,3.677,463,4.894,566,3.886,567,4.596,861,4.78,919,2.919,955,4.78,956,5.556,957,4.78]],["title/index.html",[7,0.373,958,3.126,959,3.126]],["body/index.html",[4,0.196,11,0.018,26,0.013,27,0.013,75,4.6,133,2.104,407,3.445,472,3.077,482,3.445,832,3.077,960,4.005,961,4.005,962,5.347,963,4.005,964,4.005,965,4.005,966,4.005,967,4.005,968,4.005,969,6.019,970,4.005,971,4.005,972,4.005,973,6.019,974,7.029,975,4.005,976,4.005,977,4.005,978,6.885,979,4.005,980,4.005,981,5.347,982,4.005,983,4.005,984,4.005,985,4.005,986,5.347,987,4.005,988,4.005,989,4.005,990,5.347,991,5.347,992,4.005,993,4.005,994,4.005,995,4.005,996,4.005,997,3.445,998,4.005,999,4.005,1000,4.005,1001,3.445,1002,4.005,1003,4.005,1004,4.005,1005,4.005,1006,3.445,1007,4.005,1008,4.005,1009,4.005,1010,4.005,1011,4.005,1012,4.005,1013,3.445]],["title/modules.html",[30,2.529]],["body/modules.html",[11,0.015,26,0.015,27,0.015,29,3.623,30,2.564,40,3.339,41,3.102,42,3.339,43,3.102,492,3.979,997,6.229,1014,7.241,1015,7.241,1016,7.363,1017,5.18,1018,5.18]],["title/overview.html",[1019,4.395]],["body/overview.html",[2,1.446,11,0.018,18,3.425,26,0.012,27,0.012,28,1.446,29,5.106,30,1.795,31,1.905,32,2.171,33,2.171,34,1.905,35,2.171,36,2.171,37,3.119,38,3.119,39,3.119,40,4.666,41,4.003,42,4.414,43,4.101,44,2.993,45,2.171,46,2.171,80,2.337,86,1.605,200,3.119,202,3.119,203,3.119,204,3.051,205,3.833,206,3.686,225,1.189,235,2.536,257,3.119,258,3.119,259,3.686,499,1.905,651,3.425,666,3.119,667,3.119,672,3.599,793,3.119,794,3.119,795,3.119,1019,3.119,1020,4.998,1021,3.625,1022,3.119,1023,3.625]],["title/properties.html",[154,1.476,873,2.69]],["body/properties.html",[11,0.018,26,0.016,27,0.016,154,1.858,472,4.353,913,4.874,1006,4.874,1013,4.874,1024,5.666,1025,5.666]],["title/miscellaneous/typealiases.html",[919,1.643,1026,4.502]],["body/miscellaneous/typealiases.html",[7,0.638,11,0.016,26,0.015,27,0.015,68,0.767,292,4.602,500,3.203,502,4.141,513,2.994,515,2.994,517,3.847,786,4.109,787,4.935,788,5.527,791,4.602,919,2.811,927,5.527,931,4.602,1027,5.349]],["title/miscellaneous/variables.html",[919,1.643,1028,3.873]],["body/miscellaneous/variables.html",[5,0.163,7,0.217,11,0.018,15,0.522,24,1.391,26,0.007,27,0.007,61,3.331,66,3.233,68,0.57,69,1.566,70,2.629,72,3.233,74,1.578,76,1.729,78,3.73,80,1.173,82,2.553,83,4.034,84,2.553,92,1.398,95,0.726,101,0.769,104,2.251,126,0.901,143,1.811,153,2.553,158,0.764,164,2.151,182,1.173,196,2.076,197,2.553,198,1.566,199,1.566,205,1.019,213,2.28,233,4.726,234,4.726,253,1.777,466,1.913,566,1.273,567,2.076,569,1.566,572,2.887,576,2.28,577,1.566,579,1.566,739,3.73,777,2.553,836,1.566,842,1.566,843,2.553,846,1.566,847,3.73,848,1.566,849,1.566,850,2.553,851,1.566,852,2.553,853,1.566,854,2.553,855,1.566,856,2.553,857,2.553,858,1.566,865,1.566,866,2.553,867,2.553,868,2.553,869,1.566,870,2.553,919,0.956,957,1.566,1001,1.566,1022,3.73,1028,1.566,1029,1.82,1030,1.82,1031,2.968,1032,2.968,1033,2.968,1034,3.758,1035,1.82,1036,1.82,1037,1.82,1038,2.968,1039,1.82,1040,1.82,1041,2.968,1042,1.82,1043,1.82,1044,2.968,1045,1.82,1046,1.82,1047,1.82,1048,2.968,1049,2.968,1050,2.968,1051,2.968,1052,2.968,1053,2.968,1054,2.968,1055,2.968,1056,2.968,1057,2.968,1058,2.968,1059,2.968,1060,2.968,1061,2.968,1062,2.968,1063,2.968,1064,2.968,1065,2.968,1066,1.82,1067,1.82,1068,1.82,1069,1.82,1070,1.82,1071,1.82,1072,1.82,1073,4.336,1074,1.82,1075,1.82,1076,1.82,1077,1.82,1078,1.82,1079,1.82,1080,1.82,1081,1.82,1082,3.758,1083,1.82,1084,1.82,1085,1.82,1086,2.968,1087,2.968,1088,1.82,1089,1.82,1090,1.82,1091,1.82,1092,3.758,1093,1.82,1094,1.82,1095,1.82,1096,1.82,1097,1.82,1098,1.82,1099,2.968,1100,2.968,1101,1.82,1102,1.82,1103,1.82,1104,1.82,1105,1.82,1106,1.82,1107,1.82,1108,1.82,1109,1.82,1110,1.82,1111,1.82,1112,1.82,1113,1.82,1114,1.82,1115,1.82,1116,1.82,1117,1.82,1118,1.82,1119,1.82,1120,1.82,1121,1.82,1122,1.82,1123,1.82,1124,1.82,1125,1.82,1126,1.82,1127,1.82,1128,1.82,1129,1.82,1130,1.82,1131,1.82]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":913,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()abcdefghijklmnopqrstuvwxyz",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1022,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["10.2.8",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":488,"title":{},"body":{"controllers/HealthController.html":{}}}],["110.44.123.230",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["12",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15d",{"_index":145,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["16",{"_index":1023,"title":{},"body":{"overview.html":{}}}],["16).tostring(16",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.1.1",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["17.11.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1021,"title":{},"body":{"overview.html":{}}}],["2.29.4",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":487,"title":{},"body":{"controllers/HealthController.html":{}}}],["300mb",{"_index":483,"title":{},"body":{"controllers/HealthController.html":{}}}],["3306",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":1020,"title":{},"body":{"overview.html":{}}}],["7",{"_index":235,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"overview.html":{}}}],["7.1.16",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_createtoken",{"_index":94,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["_createtoken(undefined",{"_index":98,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["accept",{"_index":403,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["accesstoken",{"_index":148,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["active",{"_index":948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addselect(\"user.password",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1027,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":490,"title":{},"body":{"controllers/HealthController.html":{}}}],["allowed",{"_index":777,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":354,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{}}}],["amazing",{"_index":998,"title":{},"body":{"index.html":{}}}],["api",{"_index":255,"title":{},"body":{"controllers/CoreController.html":{}}}],["apibody",{"_index":121,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["apiokresponse",{"_index":465,"title":{},"body":{"controllers/HealthController.html":{}}}],["apiproperty",{"_index":380,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["apitags",{"_index":122,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{}}}],["apitags(\"authentication",{"_index":137,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["apitags('core",{"_index":254,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('health",{"_index":468,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":976,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":968,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["areequal",{"_index":192,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["argumentshost",{"_index":318,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["array(4",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":700,"title":{},"body":{"injectables/TeacherService.html":{}}}],["async",{"_index":95,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["authenticate",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authenticate(req",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["authentication",{"_index":533,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["authentication/authentication.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/services/bcrypt.service",{"_index":347,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["authenticationcontroller",{"_index":91,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":40,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authguard",{"_index":118,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/TokenGuard.html":{}}}],["authguard('jwt",{"_index":722,"title":{},"body":{"injectables/TokenGuard.html":{}}}],["author",{"_index":1006,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1018,"title":{},"body":{"modules.html":{}}}],["await",{"_index":158,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":451,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":999,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":426,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["basic",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["bcrypt",{"_index":120,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(currentpassword",{"_index":199,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(password",{"_index":244,"title":{},"body":{"classes/BcryptService.html":{}}}],["bcrypt.hash(password",{"_index":245,"title":{},"body":{"classes/BcryptService.html":{}}}],["bcryptservice",{"_index":204,"title":{"classes/BcryptService.html":{}},"body":{"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["bcryptservice,userservice",{"_index":802,"title":{},"body":{"modules/UserModule.html":{}}}],["bcryptservice.salt_rounds",{"_index":246,"title":{},"body":{"classes/BcryptService.html":{}}}],["bearer",{"_index":170,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["before",{"_index":405,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["bignumberstrings",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":647,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["body.role",{"_index":774,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1016,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["building",{"_index":963,"title":{},"body":{"index.html":{}}}],["callback",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(new",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":422,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["cascade",{"_index":612,"title":{},"body":{"entities/Teacher.html":{}}}],["catch",{"_index":181,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["catch(createuserexception",{"_index":325,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{}}}],["catch(duplicateuserexception",{"_index":414,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{}}}],["catch(exception",{"_index":317,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["catcherror",{"_index":428,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":717,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["changepassword",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(id",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordforuser",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordforuser(id",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["chars",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":408,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"controllers/HealthController.html":{}}}],["class",{"_index":21,"title":{"classes/BcryptService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"classes/NestJwtStrategy.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":225,"title":{},"body":{"classes/BcryptService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"classes/NestJwtStrategy.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":200,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":202,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":203,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":257,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":258,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":666,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":668,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":667,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":793,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":795,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":794,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["colorize",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":599,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["column({type",{"_index":741,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":745,"title":{},"body":{"entities/User.html":{}}}],["combined.log",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":344,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["command.data",{"_index":360,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["command.data.phone",{"_index":356,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["command.data.username",{"_index":352,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["commandbus",{"_index":766,"title":{},"body":{"controllers/UserController.html":{}}}],["commandhandler",{"_index":345,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["commandhandler(createusercommand",{"_index":351,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["commandhandler(fetchuserbyidcommand",{"_index":445,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["commands/handlers/create",{"_index":800,"title":{},"body":{"modules/UserModule.html":{}}}],["comparepasswords",{"_index":196,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(user.password",{"_index":193,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["config/database.config",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionsource",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log('req.user",{"_index":171,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["console.log(req.user",{"_index":156,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["console.log(user",{"_index":362,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["const",{"_index":143,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/FetchUserByIdCommand.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":291,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(jwtservice",{"_index":524,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["constructor(message",{"_index":306,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TeacherController.html":{}}}],["constructor(props",{"_index":624,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["constructor(readonly",{"_index":439,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["constructor(teacherrepository",{"_index":677,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(tokenstorage",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userid",{"_index":436,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["constructor(userrepository",{"_index":340,"title":{},"body":{"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/UserService.html":{}}}],["contacttypeenum",{"_index":921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["context",{"_index":424,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["context.gethandler",{"_index":585,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.gethandler()[ignoredpropertyname",{"_index":587,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp().getrequest().reqid",{"_index":595,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":593,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('health",{"_index":469,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('teacher",{"_index":656,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('user",{"_index":770,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["core/core.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["core/http/interceptors/response",{"_index":464,"title":{},"body":{"controllers/HealthController.html":{}}}],["core/http/request/request",{"_index":128,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["core/http/response/types",{"_index":324,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["corecontroller",{"_index":248,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["coremodule",{"_index":41,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":832,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrsmodule",{"_index":218,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":308,"title":{},"body":{"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":657,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["create(createteacherdto",{"_index":634,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(createuserdto",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":757,"title":{},"body":{"controllers/UserController.html":{}}}],["createdat",{"_index":732,"title":{},"body":{"entities/User.html":{}}}],["createdatecolumn",{"_index":616,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["createquerybuilder(\"user",{"_index":824,"title":{},"body":{"injectables/UserService.html":{}}}],["createquerybuilder('user",{"_index":396,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["createteacherdto",{"_index":264,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["createteacherdto.dateofbirth",{"_index":694,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.email",{"_index":699,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.experience",{"_index":698,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.firstname",{"_index":691,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.gender",{"_index":693,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.joiningdate",{"_index":696,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.lastname",{"_index":692,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.mobile",{"_index":695,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.password",{"_index":689,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.qualification",{"_index":697,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.username",{"_index":688,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createuser",{"_index":752,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":773,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(body",{"_index":753,"title":{},"body":{"controllers/UserController.html":{}}}],["createusercommand",{"_index":288,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserHandler.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createusercommand(body",{"_index":780,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":296,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.role",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.username",{"_index":819,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserexception",{"_index":302,"title":{"classes/CreateUserException.html":{}},"body":{"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"coverage.html":{}}}],["createuserexception(`you",{"_index":776,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserexceptionfilter",{"_index":310,"title":{"classes/CreateUserExceptionFilter.html":{}},"body":{"classes/CreateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createuserexceptionfilter())@post('/user')@responsemessage('user",{"_index":756,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserhandler",{"_index":335,"title":{"classes/CreateUserHandler.html":{}},"body":{"classes/CreateUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserrequest",{"_index":363,"title":{"classes/CreateUserRequest.html":{}},"body":{"classes/CreateUserRequest.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["credentials",{"_index":177,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["ctx",{"_index":326,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":328,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["currentpage",{"_index":508,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["currentpassword",{"_index":198,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":142,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserCommand.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["data.hasownproperty('items",{"_index":591,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["data.oldpassword",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database_url",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasestrategy",{"_index":206,"title":{"injectables/DatabaseStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["databasestrategy,jwtservice",{"_index":224,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["datasource",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":276,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["dateofbirth",{"_index":267,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["days",{"_index":531,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["db_config",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_vars",{"_index":857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"classes/CreateUserRequest.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["decorators/response.decorator",{"_index":573,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["default",{"_index":233,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":222,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":650,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":641,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":472,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":581,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["descriptor.value[ignoredpropertyname",{"_index":583,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["dest",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["detail",{"_index":333,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["detail.response",{"_index":131,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["detail.response.ts",{"_index":787,"title":{},"body":{"classes/UserDetailResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail.response.ts:5",{"_index":789,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["development",{"_index":977,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":460,"title":{},"body":{"controllers/HealthController.html":{}}}],["document",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":653,"title":{},"body":{"controllers/TeacherController.html":{}}}],["dto/update",{"_index":655,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["duplicate",{"_index":415,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{}}}],["duplicateuserexception",{"_index":348,"title":{"classes/DuplicateUserException.html":{}},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["duplicateuserexception('phone",{"_index":358,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["duplicateuserexception('username",{"_index":353,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["duplicateuserexceptionfilter",{"_index":412,"title":{"classes/DuplicateUserExceptionFilter.html":{}},"body":{"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["duplicateuserexceptionfilter())@usefilters(new",{"_index":755,"title":{},"body":{"controllers/UserController.html":{}}}],["e2e",{"_index":987,"title":{},"body":{"index.html":{}}}],["eager",{"_index":613,"title":{},"body":{"entities/Teacher.html":{}}}],["editfilename",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":964,"title":{},"body":{"index.html":{}}}],["email",{"_index":268,"title":{},"body":{"classes/CreateTeacherDto.html":{},"injectables/DatabaseStrategy.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["entities",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"entities/Teacher.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/teacher.entity",{"_index":671,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["entities/user.entity",{"_index":346,"title":{},"body":{"classes/CreateUserHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":596,"title":{"entities/Teacher.html":{},"entities/User.html":{}},"body":{"entities/Teacher.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{ts,js",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["entity{.ts,.js",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":381,"title":{},"body":{"classes/CreateUserRequest.html":{},"entities/User.html":{}}}],["enumerations",{"_index":920,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":718,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":182,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":545,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["error('only",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":973,"title":{},"body":{"index.html":{}}}],["exception",{"_index":320,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{}}}],["exception.message",{"_index":334,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exceptionfilter",{"_index":316,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exceptioninterceptor",{"_index":416,"title":{"injectables/ExceptionInterceptor.html":{}},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["exceptions/create",{"_index":322,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{}}}],["exceptions/duplicate",{"_index":349,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exclude",{"_index":621,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["exclude()@column({nullable",{"_index":737,"title":{},"body":{"entities/User.html":{}}}],["exclude()@createdatecolumn",{"_index":734,"title":{},"body":{"entities/User.html":{}}}],["exclude()@updatedatecolumn",{"_index":743,"title":{},"body":{"entities/User.html":{}}}],["execute",{"_index":339,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["execute(command",{"_index":342,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["executioncontext",{"_index":420,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["exists",{"_index":355,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{}}}],["experience",{"_index":269,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["expiresin",{"_index":144,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"dependencies.html":{}}}],["expressrequest",{"_index":565,"title":{},"body":{"interfaces/Req.html":{}}}],["extends",{"_index":305,"title":{},"body":{"classes/CreateUserException.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"injectables/TokenGuard.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{}}}],["extname(file.originalname",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extra",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(req",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["failed",{"_index":184,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["false",{"_index":739,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["female",{"_index":938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":443,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["fetchuserbyidcommand",{"_index":433,"title":{"classes/FetchUserByIdCommand.html":{}},"body":{"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["fetchuserbyidhandler",{"_index":440,"title":{"classes/FetchUserByIdHandler.html":{}},"body":{"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.originalname.match",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.match(/\\.(svg|svg|jpg|jpeg|png|jpg|jpeg|png|gif",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileextname",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filename",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fill(null",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":767,"title":{},"body":{"controllers/UserController.html":{}}}],["filter.ts",{"_index":314,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["filter.ts:8",{"_index":319,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["filters/create",{"_index":312,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["filters/duplicate",{"_index":413,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["findall",{"_index":630,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":631,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":660,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":637,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["first",{"_index":409,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["firstname",{"_index":270,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["firstpageurl",{"_index":509,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["format",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.colorize",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.combine",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.json",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.timestamp",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":180,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["framework",{"_index":962,"title":{},"body":{"index.html":{}}}],["function",{"_index":578,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["functions",{"_index":955,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":271,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["genderenum",{"_index":923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generatetoken",{"_index":522,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenStorage.html":{}}}],["generatetoken(user",{"_index":526,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["get('/health",{"_index":251,"title":{},"body":{"controllers/CoreController.html":{}}}],["get(':id",{"_index":638,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["get()@apiokresponse({description",{"_index":450,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":399,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":958,"title":{"index.html":{}},"body":{}}],["globallogger",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["good",{"_index":256,"title":{},"body":{"controllers/CoreController.html":{}}}],["graph",{"_index":1017,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":994,"title":{},"body":{"index.html":{}}}],["handle",{"_index":431,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["hapi/joi",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["hashpassword",{"_index":229,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashpassword(password",{"_index":237,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashuserpassword",{"_index":230,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashuserpassword(user",{"_index":240,"title":{},"body":{"classes/BcryptService.html":{}}}],["health",{"_index":250,"title":{},"body":{"controllers/CoreController.html":{},"controllers/HealthController.html":{}}}],["health.controller",{"_index":497,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":457,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":455,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":447,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":492,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["heap",{"_index":486,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1003,"title":{},"body":{"index.html":{}}}],["high",{"_index":941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":327,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["http",{"_index":470,"title":{},"body":{"controllers/HealthController.html":{}}}],["http/controller.ts/core.controllers",{"_index":263,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/controllers/authentication.controller",{"_index":211,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["http/controllers/user.controller",{"_index":798,"title":{},"body":{"modules/UserModule.html":{}}}],["http/interceptors/response",{"_index":261,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/services/user.service",{"_index":797,"title":{},"body":{"modules/UserModule.html":{}}}],["http://localhost:3002",{"_index":478,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpexception",{"_index":112,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["httpexception(\"user",{"_index":191,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('authentication",{"_index":183,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('invalid",{"_index":176,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('user",{"_index":179,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httphealthindicator",{"_index":456,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":495,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://nestjs.com",{"_index":1010,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":113,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/UserService.html":{}}}],["httpstatus.not_acceptable",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.unauthorized",{"_index":178,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":332,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["icommandhandler",{"_index":338,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["id",{"_index":161,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id.command",{"_index":444,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["id.command.ts",{"_index":435,"title":{},"body":{"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["id.command.ts:1",{"_index":437,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["id.command.ts:6",{"_index":442,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["id.tostring",{"_index":704,"title":{},"body":{"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["ierrorbody",{"_index":323,"title":{"interfaces/IErrorBody.html":{}},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{}}}],["ignore",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["ignoredpropertyname",{"_index":576,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagefilefilter",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":167,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["implements",{"_index":315,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"classes/UserDetailResponse.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}}}],["inactive",{"_index":950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incorrect",{"_index":195,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":114,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{}}}],["inject(\"tokenstorage",{"_index":139,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["inject(jwtservice",{"_index":538,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["injectable",{"_index":85,"title":{"injectables/AppService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":132,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["injectrepository(teacher",{"_index":686,"title":{},"body":{"injectables/TeacherService.html":{}}}],["injectrepository(user",{"_index":140,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":972,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":975,"title":{},"body":{"index.html":{}}}],["instance",{"_index":501,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["instanceof",{"_index":719,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["intercept",{"_index":418,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":419,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interface",{"_index":498,"title":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["interfaces",{"_index":499,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"overview.html":{}}}],["invalid",{"_index":370,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["invitation",{"_index":404,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["isemail",{"_index":374,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isenum",{"_index":375,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isenum(role",{"_index":382,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isignored",{"_index":586,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["isnotempty",{"_index":376,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isnotempty()@apiproperty({enum",{"_index":368,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isnotempty()@isstring()@apiproperty",{"_index":366,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isodatetime",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptional",{"_index":377,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isstring",{"_index":378,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isuccessbody",{"_index":517,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["itemcount",{"_index":504,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["items",{"_index":516,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["itemsbody",{"_index":515,"title":{"interfaces/ItemsBody.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["itemsperpage",{"_index":506,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["iuserresponse",{"_index":788,"title":{},"body":{"classes/UserDetailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["joi",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1001,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":617,"title":{},"body":{"entities/Teacher.html":{}}}],["joiningdate",{"_index":272,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["jwt",{"_index":223,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"dependencies.html":{}}}],["jwtservice",{"_index":135,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstorage",{"_index":205,"title":{"injectables/JwtStorage.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jwtstorage.token_expiry",{"_index":542,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstorage.token_type",{"_index":541,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstrategy",{"_index":548,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":1007,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":273,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["lastpageurl",{"_index":510,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["later",{"_index":168,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":1013,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":991,"title":{},"body":{"index.html":{}}}],["literal",{"_index":292,"title":{},"body":{"classes/CreateUserCommand.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":392,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"dependencies.html":{}}}],["log",{"_index":406,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["logger",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["loggerconfig",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":96,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(@request",{"_index":155,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(req",{"_index":103,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["loginuser",{"_index":97,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["loginuser(req",{"_index":109,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logs/error.log",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["male",{"_index":937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytoone",{"_index":618,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["map",{"_index":569,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["map((data",{"_index":590,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memory",{"_index":484,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":461,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":253,"title":{},"body":{"controllers/CoreController.html":{},"classes/CreateUserException.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["messageformat",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["migrations",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/**/*.ts",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":919,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":990,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":274,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["mode",{"_index":981,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["mongodb+srv://${db_vars.username}:${db_vars.password}@${db_vars.host}/?retrywrites=true&w=majority",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodbhealth",{"_index":471,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosehealthindicator",{"_index":458,"title":{},"body":{"controllers/HealthController.html":{}}}],["more",{"_index":482,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["ms",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1008,"title":{},"body":{"index.html":{}}}],["name",{"_index":101,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":969,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1012,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":427,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":496,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateUserExceptionFilter.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":575,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":219,"title":{},"body":{"modules/AuthenticationModule.html":{},"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":136,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":119,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TokenGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":123,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"classes/CreateUserRequest.html":{},"controllers/HealthController.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":462,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["nestjswinstonloggerservice",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjwtstrategy",{"_index":209,"title":{"classes/NestJwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["new",{"_index":164,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":421,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe",{"_index":589,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":588,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["nextpageurl",{"_index":511,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["node.js",{"_index":961,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":685,"title":{},"body":{"injectables/TeacherService.html":{}}}],["null",{"_index":446,"title":{},"body":{"classes/FetchUserByIdHandler.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["nullable",{"_index":746,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":232,"title":{},"body":{"classes/BcryptService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserHandler.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":153,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":627,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["observable",{"_index":425,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["okr",{"_index":477,"title":{},"body":{"controllers/HealthController.html":{}}}],["omit",{"_index":791,"title":{},"body":{"classes/UserDetailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["onetoone",{"_index":619,"title":{},"body":{"entities/Teacher.html":{}}}],["onetoone(undefined",{"_index":611,"title":{},"body":{"entities/Teacher.html":{}}}],["open",{"_index":992,"title":{},"body":{"index.html":{}}}],["optional",{"_index":102,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"interfaces/IErrorBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["others",{"_index":939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1019,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":873,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationmetainterface",{"_index":503,"title":{"interfaces/PaginationMetaInterface.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{}}}],["param",{"_index":649,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["parseint(process.env.database_port",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.db_connection_pool_max",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":625,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["partialtype",{"_index":726,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createteacherdto",{"_index":725,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["partialtype(createuserdto",{"_index":729,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":391,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"dependencies.html":{}}}],["passport/strategy/database.strategy",{"_index":216,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passport/strategy/jwt.strategy",{"_index":210,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule",{"_index":208,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule.register",{"_index":221,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":393,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["passportstrategy(jwtstrategy",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":384,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["password",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwordgenerator",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordlength",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":648,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":645,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["pdffilefilter",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":357,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["pino",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pinohttp",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(catcherror((err",{"_index":432,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["please",{"_index":407,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"index.html":{}}}],["port",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":115,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["post(\"/authentication",{"_index":151,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post(\"/me",{"_index":185,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post(\"/user",{"_index":771,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/me')@apibody({schema",{"_index":110,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["postgres",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["postgresql",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["prefix",{"_index":449,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["pretty",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previouspageurl",{"_index":512,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["primary",{"_index":934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primarygeneratedcolumn",{"_index":605,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["priorityenum",{"_index":925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":93,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process",{"_index":480,"title":{},"body":{"controllers/HealthController.html":{}}}],["process.env.database_host",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_schema_sync",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_connection_pool_max",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_database",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.typeorm_query_logging",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":983,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":960,"title":{},"body":{"index.html":{}}}],["project",{"_index":993,"title":{},"body":{"index.html":{}}}],["promise",{"_index":239,"title":{},"body":{"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}}}],["promise.all",{"_index":159,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["properties",{"_index":154,"title":{"properties.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"entities/Teacher.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"properties.html":{}}}],["propertydescriptor",{"_index":582,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["propertykey",{"_index":580,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["props",{"_index":626,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["provide",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/token",{"_index":214,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public",{"_index":521,"title":{},"body":{"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{}}}],["qualification",{"_index":275,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["randomname",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${fileextname",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":1002,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":574,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["reflector().get(responsemessagekey",{"_index":584,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["refreshtoken",{"_index":165,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["rejected",{"_index":951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["remove",{"_index":632,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":664,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":640,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":133,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":104,"title":{"interfaces/Req.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"interfaces/Req.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["req.headers.host",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.method",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.password",{"_index":194,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.url",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":172,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.user.id",{"_index":162,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.user.username",{"_index":174,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.username",{"_index":186,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["reqid",{"_index":594,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["request",{"_index":116,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{}}}],["requests/create",{"_index":768,"title":{},"body":{"controllers/UserController.html":{}}}],["requesttimeoutexception",{"_index":713,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["res.statuscode",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resourcebody",{"_index":513,"title":{"interfaces/ResourceBody.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["response",{"_index":321,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["response.status(httpstatus.unprocessable_entity).json",{"_index":329,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["response/types",{"_index":571,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["response/user",{"_index":130,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["responsemessage",{"_index":466,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"backend",{"_index":474,"title":{},"body":{"controllers/HealthController.html":{}}}],["responsemessage('user",{"_index":772,"title":{},"body":{"controllers/UserController.html":{}}}],["responsemessagekey",{"_index":572,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsetime",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetransforminterceptor",{"_index":259,"title":{"injectables/ResponseTransformInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["responsetransforminterceptorignore",{"_index":463,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":473,"title":{},"body":{"controllers/HealthController.html":{}}}],["retrieved')@healthcheck()@responsetransforminterceptorignore",{"_index":453,"title":{},"body":{"controllers/HealthController.html":{}}}],["retrieved'})@responsemessage('backend",{"_index":452,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":294,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["role.staff_admin",{"_index":775,"title":{},"body":{"controllers/UserController.html":{}}}],["role.student",{"_index":749,"title":{},"body":{"entities/User.html":{}}}],["role})@isenum(role",{"_index":369,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["rss",{"_index":489,"title":{},"body":{"controllers/HealthController.html":{}}}],["run",{"_index":978,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":430,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":570,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["salt_rounds",{"_index":228,"title":{},"body":{"classes/BcryptService.html":{}}}],["scalable",{"_index":965,"title":{},"body":{"index.html":{}}}],["schema",{"_index":152,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["secondary",{"_index":935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["secret",{"_index":146,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["secretkey",{"_index":147,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["select",{"_index":738,"title":{},"body":{"entities/User.html":{}}}],["select(['user.id",{"_index":398,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["server",{"_index":966,"title":{},"body":{"index.html":{}}}],["services/bcrypt.service",{"_index":212,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{}}}],["services/user.service",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["set",{"_index":708,"title":{},"body":{"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["setmetadata(responsemessagekey",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":967,"title":{},"body":{"index.html":{}}}],["singleline",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket.io",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":996,"title":{},"body":{"index.html":{}}}],["src/.../authentication.controller.ts",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../contact.enum.ts",{"_index":922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../database.config.ts",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.ts",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db.config.ts",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.enum.ts",{"_index":924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../globallogger.ts",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.utils.ts",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password.generator.ts",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pinologgerconfig.ts",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../priority.enum.ts",{"_index":926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../response",{"_index":957,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../response.decorator.ts",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":927,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user",{"_index":931,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["src/authentication/authentication.module.ts",{"_index":207,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/http/controllers/authentication.controller",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts",{"_index":92,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:110",{"_index":111,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:25",{"_index":99,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:52",{"_index":107,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/response/user",{"_index":786,"title":{},"body":{"classes/UserDetailResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/authentication/http/token.guard.ts",{"_index":721,"title":{},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts",{"_index":383,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts:10",{"_index":386,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts:19",{"_index":388,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts:10",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts:19",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/providers/token",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/services/bcrypt.service",{"_index":799,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/authentication/services/bcrypt.service.ts",{"_index":226,"title":{},"body":{"classes/BcryptService.html":{},"coverage.html":{}}}],["src/authentication/services/bcrypt.service.ts:11",{"_index":238,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:15",{"_index":241,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:5",{"_index":236,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:7",{"_index":243,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/storage/jwt.storage.ts",{"_index":518,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{}}}],["src/authentication/storage/jwt.storage.ts:15",{"_index":532,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:16",{"_index":534,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:18",{"_index":530,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:20",{"_index":525,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:32",{"_index":527,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:45",{"_index":529,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/token.storage.ts",{"_index":723,"title":{},"body":{"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["src/common/enums/priority.enum.ts",{"_index":940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/status.enum.ts",{"_index":947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/user",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/config/database.config.ts",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database.ts",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/globallogger.ts",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/ormconfig.ts",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/pinologgerconfig.ts",{"_index":853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/db.config.ts",{"_index":855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":260,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/decorators/response.decorator",{"_index":467,"title":{},"body":{"controllers/HealthController.html":{},"controllers/UserController.html":{}}}],["src/core/decorators/response.decorator.ts",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/http/controller.ts/core.controllers.ts",{"_index":249,"title":{},"body":{"controllers/CoreController.html":{},"coverage.html":{}}}],["src/core/http/controller.ts/core.controllers.ts:8",{"_index":252,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/http/interceptors/exception.interceptor.ts",{"_index":417,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["src/core/http/interceptors/exception.interceptor.ts:12",{"_index":423,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["src/core/http/interceptors/response",{"_index":566,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/http/interceptors/timeout.interceptor.ts",{"_index":711,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/core/http/interceptors/timeout.interceptor.ts:18",{"_index":712,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/core/http/request/request.ts",{"_index":564,"title":{},"body":{"interfaces/Req.html":{},"coverage.html":{}}}],["src/core/http/response/types.ts",{"_index":500,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/health/health.controller.ts",{"_index":448,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:30",{"_index":454,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":493,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/teacher/dto/create",{"_index":265,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["src/teacher/dto/update",{"_index":724,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["src/teacher/entities/teacher.entity.ts",{"_index":598,"title":{},"body":{"entities/Teacher.html":{},"coverage.html":{}}}],["src/teacher/entities/teacher.entity.ts:16",{"_index":606,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:19",{"_index":603,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:22",{"_index":608,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:25",{"_index":604,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:28",{"_index":600,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:31",{"_index":609,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:34",{"_index":607,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:37",{"_index":610,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:40",{"_index":602,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:43",{"_index":601,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:47",{"_index":615,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/teacher.controller.ts",{"_index":629,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["src/teacher/teacher.controller.ts:11",{"_index":635,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:16",{"_index":636,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:21",{"_index":639,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:26",{"_index":646,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:31",{"_index":642,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.module.ts",{"_index":669,"title":{},"body":{"modules/TeacherModule.html":{}}}],["src/teacher/teacher.service.ts",{"_index":676,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["src/teacher/teacher.service.ts:15",{"_index":680,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:40",{"_index":681,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:44",{"_index":682,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:48",{"_index":684,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:58",{"_index":683,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:8",{"_index":678,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/user/commands/create",{"_index":289,"title":{},"body":{"classes/CreateUserCommand.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/commands/fetch",{"_index":434,"title":{},"body":{"classes/FetchUserByIdCommand.html":{},"coverage.html":{}}}],["src/user/commands/handlers/create",{"_index":336,"title":{},"body":{"classes/CreateUserHandler.html":{},"coverage.html":{}}}],["src/user/commands/handlers/fetch",{"_index":441,"title":{},"body":{"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":728,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":623,"title":{},"body":{"entities/Teacher.html":{},"modules/TeacherModule.html":{}}}],["src/user/entities/user.entity.ts",{"_index":731,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":736,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:20",{"_index":747,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:27",{"_index":740,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:35",{"_index":742,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":735,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":744,"title":{},"body":{"entities/User.html":{}}}],["src/user/exceptions/create",{"_index":303,"title":{},"body":{"classes/CreateUserException.html":{},"coverage.html":{}}}],["src/user/exceptions/duplicate",{"_index":411,"title":{},"body":{"classes/DuplicateUserException.html":{},"coverage.html":{}}}],["src/user/http/controllers/user.controller.ts",{"_index":751,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/http/controllers/user.controller.ts:23",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:38",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:43",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:48",{"_index":763,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:53",{"_index":762,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/exception",{"_index":311,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["src/user/http/requests/create",{"_index":364,"title":{},"body":{"classes/CreateUserRequest.html":{},"coverage.html":{}}}],["src/user/http/services/user.service",{"_index":673,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["src/user/http/services/user.service.ts",{"_index":803,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/http/services/user.service.ts:16",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:27",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:31",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:35",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:58",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:69",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:79",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:9",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/types.ts",{"_index":944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/user.module",{"_index":674,"title":{},"body":{"modules/TeacherModule.html":{}}}],["src/user/user.module.ts",{"_index":796,"title":{},"body":{"modules/UserModule.html":{}}}],["src/utils/enums/contact.enum.ts",{"_index":933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/gender.enum.ts",{"_index":936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/status.enum.ts",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/user",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/images.utils.ts",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/password.generator.ts",{"_index":869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":979,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":982,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":984,"title":{},"body":{"index.html":{}}}],["started",{"_index":959,"title":{"index.html":{}},"body":{}}],["starter",{"_index":971,"title":{},"body":{"index.html":{}}}],["statements",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":227,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["status",{"_index":331,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/HealthController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["statuscode",{"_index":592,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["statusenum",{"_index":928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":1004,"title":{},"body":{"index.html":{}}}],["storage.provider",{"_index":215,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storage.provider.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage/jwt.storage",{"_index":217,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storage/token.storage",{"_index":127,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["strategy",{"_index":390,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/CoreController.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/FetchUserByIdCommand.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sub",{"_index":537,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["successfully",{"_index":758,"title":{},"body":{"controllers/UserController.html":{}}}],["super",{"_index":394,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["super(message",{"_index":309,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["super(props",{"_index":792,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["supplied",{"_index":371,"title":{},"body":{"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{}}}],["support",{"_index":997,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1015,"title":{},"body":{"modules.html":{}}}],["svg|svg|jpg|jpeg|png|jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('ignoredpropertyname",{"_index":577,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":514,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["table",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":579,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["teacher",{"_index":597,"title":{"entities/Teacher.html":{}},"body":{"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["teacher.controller",{"_index":670,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":654,"title":{},"body":{"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":266,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:10",{"_index":278,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:11",{"_index":287,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:12",{"_index":285,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:2",{"_index":280,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:3",{"_index":283,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:4",{"_index":281,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:5",{"_index":277,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:6",{"_index":284,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:7",{"_index":282,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:8",{"_index":286,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:9",{"_index":279,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.service",{"_index":652,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["teachercontroller",{"_index":628,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teachermodule",{"_index":42,"title":{"modules/TeacherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeacherModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":679,"title":{},"body":{"injectables/TeacherService.html":{}}}],["teacherservice",{"_index":651,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["terminusmodule",{"_index":494,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covsupport",{"_index":989,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":988,"title":{},"body":{"index.html":{}}}],["test@1234",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["testdb",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["tests",{"_index":986,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":995,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bcrypt.hashpassword(command.data.password",{"_index":361,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["this.bcrypt.hashpassword(data.password",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bcryptservice.verifycredentials(user",{"_index":410,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["this.commandbus.execute(new",{"_index":779,"title":{},"body":{"controllers/UserController.html":{}}}],["this.fail(401",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.hashpassword(user.password",{"_index":247,"title":{},"body":{"classes/BcryptService.html":{}}}],["this.health.check",{"_index":475,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('base",{"_index":476,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice",{"_index":539,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.jwtservice.sign(user",{"_index":149,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.jwtservice.signasync",{"_index":540,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":543,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":485,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":491,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.mongodbhealth.pingcheck('database",{"_index":479,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.success(user",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.teacherrepository.create",{"_index":690,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.createquerybuilder(\"teacher\").getmany",{"_index":702,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.createquerybuilder(\"user",{"_index":705,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.delete(id",{"_index":709,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.findone",{"_index":703,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.save(teacher",{"_index":701,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":658,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":659,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findone(+id",{"_index":661,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.remove(id",{"_index":665,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.update(+id",{"_index":663,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.tokenstorage",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.tokenstorage.generatetoken",{"_index":187,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.tokenstorage.generatetoken(req.user",{"_index":163,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.tokenstorage.validatetoken(token",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.userrepository",{"_index":395,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["this.userrepository.create",{"_index":818,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user\").getmany",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(id",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":160,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail",{"_index":546,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.userrepository.insert",{"_index":359,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["this.userrepository.save(user",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create",{"_index":687,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.userservice.create(createuserdto",{"_index":781,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":782,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(+id",{"_index":783,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":785,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":784,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":175,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["throwerror",{"_index":429,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":714,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(1000",{"_index":716,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":715,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":710,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["title",{"_index":330,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["todo",{"_index":166,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["token",{"_index":157,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}}}],["token.storage",{"_index":535,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["token_expiry",{"_index":519,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["token_type",{"_index":520,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenbody",{"_index":536,"title":{"interfaces/TokenBody.html":{}},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{}}}],["tokenbody.sub",{"_index":547,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenbody.type",{"_index":544,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenguard",{"_index":720,"title":{"injectables/TokenGuard.html":{}},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["tokenstorage",{"_index":126,"title":{"interfaces/TokenStorage.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorageprovider",{"_index":213,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokentype",{"_index":169,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["totalitems",{"_index":505,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["totalpages",{"_index":507,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["touch",{"_index":1005,"title":{},"body":{"index.html":{}}}],["transform.interceptor",{"_index":262,"title":{},"body":{"modules/CoreModule.html":{},"controllers/HealthController.html":{}}}],["transform.interceptor.ts",{"_index":567,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["transform.interceptor.ts:29",{"_index":568,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["transformer",{"_index":622,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transport",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.console",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.file",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn",{"_index":614,"title":{},"body":{"entities/Teacher.html":{}}}],["try",{"_index":173,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["ts",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["twitter",{"_index":1011,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1026,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":134,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":459,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([teacher,user]),usermodule",{"_index":675,"title":{},"body":{"modules/TeacherModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":220,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot(dbconfig",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":295,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"entities/User.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":970,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":389,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":400,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["unauthorizedexception('you",{"_index":402,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["undefined",{"_index":106,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{}}}],["unique",{"_index":748,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":985,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":108,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1025,"title":{},"body":{"properties.html":{}}}],["update",{"_index":633,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":662,"title":{},"body":{"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":643,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(teacher",{"_index":706,"title":{},"body":{"injectables/TeacherService.html":{}}}],["update(user",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":733,"title":{},"body":{"entities/User.html":{}}}],["updatedatecolumn",{"_index":620,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["updateteacherdto",{"_index":644,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":727,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["use",{"_index":481,"title":{},"body":{"controllers/HealthController.html":{}}}],["useclass",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefilters",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["usefilters(new",{"_index":754,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards",{"_index":117,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(authguard(\"local",{"_index":150,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(undefined)@post('/authentication')@apibody({schema",{"_index":105,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user",{"_index":124,"title":{"entities/User.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"entities/Teacher.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.command",{"_index":350,"title":{},"body":{"classes/CreateUserHandler.html":{},"controllers/UserController.html":{}}}],["user.command.ts",{"_index":290,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:3",{"_index":293,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["user.confirmedat",{"_index":401,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["user.dto",{"_index":730,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:4",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.exception",{"_index":313,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["user.exception.ts",{"_index":304,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{},"coverage.html":{}}}],["user.exception.ts:1",{"_index":307,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["user.handler",{"_index":801,"title":{},"body":{"modules/UserModule.html":{}}}],["user.handler.ts",{"_index":337,"title":{},"body":{"classes/CreateUserHandler.html":{},"coverage.html":{}}}],["user.handler.ts:10",{"_index":341,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["user.handler.ts:17",{"_index":343,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["user.id",{"_index":188,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["user.password",{"_index":190,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"injectables/DatabaseStrategy.html":{}}}],["user.request",{"_index":769,"title":{},"body":{"controllers/UserController.html":{}}}],["user.request.ts",{"_index":365,"title":{},"body":{"classes/CreateUserRequest.html":{},"coverage.html":{}}}],["user.request.ts:14",{"_index":367,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.request.ts:21",{"_index":372,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.request.ts:9",{"_index":373,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.username",{"_index":189,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/DatabaseStrategy.html":{}}}],["user/entities/user.entity",{"_index":125,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"classes/UserDetailResponse.html":{}}}],["user/user.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":750,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":778,"title":{},"body":{"controllers/UserController.html":{}}}],["userdetailresponse",{"_index":129,"title":{"classes/UserDetailResponse.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/UserDetailResponse.html":{},"coverage.html":{}}}],["userid",{"_index":438,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["usermodule",{"_index":43,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userpassword",{"_index":197,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":141,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":672,"title":{"injectables/UserService.html":{}},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertypeenum",{"_index":930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validate",{"_index":385,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["validate(username",{"_index":387,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["validatetoken",{"_index":523,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenStorage.html":{}}}],["validatetoken(token",{"_index":528,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["validationerrors",{"_index":502,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"miscellaneous/typealiases.html":{}}}],["validator",{"_index":379,"title":{},"body":{"classes/CreateUserRequest.html":{},"dependencies.html":{}}}],["value",{"_index":234,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1028,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifycredentials",{"_index":231,"title":{},"body":{"classes/BcryptService.html":{}}}],["verifycredentials(user",{"_index":242,"title":{},"body":{"classes/BcryptService.html":{}}}],["version",{"_index":1024,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":980,"title":{},"body":{"index.html":{}}}],["website",{"_index":1009,"title":{},"body":{"index.html":{}}}],["where(\"user.id=:id",{"_index":707,"title":{},"body":{"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["where('user.username",{"_index":397,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["winston",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["winston.format.simple",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":974,"title":{},"body":{"index.html":{}}}],["yes",{"_index":790,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["you'd",{"_index":1000,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nAppModule -->\n\nTeacherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthenticationModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            TeacherModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CoreModule } from './core/core.module';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { TeacherModule } from './teacher/teacher.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport dbconfig from './config/database.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(dbconfig),\n    MulterModule.register({\n      dest: './files',\n    }),\n    ConfigModule.forRoot(),\n    CoreModule,\n    UserModule,\n    TeacherModule,\n    AuthenticationModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n\n// {\n//   type: 'postgres',\n//   host: '110.44.123.230',\n//   port: 5432,\n//   username: 'test',\n//   password: 'test@1234',\n//   database: 'testdb',\n//   // entities: ['../**/*.entity.{ts,js}'],\n//   synchronize: true,\n//   autoLoadEntities: true,\n// }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/controllers/authentication.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                loginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _createToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    _createToken(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('/authentication')@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Req\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/me')@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpException, HttpStatus, Inject, Post, Request, UseGuards } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport * as bcrypt from \"bcrypt\";\n\nimport { ApiBody, ApiTags } from \"@nestjs/swagger\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\nimport { Req } from \"../../../core/http/request/request\";\nimport { UserDetailResponse } from \"../response/user-detail.response\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@ApiTags(\"Authentication\")\n@Controller()\nexport class AuthenticationController {\n  constructor(\n    private jwtService: JwtService,\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage,\n    @InjectRepository(User)\n    private readonly userRepository: Repository\n  ) {\n  }\n  private _createToken({ data }): any {\n    const expiresIn = '15d';\n    const secret = \"secretkey\";\n    const user = { data };\n    const accessToken = this.jwtService.sign(user);\n    return {\n      secret,\n      expiresIn,\n      accessToken,\n    };\n  }\n\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"/authentication\")\n  @ApiBody({\n    schema: {\n      type: \"object\",\n      properties: {\n        username: {\n          type: \"string\"\n        },\n        password: {\n          type: \"string\"\n        }\n      }\n    }\n  })\n  async login(@Request() req: Req) {\n    console.log(req.user)\n    const [user, token] = await Promise.all([\n      await this.userRepository.findOne({ where: { id: req.user.id } }),\n      this.tokenStorage.generateToken(req.user)\n    ]);\n    return {\n      user: new UserDetailResponse({\n        ...user\n      }),\n      accessToken: token,\n      refreshToken: token, // Todo: will implement later\n      tokenType: \"bearer\"\n    };\n  }\n  // async login(@Request() req: Req) {\n  //   console.log('req.user:', req.user);\n  //    try {\n  //     if (!req.user || !req.user.username) {\n  //       throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n  //     }\n  \n  //     const [user, token] = await Promise.all([\n  //       await this.userRepository.findOne({ where: { id: req.user.id } }),\n  //       this.tokenStorage.generateToken(req.user)\n  //     ]);\n  \n  //     if (!user) {\n  //       throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n  //     }\n  \n  //     return {\n  //       user: new UserDetailResponse({\n  //         ...user\n  //       }),\n  //       accessToken: token,\n  //       refreshToken: token, // Todo: will implement later\n  //       tokenType: \"bearer\"\n  //     };\n  //   } catch (error) {\n  //     throw new HttpException('Authentication failed', HttpStatus.UNAUTHORIZED);\n  //   }\n  // }\n\n  @Post(\"/me\")\n  @ApiBody({\n    schema: {\n      type: \"object\",\n      properties: {\n        username: {\n          type: \"string\"\n        },\n        password: {\n          type: \"string\"\n        }\n      }\n    }\n  })\n  async loginUser(req) {\n    const user = await this.userRepository.findOne({ where: { username: req.username } });\n    const token = await this.tokenStorage.generateToken({\n      data: {\n        id: user.id,\n        username: user.username,\n        password: user.password\n      }\n    });\n\n\n\n    if (!user) {\n      throw new HttpException(\"User not found\", HttpStatus.UNAUTHORIZED);\n    }\n\n\n    const areEqual = await comparePasswords(user.password, req.password);\n\n    if (!areEqual) {\n      throw new HttpException(\n        \"Username or password is incorrect\",\n        HttpStatus.UNAUTHORIZED\n      );\n    } else {\n      return {\n        user: new UserDetailResponse({\n          ...user\n        }),\n        accessToken: token,\n        refreshToken: token, // Todo: will implement later\n        tokenType: \"bearer\"\n      };\n    }\n  }\n}\n\n\nexport const comparePasswords = async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nCoreModule->AuthenticationModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nAuthenticationModule->BcryptService \n\n\n\n\n\nJwtStorage \n\nJwtStorage \n\nJwtStorage  -->\n\nAuthenticationModule->JwtStorage \n\n\n\n\n\nDatabaseStrategy\n\nDatabaseStrategy\n\nAuthenticationModule -->\n\nDatabaseStrategy->AuthenticationModule\n\n\n\n\n\nJwtStorage\n\nJwtStorage\n\nAuthenticationModule -->\n\nJwtStorage->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseStrategy\n                        \n                        \n                            JwtStorage\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BcryptService\n                        \n                        \n                            JwtStorage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { User } from \"../user/entities/user.entity\";\nimport { NestJwtStrategy } from \"./passport/strategy/jwt.strategy\";\nimport { AuthenticationController } from \"./http/controllers/authentication.controller\";\nimport { BcryptService } from \"./services/bcrypt.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TokenStorageProvider } from \"./providers/token-storage.provider\";\nimport { DatabaseStrategy } from \"./passport/strategy/database.strategy\";\nimport { CoreModule } from \"../core/core.module\";\nimport { JwtStorage } from \"./storage/jwt.storage\";\nimport { CqrsModule } from \"@nestjs/cqrs\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Module({\n  imports: [CqrsModule, TypeOrmModule.forFeature([User]), CoreModule, PassportModule.register({ defaultStrategy: \"jwt\" })],\n  providers: [DatabaseStrategy,JwtService, NestJwtStrategy, TokenStorageProvider, BcryptService, JwtStorage],\n  controllers: [AuthenticationController],\n  exports: [BcryptService, JwtStorage]\n})\nexport class AuthenticationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BcryptService.html":{"url":"classes/BcryptService.html","title":"class - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/services/bcrypt.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                SALT_ROUNDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                            \n                                    Async\n                                hashUserPassword\n                            \n                            \n                                verifyCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        SALT_ROUNDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in src/authentication/services/bcrypt.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n            \n                \nhashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashUserPassword(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCredentials\n                        \n                    \n                \n            \n            \n                \nverifyCredentials(user: User, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { User } from '../../user/entities/user.entity';\n\nexport class BcryptService {\n  private static readonly SALT_ROUNDS: number = 7;\n\n  verifyCredentials(user: User, password: string): Promise {\n    return bcrypt.compare(password, user.password);\n  }\n\n  hashPassword(password: string): Promise {\n    return bcrypt.hash(password, BcryptService.SALT_ROUNDS);\n  }\n\n  async hashUserPassword(user: User): Promise {\n    return {\n      ...user,\n      password: await this.hashPassword(user.password),\n    } as User;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/controller.ts/core.controllers.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                health\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        health\n                        \n                    \n                \n            \n            \n                \n                        \n                    health()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/health')\n                \n            \n\n                    \n                        \n                            Defined in src/core/http/controller.ts/core.controllers.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Core API')\n@Controller()\nexport class CoreController {\n  @Get('/health')\n  health() {\n    return {\n      message: 'All good!',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nResponseTransformInterceptor\n\nResponseTransformInterceptor\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nResponseTransformInterceptor->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResponseTransformInterceptor\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResponseTransformInterceptor } from './http/interceptors/response-transform.interceptor';\nimport { CoreController } from './http/controller.ts/core.controllers';\n\n@Module({\n  imports: [],\n  providers: [ResponseTransformInterceptor],\n  controllers: [CoreController],\n  exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/dto/create-teacher.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                experience\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                joiningDate\n                            \n                            \n                                lastName\n                            \n                            \n                                mobile\n                            \n                            \n                                password\n                            \n                            \n                                qualification\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joiningDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTeacherDto {\n  firstName: string;\n  lastName: string;\n  gender: string;\n  dateOfBirth: Date;\n  mobile: string;\n  joiningDate: Date;\n  qualification: string;\n  experience: number;\n  email: string;\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/create-user.command.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../types\";\n\nexport class CreateUserCommand {\n  constructor(\n    readonly data: {\n      readonly username: string;\n      readonly password: string;\n      readonly role: Role;\n    },\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../types\";\n\nexport class CreateUserDto {\n    username: string;\n    password: string;\n    role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserException.html":{"url":"classes/CreateUserException.html","title":"class - CreateUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/exceptions/create-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/exceptions/create-user.exception.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserException extends Error {\n  constructor(message = 'Could not create user.') {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserExceptionFilter.html":{"url":"classes/CreateUserExceptionFilter.html","title":"class - CreateUserExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/exception-filters/create-user.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: CreateUserException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/exception-filters/create-user.exception-filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            CreateUserException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { CreateUserException } from '../../exceptions/create-user.exception';\nimport { IErrorBody } from '../../../core/http/response/types';\n\n@Catch(CreateUserException)\nexport class CreateUserExceptionFilter implements ExceptionFilter {\n  catch(exception: CreateUserException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      title: 'Could not create user',\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      detail: exception.message,\n    } as IErrorBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserHandler.html":{"url":"classes/CreateUserHandler.html","title":"class - CreateUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/handlers/create-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcrypt: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/handlers/create-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcrypt\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/commands/handlers/create-user.handler.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateUserCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entities/user.entity';\nimport { BcryptService } from '../../../authentication/services/bcrypt.service';\nimport { DuplicateUserException } from '../../exceptions/duplicate-user.exception';\nimport { CreateUserCommand } from '../create-user.command';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly bcrypt: BcryptService,\n  ) {}\n\n  async execute(command: CreateUserCommand): Promise {\n    if (await this.userRepository.findOne({ where: { username: command.data.username } })) {\n      throw new DuplicateUserException('Username already exists');\n    }\n\n    // if (command.data.phone && (await this.userRepository.findOne({ where: { phone: command.data.phone } }))) {\n    //   throw new DuplicateUserException('Phone number already exists');\n    // }\n\n    const user = await this.userRepository.insert({ ...command.data, password: await this.bcrypt.hashPassword(command.data.password) });\n    console.log(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRequest.html":{"url":"classes/CreateUserRequest.html","title":"class - CreateUserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/requests/create-user.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty({enum: Role})@IsEnum(Role, {message: 'Invalid role supplied'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from '../../types';\n\nexport class  CreateUserRequest {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty()\n  readonly password: string;\n\n  @IsNotEmpty()\n  @ApiProperty({ enum: Role })\n  @IsEnum(Role, {\n    message: 'Invalid role supplied',\n  })\n  readonly role: Role;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseStrategy.html":{"url":"injectables/DatabaseStrategy.html","title":"injectable - DatabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/database.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcryptService: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/passport/strategy/database.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptService\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/passport/strategy/database.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { User } from '../../../user/entities/user.entity';\nimport { BcryptService } from '../../services/bcrypt.service';\n\n@Injectable()\nexport class DatabaseStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly bcryptService: BcryptService,\n  ) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.userRepository\n      .createQueryBuilder('user')\n      .where('user.username = :username', {\n        username,\n      })\n      .select(['user.id', 'user.username', 'user.password'])\n      .getOne();\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid username or password supplied');\n    }\n\n    // if (!user.confirmedAt) {\n    //   throw new UnauthorizedException('You must accept the invitation before you log in. Please check your email first.');\n    // }\n\n    if (await this.bcryptService.verifyCredentials(user, password)) {\n      return user;\n    }\n\n    throw new UnauthorizedException('Invalid username or password supplied');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUserException.html":{"url":"classes/DuplicateUserException.html","title":"class - DuplicateUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/exceptions/duplicate-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/exceptions/duplicate-user.exception.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DuplicateUserException extends Error {\n  constructor(message = 'User already exists') {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUserExceptionFilter.html":{"url":"classes/DuplicateUserExceptionFilter.html","title":"class - DuplicateUserExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUserExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/exception-filters/duplicate-user.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: DuplicateUserException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/exception-filters/duplicate-user.exception-filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            DuplicateUserException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { DuplicateUserException } from '../../exceptions/duplicate-user.exception';\nimport { IErrorBody } from '../../../core/http/response/types';\n\n@Catch(DuplicateUserException)\nexport class DuplicateUserExceptionFilter implements ExceptionFilter {\n  catch(exception: DuplicateUserException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      title: 'Duplicate user',\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      detail: exception.message,\n    } as IErrorBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionInterceptor.html":{"url":"injectables/ExceptionInterceptor.html","title":"injectable - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/exception.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/exception.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadGatewayException,\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(catchError((err) => throwError(() => new BadGatewayException())));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserByIdCommand.html":{"url":"classes/FetchUserByIdCommand.html","title":"class - FetchUserByIdCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserByIdCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/fetch-user-by-id.command.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/fetch-user-by-id.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FetchUserByIdCommand{\n  constructor(readonly userId: string) {\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserByIdHandler.html":{"url":"classes/FetchUserByIdHandler.html","title":"class - FetchUserByIdHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserByIdHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/handlers/fetch-user-by-id.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: FetchUserByIdCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/commands/handlers/fetch-user-by-id.command.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            FetchUserByIdCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from \"@nestjs/cqrs\";\nimport { FetchUserByIdCommand } from \"../fetch-user-by-id.command\";\n\n@CommandHandler(FetchUserByIdCommand)\nclass FetchUserByIdHandler implements ICommandHandler{\n  async execute(command: FetchUserByIdCommand): Promise {\n    return null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Backend Health status retrieved'})@ResponseMessage('Backend Health status retrieved')@HealthCheck()@ResponseTransformInterceptorIgnore()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  MongooseHealthIndicator,\n  TypeOrmHealthIndicator,\n  DiskHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\nimport { ResponseTransformInterceptorIgnore } from '../core/http/interceptors/response-transform.interceptor';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\n\n@ApiTags('Health Check')\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private mongoDBHealth: MongooseHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Backend Health status retrieved' })\n  @ResponseMessage(\"Backend Health status retrieved\")\n  @HealthCheck()\n  @ResponseTransformInterceptorIgnore()\n  check() {\n    // return this.health.check([() => this.http.pingCheck('base-OKR', 'http://localhost:3002')]);\n    return this.health.check([\n      () => this.mongoDBHealth.pingCheck('database'),\n      // the process should not use more than 300MB memory\n      () =>\n        this.memoryHealthIndicator.checkHeap('memory heap', 300 * 1024 * 1024),\n      // The process should not have more than 300MB RSS memory allocated\n      () =>\n        this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorBody.html":{"url":"interfaces/IErrorBody.html","title":"interface - IErrorBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validationErrors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationErrors:         ValidationErrors\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidationErrors\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemsBody.html":{"url":"interfaces/ItemsBody.html","title":"interface - ItemsBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemsBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStorage.html":{"url":"injectables/JwtStorage.html","title":"injectable - JwtStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/jwt.storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                jwtService\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TOKEN_EXPIRY\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TOKEN_TYPE\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateToken\n                            \n                            \n                                    Public\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/storage/jwt.storage.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/storage/jwt.storage.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/storage/jwt.storage.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        jwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtService\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TOKEN_EXPIRY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '7 days'\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TOKEN_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authentication'\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { TokenStorage } from './token.storage';\n\ninterface TokenBody {\n  readonly type: string;\n  readonly sub: string;\n}\n\n@Injectable()\nexport class JwtStorage implements TokenStorage {\n  private static readonly TOKEN_EXPIRY = '7 days';\n  private static readonly TOKEN_TYPE = 'authentication';\n\n  private readonly jwtService: JwtService;\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  constructor(\n    @Inject(JwtService)\n    jwtService: JwtService,\n    @InjectRepository(User)\n    userRepository: Repository,\n  ) {\n    this.jwtService = jwtService;\n    this.userRepository = userRepository;\n  }\n\n  public async generateToken(user: User): Promise {\n    return this.jwtService.signAsync(\n      {\n        type: JwtStorage.TOKEN_TYPE,\n        sub: user.id,\n      } as TokenBody,\n      {\n        expiresIn: JwtStorage.TOKEN_EXPIRY,\n        secret: 'secretkey'\n      },\n    );\n  }\n\n  public async validateToken(token: string): Promise {\n    const tokenBody: TokenBody = await this.jwtService.verifyAsync(token);\n    if (tokenBody.type !== JwtStorage.TOKEN_TYPE) {\n      throw new Error('Invalid token');\n    }\n\n    return this.userRepository.findOneOrFail({ where: { id: tokenBody.sub } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Strategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/passport/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/passport/strategy/jwt.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from \"passport-strategy\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { Request } from \"express\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\n\n@Injectable()\nexport class JwtStrategy extends Strategy {\n  constructor(\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage\n  ) { \n    super();\n    this.tokenStorage = tokenStorage;\n  }\n\n  public async authenticate(req: Request): Promise {\n    const token: string | null = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n\n    if (!token) {\n      // @ts-ignore\n      return this.fail(401);\n    }\n\n    try {\n      const user: User = await this.tokenStorage.validateToken(token);\n      // @ts-ignore\n      this.success(user);\n\n    } catch {\n      // @ts-ignore\n      this.fail(401);\n    }\n  }\n}\n\nexport class NestJwtStrategy extends PassportStrategy(JwtStrategy, \"jwt\") {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestJwtStrategy.html":{"url":"classes/NestJwtStrategy.html","title":"class - NestJwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestJwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(JwtStrategy, \"jwt\")\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Strategy } from \"passport-strategy\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { Request } from \"express\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\n\n@Injectable()\nexport class JwtStrategy extends Strategy {\n  constructor(\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage\n  ) { \n    super();\n    this.tokenStorage = tokenStorage;\n  }\n\n  public async authenticate(req: Request): Promise {\n    const token: string | null = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n\n    if (!token) {\n      // @ts-ignore\n      return this.fail(401);\n    }\n\n    try {\n      const user: User = await this.tokenStorage.validateToken(token);\n      // @ts-ignore\n      this.success(user);\n\n    } catch {\n      // @ts-ignore\n      this.fail(401);\n    }\n  }\n}\n\nexport class NestJwtStrategy extends PassportStrategy(JwtStrategy, \"jwt\") {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationMetaInterface.html":{"url":"interfaces/PaginationMetaInterface.html","title":"interface - PaginationMetaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationMetaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstPageUrl\n                                        \n                                \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            itemsPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastPageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nextPageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            previousPageUrl\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previousPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previousPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Req.html":{"url":"interfaces/Req.html","title":"interface - Req","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Req\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/request/request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpressRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request as ExpressRequest } from 'express';\n\nexport interface Req extends ExpressRequest {\n  readonly user: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceBody.html":{"url":"interfaces/ResourceBody.html","title":"interface - ResourceBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseTransformInterceptor.html":{"url":"injectables/ResponseTransformInterceptor.html","title":"injectable - ResponseTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/response-transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/response-transform.interceptor.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ISuccessBody } from '../response/types';\nimport { ResponseMessageKey } from '../../decorators/response.decorator';\nimport { Reflector } from '@nestjs/core';\n\nconst IgnoredPropertyName = Symbol('IgnoredPropertyName');\n\nexport function ResponseTransformInterceptorIgnore() {\n  return function (\n    target,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    descriptor.value[IgnoredPropertyName] = true;\n  };\n}\n\n@Injectable()\nexport class ResponseTransformInterceptor\n  implements NestInterceptor | null>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | null> {\n    const responseMessage =\n      new Reflector().get(ResponseMessageKey, context.getHandler()) ??\n      '';\n    const isIgnored = context.getHandler()[IgnoredPropertyName];\n    if (!!isIgnored) {\n      return next.handle().pipe(map((data) => data));\n    }\n\n    return next.handle().pipe(\n      map((data: ISuccessBody | undefined) => {\n        if (data === undefined) {\n          return null;\n        }\n\n        if (data.hasOwnProperty('items')) {\n          return data;\n        }\n\n        return {\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          reqId: context.switchToHttp().getRequest().reqId,\n          message: responseMessage ?? '',\n          data,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Teacher.html":{"url":"entities/Teacher.html","title":"entity - Teacher","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/entities/teacher.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                experience\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                joiningDate\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                mobile\n                            \n                            \n                                    \n                                qualification\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joiningDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true, eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, OneToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Exclude } from 'class-transformer';\nimport { User } from \"src/user/entities/user.entity\";\n\n\n\n@Entity()\nexport class Teacher {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  gender: string;\n\n  @Column()\n  dateOfBirth: Date;\n\n  @Column()\n  mobile: string;\n\n  @Column()\n  joiningDate: Date;\n\n  @Column()\n  qualification: string;\n\n  @Column()\n  experience: number;\n\n  @Column()\n  email: string;\n\n  @OneToOne(() => User, { cascade: true, eager: true })\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teacher\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTeacherDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTeacherDto: UpdateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTeacherDto\n                                            \n                                                            UpdateTeacherDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { UpdateTeacherDto } from './dto/update-teacher.dto';\n\n@Controller('teacher')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  @Post()\n  create(@Body() createTeacherDto: any) {\n    return this.teacherService.create(createTeacherDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.teacherService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.teacherService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTeacherDto: UpdateTeacherDto) {\n    return this.teacherService.update(+id, updateTeacherDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.teacherService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TeacherModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nUserModule->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teacher/teacher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Teacher } from './entities/teacher.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Teacher,User]),UserModule],\n  controllers: [TeacherController],\n  providers: [TeacherService],\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/teacher.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/teacher/teacher.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTeacherDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Teacher } from './entities/teacher.entity';\nimport { UserService } from 'src/user/http/services/user.service';\n\n@Injectable()\nexport class TeacherService {\n  constructor(\n    @InjectRepository(Teacher)\n    private teacherRepository: Repository,\n    private readonly userService: UserService,\n  ) {}\n\n  async create(createTeacherDto: any) {\n    const user = await this.userService.create({\n      username: createTeacherDto.username,\n      password: createTeacherDto.password,\n      role: 'teacher',\n    });\n\n    // Create teacher with the user ID\n    const teacher = this.teacherRepository.create({\n      firstName: createTeacherDto.firstName,\n      lastName: createTeacherDto.lastName,\n      gender: createTeacherDto.gender,\n      dateOfBirth: createTeacherDto.dateOfBirth,\n      mobile: createTeacherDto.mobile,\n      joiningDate: createTeacherDto.joiningDate,\n      qualification: createTeacherDto.qualification,\n      experience: createTeacherDto.experience,\n      email: createTeacherDto.email,\n      user: user, // Assign the user entity\n    });\n\n    return this.teacherRepository.save(teacher);\n  }\n  \n\n  async findAll(){\n    return this.teacherRepository.createQueryBuilder(\"teacher\").getMany();\n  }\n\n  async findOne(id: number) {\n    return this.teacherRepository.findOne({ where: { id: id.toString() } });\n  }\n\n  async update(id, data) {\n    return this.teacherRepository.createQueryBuilder(\"user\")\n      .update(Teacher)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.teacherRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/timeout.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/timeout.interceptor.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport {\n  catchError,\n  Observable,\n  throwError,\n  timeout,\n  TimeoutError,\n} from 'rxjs';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(1000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => new Error());\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenBody.html":{"url":"interfaces/TokenBody.html","title":"interface - TokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/jwt.storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { TokenStorage } from './token.storage';\n\ninterface TokenBody {\n  readonly type: string;\n  readonly sub: string;\n}\n\n@Injectable()\nexport class JwtStorage implements TokenStorage {\n  private static readonly TOKEN_EXPIRY = '7 days';\n  private static readonly TOKEN_TYPE = 'authentication';\n\n  private readonly jwtService: JwtService;\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  constructor(\n    @Inject(JwtService)\n    jwtService: JwtService,\n    @InjectRepository(User)\n    userRepository: Repository,\n  ) {\n    this.jwtService = jwtService;\n    this.userRepository = userRepository;\n  }\n\n  public async generateToken(user: User): Promise {\n    return this.jwtService.signAsync(\n      {\n        type: JwtStorage.TOKEN_TYPE,\n        sub: user.id,\n      } as TokenBody,\n      {\n        expiresIn: JwtStorage.TOKEN_EXPIRY,\n        secret: 'secretkey'\n      },\n    );\n  }\n\n  public async validateToken(token: string): Promise {\n    const tokenBody: TokenBody = await this.jwtService.verifyAsync(token);\n    if (tokenBody.type !== JwtStorage.TOKEN_TYPE) {\n      throw new Error('Invalid token');\n    }\n\n    return this.userRepository.findOneOrFail({ where: { id: tokenBody.sub } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenGuard.html":{"url":"injectables/TokenGuard.html","title":"injectable - TokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class TokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenStorage.html":{"url":"interfaces/TokenStorage.html","title":"interface - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/token.storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            generateToken\n                                        \n                                \n                                \n                                        \n                                            validateToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../../user/entities/user.entity';\n\nexport interface TokenStorage {\n  readonly generateToken: (user: any) => Promise;\n  readonly validateToken: (token: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/dto/update-teacher.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateTeacherDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Exclude } from 'class-transformer';\nimport { Role } from \"../types\";\n\n@Entity()\nexport class User {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column({\n    unique: true,\n    nullable: false,\n  })\n  username: string;\n\n  @Exclude()\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  readonly password: string;\n\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    default: Role.student,\n  })\n  role: Role;\n\n  @Exclude()\n  @CreateDateColumn()\n  readonly createdAt: Date;\n\n  @Exclude()\n  @UpdateDateColumn()\n  readonly updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(body: CreateUserRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new DuplicateUserExceptionFilter())@UseFilters(new CreateUserExceptionFilter())@Post('/user')@ResponseMessage('User created successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseFilters } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\nimport { UpdateUserDto } from '../../dto/update-user.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from 'src/user/commands/create-user.command';\nimport { CreateUserExceptionFilter } from '../exception-filters/create-user.exception-filter';\nimport { DuplicateUserExceptionFilter } from '../exception-filters/duplicate-user.exception-filter';\nimport { CreateUserRequest } from '../requests/create-user.request';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\n\n@Controller('user')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly commandBus: CommandBus\n    ) {\n  }\n\n  @UseFilters(new DuplicateUserExceptionFilter())\n  @UseFilters(new CreateUserExceptionFilter())\n  @Post(\"/user\")\n  @ResponseMessage('User created successfully')\n  async createUser(@Body() body: CreateUserRequest) {\n    // if (body.role !== Role.STAFF_ADMIN ) {\n    //   throw new CreateUserException(`You are not allowed to create ${body.role} user`);\n    // }\n\n    const userdata = await this.commandBus.execute(new CreateUserCommand(body));\n    return userdata;\n  }\n\n  // @Post()\n  // create(@Body() createUserDto: any) {\n  //   return this.userService.create(createUserDto);\n  // }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetailResponse.html":{"url":"classes/UserDetailResponse.html","title":"class - UserDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/response/user-detail.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            User\n            \n\n            \n                Implements\n            \n            \n                            IUserResponse\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/http/response/user-detail.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/entities/user.entity';\n\nexport type IUserResponse = Omit;\n\nexport class UserDetailResponse extends User implements IUserResponse {\n  constructor(props?: Partial) {\n    super(props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './http/services/user.service';\nimport { UserController } from './http/controllers/user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { BcryptService } from 'src/authentication/services/bcrypt.service';\nimport { CreateUserHandler } from './commands/handlers/create-user.handler';\n\n@Module({\n  imports: [CqrsModule, TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [CreateUserHandler, BcryptService,UserService],\n  exports: [UserService],\n})\nexport class  UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                changePasswordForUser\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcrypt: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/user/http/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcrypt\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(id: number, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePasswordForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePasswordForUser(id: number, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entities/user.entity';\nimport { BcryptService } from 'src/authentication/services/bcrypt.service';\nimport { comparePasswords } from 'src/authentication/http/controllers/authentication.controller';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private readonly bcrypt: BcryptService\n  ) {}\n\n  async create(createUserDto: any) {\n    const user = this.userRepository.create({\n      username: createUserDto.username,\n      password: createUserDto.password,\n      role: createUserDto.role,\n    });\n    return this.userRepository.save(user);\n  }\n  \n  \n\n  async findAll() {\n    return this.userRepository.createQueryBuilder(\"user\").getMany();\n  }\n\n  async findOne(id: number) {\n    return this.userRepository.findOne({ where: { id: id.toString() } });\n  }\n  \n  async changePassword(id: number, data) {\n    const user: any = await this.userRepository\n      .createQueryBuilder(\"user\")\n      .where(\"user.id=:id\", { id: id })\n      .addSelect(\"user.password\")\n      .getOne();\n    const areEqual= await comparePasswords(user.password, data.oldPassword);\n    if (!areEqual) {\n      throw new HttpException(\n        \"Username or password is incorrect\",\n        HttpStatus.NOT_ACCEPTABLE\n      );\n    } else {\n      return this.userRepository.createQueryBuilder(\"user\")\n        .update(User)\n        .where(\"user.id=:id\", { id: +id })\n        .set({\n          password: await this.bcrypt.hashPassword(data.password)\n        })\n        .execute();\n    }\n  }\n\n  async changePasswordForUser(id: number, data) {\n    return this.userRepository.createQueryBuilder(\"user\")\n      .update(User)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        password: await this.bcrypt.hashPassword(data.password)\n      })\n      .execute();\n  }\n\n\n  async update(id, data) {\n    return this.userRepository.createQueryBuilder(\"user\")\n      .update(User)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.userRepository.delete(id);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/http/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/authentication/http/controllers/authentication.controller.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/http/response/user-detail.response.ts\n            \n            class\n            UserDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/http/token.guard.ts\n            \n            injectable\n            TokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/database.strategy.ts\n            \n            injectable\n            DatabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/jwt.strategy.ts\n            \n            class\n            NestJwtStrategy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/providers/token-storage.provider.ts\n            \n            variable\n            TokenStorageProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/services/bcrypt.service.ts\n            \n            class\n            BcryptService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/storage/jwt.storage.ts\n            \n            injectable\n            JwtStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/authentication/storage/jwt.storage.ts\n            \n            interface\n            TokenBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/storage/token.storage.ts\n            \n            interface\n            TokenStorage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            DATABASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            dbconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.ts\n            \n            variable\n            DATABASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.ts\n            \n            variable\n            dbconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/globalLogger.ts\n            \n            variable\n            globalLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/ormconfig.ts\n            \n            variable\n            connectionSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/pinoLoggerConfig.ts\n            \n            variable\n            loggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/db.config.ts\n            \n            variable\n            DB_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/db.config.ts\n            \n            variable\n            DB_VARS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessageKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/controller.ts/core.controllers.ts\n            \n            controller\n            CoreController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/exception.interceptor.ts\n            \n            injectable\n            ExceptionInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            injectable\n            ResponseTransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            function\n            ResponseTransformInterceptorIgnore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            variable\n            IgnoredPropertyName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/request/request.ts\n            \n            interface\n            Req\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            IErrorBody\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            ItemsBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            PaginationMetaInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            ResourceBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/entities/teacher.entity.ts\n            \n            entity\n            Teacher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/commands/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/commands/fetch-user-by-id.command.ts\n            \n            class\n            FetchUserByIdCommand\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/commands/handlers/create-user.handler.ts\n            \n            class\n            CreateUserHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/commands/handlers/fetch-user-by-id.command.ts\n            \n            class\n            FetchUserByIdHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/exceptions/create-user.exception.ts\n            \n            class\n            CreateUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/exceptions/duplicate-user.exception.ts\n            \n            class\n            DuplicateUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/http/exception-filters/create-user.exception-filter.ts\n            \n            class\n            CreateUserExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/exception-filters/duplicate-user.exception-filter.ts\n            \n            class\n            DuplicateUserExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/requests/create-user.request.ts\n            \n            class\n            CreateUserRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/http/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            imageFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            pdfFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/password.generator.ts\n            \n            variable\n            passwordGenerator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.2.8\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/terminus : ^10.2.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @nestjs/websockets : ^10.2.8\n        \n            @types/bcrypt : ^5.0.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            express-basic-auth : ^1.2.1\n        \n            joi : ^17.11.0\n        \n            moment : ^2.29.4\n        \n            mysql2 : ^3.6.5\n        \n            nestjs-winston-logger : ^1.1.11\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.3\n        \n            postgresql : ^0.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContactTypeEnum   (src/.../contact.enum.ts)\n                        \n                        \n                            GenderEnum   (src/.../gender.enum.ts)\n                        \n                        \n                            PriorityEnum   (src/.../priority.enum.ts)\n                        \n                        \n                            Role   (src/.../types.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            UserTypeEnum   (src/.../user-type.enum.ts)\n                        \n                        \n                            UserTypeEnum   (src/.../user-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/enums/contact.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactTypeEnum\n                    \n                \n                        \n                            \n                                 PRIMARY\n                            \n                        \n                        \n                            \n                                Value : PRIMARY\n                            \n                        \n                        \n                            \n                                 SECONDARY\n                            \n                        \n                        \n                            \n                                Value : SECONDARY\n                            \n                        \n            \n        \n\n    src/utils/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GenderEnum\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 OTHERS\n                            \n                        \n                        \n                            \n                                Value : OTHERS\n                            \n                        \n            \n        \n\n    src/common/enums/priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriorityEnum\n                    \n                \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : HIGH\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : MEDIUM\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : LOW\n                            \n                        \n            \n        \n\n    src/user/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n            \n        \n\n    src/common/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/utils/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/common/enums/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n    src/utils/enums/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ResponseTransformInterceptorIgnore   (src/.../response-transform.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/http/interceptors/response-transform.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResponseTransformInterceptorIgnore\n                        \n                    \n                \n            \n            \n                \nResponseTransformInterceptorIgnore()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nAuthenticationModule->BcryptService \n\n\n\n\n\nJwtStorage \n\nJwtStorage \n\nJwtStorage  -->\n\nAuthenticationModule->JwtStorage \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthenticationModule -->\n\nCoreModule->AuthenticationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nAppModule -->\n\nTeacherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nTeacherModule -->\n\nUserModule->TeacherModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDatabaseStrategy\n\nDatabaseStrategy\n\nAuthenticationModule -->\n\nDatabaseStrategy->AuthenticationModule\n\n\n\n\n\nJwtStorage\n\nJwtStorage\n\nAuthenticationModule -->\n\nJwtStorage->AuthenticationModule\n\n\n\n\n\nResponseTransformInterceptor\n\nResponseTransformInterceptor\n\nCoreModule -->\n\nResponseTransformInterceptor->CoreModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ISuccessBody   (src/.../types.ts)\n                        \n                        \n                            IUserResponse   (src/.../user-detail.response.ts)\n                        \n                        \n                            ValidationErrors   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/http/response/types.ts\n    \n    \n        \n            \n                \n                    \n                    ISuccessBody\n                \n            \n            \n                \n                        ResourceBody | ItemsBody\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValidationErrors\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/authentication/http/response/user-detail.response.ts\n    \n    \n        \n            \n                \n                    \n                    IUserResponse\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            comparePasswords   (src/.../authentication.controller.ts)\n                        \n                        \n                            connectionSource   (src/.../ormconfig.ts)\n                        \n                        \n                            DATABASE_URL   (src/.../database.config.ts)\n                        \n                        \n                            DATABASE_URL   (src/.../database.ts)\n                        \n                        \n                            DB_CONFIG   (src/.../db.config.ts)\n                        \n                        \n                            DB_VARS   (src/.../db.config.ts)\n                        \n                        \n                            dbconfig   (src/.../database.config.ts)\n                        \n                        \n                            dbconfig   (src/.../database.ts)\n                        \n                        \n                            editFileName   (src/.../images.utils.ts)\n                        \n                        \n                            globalLogger   (src/.../globalLogger.ts)\n                        \n                        \n                            IgnoredPropertyName   (src/.../response-transform.interceptor.ts)\n                        \n                        \n                            imageFileFilter   (src/.../images.utils.ts)\n                        \n                        \n                            loggerConfig   (src/.../pinoLoggerConfig.ts)\n                        \n                        \n                            passwordGenerator   (src/.../password.generator.ts)\n                        \n                        \n                            pdfFileFilter   (src/.../images.utils.ts)\n                        \n                        \n                            ResponseMessage   (src/.../response.decorator.ts)\n                        \n                        \n                            ResponseMessageKey   (src/.../response.decorator.ts)\n                        \n                        \n                            TokenStorageProvider   (src/.../token-storage.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authentication/http/controllers/authentication.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  ...database,\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  migrationsRun: true,\n  migrations: [__dirname + '/../migrations/**/*.ts'],\n} as DataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbconfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port:\n    (process.env.DATABASE_PORT && parseInt(process.env.DATABASE_PORT, 10)) ||\n    3306,\n  database: process.env.DATABASE_NAME,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: process.env.DATABASE_SCHEMA_SYNC === 'true',\n  autoLoadEntities: true,\n  bigNumberStrings: false,\n  // logging: process.env.TYPEORM_QUERY_LOGGING === 'true',\n  // extra: {\n  //   max: (process.env.DB_CONNECTION_POOL_MAX && parseInt(process.env.DB_CONNECTION_POOL_MAX, 10)) || 5,\n  // },\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/config/database.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbconfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.DATABASE_HOST,\n  port:\n    (process.env.DATABASE_PORT && parseInt(process.env.DATABASE_PORT, 10)) ||\n    3306,\n  database: process.env.DATABASE_NAME,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: process.env.DATABASE_SCHEMA_SYNC === 'true',\n  autoLoadEntities: true,\n  bigNumberStrings: false,\n  // logging: process.env.TYPEORM_QUERY_LOGGING === 'true',\n  // extra: {\n  //   max: (process.env.DB_CONNECTION_POOL_MAX && parseInt(process.env.DB_CONNECTION_POOL_MAX, 10)) || 5,\n  // },\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/core/config/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `mongodb+srv://${DB_VARS.username}:${DB_VARS.password}@${DB_VARS.host}/?retryWrites=true&w=majority`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_VARS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  host: process.env.DB_HOST,\n  port: process.env.DB_PORT,\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/images.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  const name = file.originalname.split('.')[0];\n  const fileExtName = extname(file.originalname);\n  const randomName = Array(4)\n    .fill(null)\n    .map(() => Math.round(Math.random() * 16).toString(16))\n    .join('');\n  return callback(null, `${name}-${randomName}${fileExtName}`);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (!file.originalname.match(/\\.(SVG|svg|JPG|JPEG|PNG|jpg|jpeg|png|gif)$/)) {\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n  return callback(null, true);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (\n    !file.originalname.match(\n      /\\.(SVG|svg|JPG|JPEG|PNG|jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$/,\n    )\n  ) {\n    return callback(\n      new Error('Only image files and document files are allowed!'),\n      false,\n    );\n  }\n  return callback(null, true);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/globalLogger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NestjsWinstonLoggerService({\n  format: format.combine(\n    format.timestamp({ format: 'isoDateTime' }),\n    format.json(),\n    format.colorize({ all: true }),\n  ),\n  transports: [\n    new transports.File({\n      filename: 'Logs/error.log',\n      level: 'error',\n      maxsize: 20,\n      maxFiles: 14,\n    }),\n    // new transports.File({ filename: 'combined.log' }),\n    new transports.Console({\n      format: winston.format.simple(),\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/core/http/interceptors/response-transform.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IgnoredPropertyName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IgnoredPropertyName')\n                    \n                \n\n\n        \n    \n\n    src/config/pinoLoggerConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  pinoHttp: {\n    transport: {\n      target: 'pino-pretty',\n      options: {\n        colorize: true,\n        singleLine: true,\n        messageFormat:\n          '{req.headers.host} - {req.method} {req.url} {res.statusCode} - {responseTime} ms',\n      },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/password.generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const chars =\n    '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const passwordLength = 12;\n  let password = '';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/core/decorators/response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(ResponseMessageKey, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ResponseMessageKey'\n                    \n                \n\n\n        \n    \n\n    src/authentication/providers/token-storage.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TokenStorageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  provide: 'TokenStorage',\n  useClass: JwtStorage,\n} as Provider\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
