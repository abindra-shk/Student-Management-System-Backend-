var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Address.html",[0,1.469,1,2.031]],["body/entities/Address.html",[0,2.224,1,3.756,2,2.362,3,0.131,4,0.118,5,0.105,6,4.352,7,0.517,8,1.774,9,5.296,10,5.296,11,2.099,12,5.296,13,5.296,14,0.843,15,0.011,16,1.129,17,2.283,18,4.801,19,1.064,20,4.954,21,4.954,22,4.954,23,4.21,24,4.954,25,4.954,26,4.954,27,0.241,28,1.612,29,0.144,30,0.156,31,4.954,32,0.008,33,0.008]],["title/controllers/AddressController.html",[34,1.309,35,3.145]],["body/controllers/AddressController.html",[1,1.938,3,0.107,4,0.097,5,0.086,7,0.424,11,2.48,14,0.732,15,0.011,16,1.067,17,2.082,19,0.97,27,0.341,29,0.118,30,0.128,32,0.007,33,0.007,34,1.249,35,4.168,36,1.249,37,3.569,38,2.181,39,1.43,40,1.687,41,3.007,42,2.506,43,2.422,44,2.595,45,3.569,46,5.088,47,3.481,48,4.064,49,1.728,50,1.637,51,1.593,52,6.694,53,1.866,54,4.064,55,1.868,56,3.481,57,4.064,58,1.868,59,3.481,60,4.064,61,1.938,62,3.481,63,4.064,64,3.313,65,2.385,66,2.278,67,2.385,68,0.7,69,4,70,3.569,71,2.181,72,1.487,73,1.868,74,3.244,75,4.064,76,4.064,77,2.278,78,0.975,79,2.385,80,1.816,81,4.064,82,4.064,83,2.506,84,4.064,85,2.645,86,4.064,87,2.506,88,4.064]],["title/modules/AddressModule.html",[89,1.309,90,2.772]],["body/modules/AddressModule.html",[1,2.507,3,0.139,4,0.125,5,0.111,15,0.011,27,0.391,29,0.153,30,0.166,32,0.008,33,0.008,35,5.447,36,2.06,68,0.906,69,5.36,70,4.618,89,2.268,90,5.426,91,2.256,92,2.334,93,2.507,94,2.507,95,2.334,96,3.518,97,3.518,98,4.618,99,4.618,100,4.618,101,3.196,102,2.507,103,2.507,104,5.258,105,5.258,106,4.618,107,2.708,108,1.663,109,2.507,110,5.258]],["title/injectables/AddressService.html",[69,2.627,111,0.995]],["body/injectables/AddressService.html",[1,2.614,3,0.103,4,0.093,5,0.082,7,0.407,11,2.36,14,0.757,15,0.011,16,1.057,19,0.991,27,0.353,28,1.268,29,0.113,30,0.123,32,0.007,33,0.007,39,1.389,40,1.639,41,2.952,42,2.434,43,2.352,44,2.521,45,4.816,46,5.029,49,1.788,50,1.694,51,1.648,52,6.37,53,1.838,55,2.521,58,2.521,61,2.614,68,0.672,69,3.381,73,1.792,74,3.111,80,1.697,106,3.423,108,1.232,111,1.28,112,1.566,113,3.423,114,2.755,115,1.89,116,3.898,117,3.055,118,3.898,119,5.482,120,3.898,121,2.952,122,3.898,123,3.898,124,3.898,125,3.898,126,1.792,127,3.898,128,1.517,129,3.898,130,3.898,131,3.898,132,2.007,133,3.111,134,2.692,135,2.692,136,3.898,137,3.898]],["title/controllers/AppController.html",[34,1.309,138,3.145]],["body/controllers/AppController.html",[3,0.154,4,0.139,5,0.124,7,0.611,15,0.011,16,0.944,17,1.654,19,0.771,27,0.349,29,0.17,30,0.184,32,0.009,33,0.009,34,2.202,36,1.798,39,1.815,53,1.482,68,1.008,77,3.278,78,1.404,80,1.442,138,5.289,139,5.137,140,7.088,141,5.849,142,5.04,143,5.137,144,5.849]],["title/modules/AppModule.html",[89,1.309,145,3.145]],["body/modules/AppModule.html",[2,2.168,3,0.08,4,0.072,5,0.064,14,0.571,15,0.011,27,0.406,29,0.088,30,0.095,32,0.005,33,0.005,36,1.398,68,0.519,89,1.682,90,4.474,91,1.293,92,1.338,93,1.438,94,1.438,95,1.338,96,2.61,97,1.438,101,2.168,102,1.438,103,1.438,107,1.553,108,0.953,109,2.168,138,4.041,142,4.474,143,2.648,145,6.354,146,2.648,147,2.648,148,2.648,149,4.474,150,4.747,151,4.24,152,4.474,153,4.474,154,4.747,155,4.035,156,4.24,157,4.747,158,3.853,159,3.015,160,3.015,161,3.015,162,3.015,163,2.648,164,2.648,165,3.015,166,2.648,167,1.86,168,3.015,169,3.015,170,3.015,171,3.015,172,3.015,173,3.015,174,3.015,175,2.407,176,3.015,177,2.648,178,2.226,179,3.015,180,3.015,181,4.546,182,5.353,183,4.041,184,4.546,185,4.807,186,5.473,187,1.944,188,3.993,189,2.43,190,4.546,191,4.807,192,4.546,193,4.807,194,3.54,195,4.807,196,3.015,197,3.015,198,2.648,199,2.648,200,3.015,201,4.546,202,3.015,203,3.015,204,3.015]],["title/injectables/AppService.html",[111,0.995,142,2.772]],["body/injectables/AppService.html",[3,0.16,4,0.144,5,0.129,7,0.634,15,0.01,16,0.966,19,0.801,27,0.296,29,0.177,30,0.192,32,0.009,33,0.009,39,1.858,53,1.54,68,1.047,80,1.498,111,1.712,112,2.441,140,7.181,142,4.771,205,5.337,206,6.076,207,6.076,208,6.076]],["title/entities/AttendanceLog.html",[0,1.469,209,2.772]],["body/entities/AttendanceLog.html",[0,2.245,2,2.397,3,0.133,4,0.119,5,0.106,7,0.525,8,1.791,14,0.862,15,0.011,16,0.858,17,2.16,18,4.048,19,1.007,27,0.245,28,1.636,29,0.146,30,0.159,32,0.008,33,0.008,187,2.565,194,3.934,209,4.238,210,4.415,211,4.421,212,6.344,213,6.344,214,5.027,215,5.027,216,4.497,217,7.639,218,6.098,219,5.027,220,5.027,221,7.639,222,5.027]],["title/controllers/AttendanceLogController.html",[34,1.309,223,3.145]],["body/controllers/AttendanceLogController.html",[3,0.091,4,0.082,5,0.073,7,0.359,14,0.753,15,0.011,16,1.025,17,2.105,19,0.981,27,0.288,29,0.1,30,0.108,32,0.006,33,0.006,34,1.057,36,1.057,38,1.845,39,1.27,40,1.498,41,2.788,42,2.224,43,2.15,47,3.173,49,1.778,50,1.684,51,1.639,53,1.886,64,2.018,65,2.018,66,1.927,67,2.018,68,0.592,73,1.58,77,1.927,78,0.825,79,2.018,80,1.836,114,2.783,121,3.194,187,2.308,211,4.171,223,3.7,224,3.019,225,4.229,226,4.401,227,2.689,228,4.401,229,4.401,230,3.019,231,5.064,232,3.437,233,3.019,234,4.401,235,3.437,236,4.401,237,3.437,238,3.019,239,5.011,240,3.437,241,3.019,242,4,243,3.437,244,3.437,245,4,246,3.437,247,3.261,248,3.019,249,5.011,250,3.437,251,3.437,252,3.647,253,3.019,254,2.744,255,3.437,256,3.437,257,2.374,258,3.437,259,3.437,260,3.437,261,3.437,262,3.437,263,3.437,264,3.437,265,3.437,266,3.437,267,3.437,268,3.437]],["title/injectables/AttendanceLogService.html",[111,0.995,252,2.627]],["body/injectables/AttendanceLogService.html",[0,0.979,3,0.075,4,0.068,5,0.06,7,0.297,14,0.73,15,0.011,16,0.994,19,0.95,27,0.327,28,0.924,29,0.083,30,0.137,32,0.005,33,0.005,39,1.101,40,1.299,41,2.536,43,1.864,49,1.724,50,1.632,51,1.589,53,1.771,68,0.489,73,1.306,78,0.682,80,1.778,108,0.898,111,1.015,112,1.141,114,2.727,115,1.498,117,2.624,121,2.882,126,1.306,128,1.691,132,1.931,187,2.724,209,3.434,211,4.171,225,1.849,227,2.332,228,3.817,229,3.817,230,3.817,231,4.692,233,3.817,236,3.817,238,3.817,241,3.817,247,1.849,248,3.817,252,2.68,254,2.267,269,2.495,270,4.345,271,2.84,272,3.918,273,2.84,274,4.345,275,2.84,276,2.84,277,2.84,278,2.84,279,2.84,280,4.345,281,2.84,282,2.84,283,2.613,284,2.495,285,2.267,286,2.84,287,2.72,288,2.84,289,4.345,290,4.345,291,2.84,292,2.84,293,2.84,294,2.84,295,3.817,296,2.828,297,1.458,298,2.84,299,2.84,300,2.495,301,1.752,302,3.001,303,2.84,304,2.267,305,2.267,306,2.267,307,2.84,308,2.495,309,2.495,310,4.345,311,4.345,312,4.345,313,2.84,314,2.267,315,3.001,316,4.345,317,2.84,318,2.84,319,2.84]],["title/modules/AttendanceModule.html",[89,1.309,149,2.772]],["body/modules/AttendanceModule.html",[3,0.133,4,0.12,5,0.107,15,0.011,27,0.395,29,0.147,30,0.159,32,0.008,33,0.008,36,2.005,68,0.869,89,2.223,91,2.163,92,2.238,93,2.404,94,2.404,95,2.238,96,3.448,97,3.448,101,3.111,102,2.404,103,2.404,107,2.596,108,1.594,109,3.111,149,5.504,155,4.649,209,3.281,223,5.34,252,5.329,253,4.428,284,4.428,320,4.428,321,4.428,322,4.428,323,5.042,324,5.042,325,5.042,326,4.025,327,5.042]],["title/controllers/AuthenticationController.html",[34,1.309,328,3.145]],["body/controllers/AuthenticationController.html",[3,0.063,4,0.057,5,0.05,7,0.249,8,1.043,11,1.536,14,0.684,15,0.011,16,0.709,17,0.675,19,0.5,27,0.357,28,0.777,29,0.11,30,0.075,32,0.005,33,0.005,34,1.166,36,0.734,39,0.961,47,1.281,49,0.935,50,0.886,51,0.862,53,0.961,68,0.411,71,1.281,72,0.873,78,0.91,80,1.447,108,0.755,114,2.033,115,0.823,117,1.684,121,1.024,126,1.097,128,2.432,132,2.488,187,2.084,189,2.388,287,2.709,297,1.866,301,2.34,304,1.905,328,2.801,329,1.905,330,4.721,331,3.793,332,2.386,333,2.386,334,2.386,335,4.425,336,2.386,337,1.553,338,2.386,339,3.332,340,1.762,341,1.648,342,1.762,343,2.386,344,2.096,345,1.472,346,2.62,347,4.147,348,1.281,349,2.646,350,1.905,351,2.386,352,3.971,353,2.386,354,2.386,355,3.486,356,1.648,357,2.386,358,1.905,359,1.553,360,1.553,361,2.251,362,3.028,363,2.386,364,3.028,365,1.905,366,5.869,367,2.386,368,2.386,369,2.386,370,3.793,371,3.332,372,3.793,373,2.386,374,4.559,375,3.793,376,3.768,377,3.793,378,3.793,379,2.732,380,4.721,381,4.721,382,4.721,383,4.721,384,4.721,385,4.721,386,2.386,387,3.793,388,1.648,389,2.386,390,2.906,391,2.386,392,2.386,393,5.869,394,2.386,395,1.472,396,1.472,397,2.386,398,1.905,399,2.386,400,2.386,401,2.386,402,2.386,403,1.905,404,1.905,405,2.386,406,3.332,407,2.096,408,2.386,409,2.096,410,1.762,411,3.332,412,2.096,413,2.096]],["title/modules/AuthenticationModule.html",[89,1.309,150,2.942]],["body/modules/AuthenticationModule.html",[3,0.113,4,0.101,5,0.09,15,0.011,27,0.413,29,0.124,30,0.135,32,0.007,33,0.007,36,1.794,68,0.735,89,2.045,91,1.83,92,1.893,93,2.034,94,2.034,95,1.893,96,3.172,97,3.172,101,2.783,102,2.034,103,2.034,107,2.197,108,1.349,109,2.783,150,5.816,152,5.035,164,3.747,297,1.052,328,4.913,345,2.631,348,2.289,355,3.15,356,2.946,414,3.747,415,3.747,416,4.265,417,3.747,418,4.52,419,5.194,420,5.174,421,4.265,422,4.265,423,4.031,424,4.265,425,4.265,426,3.747,427,4.659,428,4.265,429,4.265,430,4.265,431,4.265,432,5.126,433,2.631,434,3.747,435,4.265,436,4.265,437,3.15,438,4.265]],["title/classes/BcryptService.html",[30,0.134,418,2.387]],["body/classes/BcryptService.html",[3,0.119,4,0.107,5,0.095,7,0.469,8,1.662,14,0.763,15,0.011,16,1.035,19,0.963,27,0.294,29,0.131,30,0.142,32,0.007,33,0.007,39,1.531,49,1.684,50,1.595,51,1.552,53,1.731,78,1.639,80,1.684,114,2.222,128,2.658,132,1.643,189,3.385,283,3.889,297,2.078,346,4.173,348,2.409,404,3.583,418,3.386,439,1.235,440,3.942,441,5.452,442,6.83,443,6.042,444,6.042,445,6.042,446,2.682,447,2.921,448,3.314,449,4.461,450,4.488,451,6.042,452,4.488,453,6.042,454,4.488,455,6.042,456,4.488,457,4.488,458,4.488,459,4.488,460,4.488]],["title/entities/Class.html",[0,1.469,30,0.134]],["body/entities/Class.html",[0,2.434,2,2.724,3,0.151,4,0.136,5,0.121,7,0.596,8,1.942,11,2.493,14,0.737,15,0.01,16,1.055,17,1.996,18,4.295,19,0.93,23,4.498,27,0.344,28,1.859,29,0.166,30,0.242,32,0.008,33,0.008,296,2.536,461,5.018,462,4.726,463,5.712,464,5.712,465,5.712,466,3.945]],["title/controllers/ClassController.html",[34,1.309,467,3.145]],["body/controllers/ClassController.html",[3,0.106,4,0.095,5,0.085,7,0.418,11,2.469,14,0.727,15,0.011,16,1.063,17,2.071,19,0.965,27,0.357,29,0.117,30,0.176,32,0.007,33,0.007,34,1.232,36,1.232,38,2.15,39,1.416,40,1.671,41,2.988,42,2.481,43,2.398,44,2.57,47,3.454,49,1.718,50,1.627,51,1.583,53,1.856,55,1.842,56,3.447,58,1.842,59,3.447,61,1.91,62,3.447,64,3.281,65,2.352,66,2.246,67,2.352,68,0.69,71,2.15,72,1.466,73,1.842,77,2.246,78,0.962,79,2.352,80,1.807,83,2.471,85,2.608,87,2.471,467,4.127,468,3.519,469,3.519,470,5.464,471,4.007,472,4.007,473,4.007,474,4.007,475,4.007,476,3.778,477,3.519,478,4.462,479,2.959,480,2.608,481,4.007,482,4.007,483,4.007,484,4.007,485,4.007,486,4.007,487,4.007]],["title/modules/ClassModule.html",[89,1.309,151,2.627]],["body/modules/ClassModule.html",[3,0.139,4,0.125,5,0.111,15,0.011,27,0.391,29,0.153,30,0.211,32,0.008,33,0.008,36,2.06,68,0.906,89,2.268,91,2.256,92,2.334,93,2.507,94,2.507,95,2.334,96,3.518,97,3.518,101,3.196,102,2.507,103,2.507,107,2.708,108,1.663,109,2.507,151,5.142,467,5.447,476,5.101,477,4.618,488,4.618,489,4.618,490,4.618,491,5.258,492,4.618,493,5.258,494,5.258]],["title/injectables/ClassService.html",[111,0.995,476,2.5]],["body/injectables/ClassService.html",[3,0.097,4,0.087,5,0.077,7,0.382,11,2.303,14,0.769,15,0.011,16,1.069,19,0.999,27,0.345,28,1.19,29,0.106,30,0.165,32,0.006,33,0.006,39,1.328,40,1.566,41,2.869,42,2.326,43,2.248,44,2.409,49,1.816,50,1.72,51,1.674,53,1.866,55,2.409,58,2.409,61,2.498,68,0.63,73,1.681,80,1.745,108,1.156,111,1.224,112,1.469,114,2.771,115,1.807,117,2.969,121,3.037,126,1.681,128,1.423,132,1.918,133,2.919,134,2.526,297,0.902,462,3.777,469,4.602,470,5.335,476,3.076,478,2.919,492,3.212,495,3.212,496,5.24,497,3.657,498,3.657,499,5.24,500,3.657,501,3.657,502,3.657,503,3.657,504,3.657,505,3.657,506,3.657,507,3.657,508,3.657,509,3.657,510,5.24,511,3.657,512,3.657,513,3.657,514,3.657,515,3.657]],["title/controllers/CoreController.html",[34,1.309,516,3.145]],["body/controllers/CoreController.html",[3,0.152,4,0.137,5,0.122,7,0.602,15,0.011,16,0.76,17,1.631,19,0.76,27,0.346,29,0.168,30,0.182,32,0.008,33,0.008,34,2.184,36,1.774,39,1.8,53,1.462,68,0.994,71,3.097,72,2.112,80,1.423,516,5.245,517,5.068,518,7.055,519,7.104,520,5.77,521,3.982,522,5.77,523,5.77,524,5.77]],["title/modules/CoreModule.html",[89,1.309,152,2.772]],["body/modules/CoreModule.html",[3,0.147,4,0.132,5,0.118,15,0.01,27,0.369,29,0.162,30,0.175,32,0.008,33,0.008,36,2.135,68,0.959,89,2.328,91,2.387,92,2.47,93,2.653,94,2.653,95,2.47,96,3.611,97,3.312,101,3.312,102,2.653,103,2.653,109,2.653,152,5.417,516,5.591,525,4.888,526,4.888,527,5.748,528,5.564,529,5.564,530,4.888,531,5.564]],["title/classes/CreateAddressDto.html",[30,0.134,46,2.772]],["body/classes/CreateAddressDto.html",[1,3.458,3,0.134,4,0.121,5,0.107,7,0.53,8,1.801,9,5.355,10,5.355,12,5.355,13,5.355,14,0.829,15,0.01,16,1.125,17,2.244,19,1.046,27,0.247,29,0.148,30,0.207,32,0.008,33,0.008,46,4.262,439,1.395,532,7.138,533,4.048,534,5.595,535,5.071,536,5.071,537,5.071,538,5.071,539,5.071,540,3.128]],["title/classes/CreateAttendanceLogDto.html",[30,0.134,231,2.772]],["body/classes/CreateAttendanceLogDto.html",[3,0.135,4,0.122,5,0.108,7,0.534,8,1.812,14,0.803,15,0.01,16,1.106,17,2.174,19,1.013,27,0.249,29,0.149,30,0.208,32,0.008,33,0.008,51,1.748,187,2.587,211,3.751,212,6.397,213,6.397,231,4.287,439,1.407,534,4.287,540,3.156,541,6.989,542,4.084,543,5.117,544,5.117,545,6.586,546,5.117,547,5.117,548,5.117,549,5.117,550,7.69,551,5.814,552,6.397]],["title/classes/CreateClassDto.html",[30,0.134,470,2.772]],["body/classes/CreateClassDto.html",[3,0.16,4,0.144,5,0.129,7,0.634,8,2.017,14,0.634,15,0.01,16,0.966,17,1.718,19,0.801,27,0.296,29,0.177,30,0.231,32,0.009,33,0.009,439,1.671,462,4.856,470,4.771,534,5.124,540,3.748,553,6.439,554,4.85,555,6.076]],["title/classes/CreateFinalAttendanceDto.html",[30,0.134,556,3.145]],["body/classes/CreateFinalAttendanceDto.html",[3,0.175,4,0.158,5,0.14,15,0.01,29,0.193,30,0.209,32,0.009,33,0.009,439,1.826,556,5.706,557,5.832,558,5.3]],["title/classes/CreateMarkDto.html",[30,0.134,559,2.772]],["body/classes/CreateMarkDto.html",[3,0.13,4,0.117,5,0.104,7,0.516,8,1.771,14,0.822,15,0.011,16,1.063,17,2.225,19,1.037,27,0.314,29,0.144,30,0.203,32,0.008,33,0.008,439,1.359,446,3.369,534,4.939,540,3.047,551,6.057,559,4.19,560,7.088,561,3.943,562,5.717,563,4.204,564,5.717,565,6.291,566,4.417,567,7.87,568,4.94,569,4.94,570,4.94,571,4.94,572,4.94,573,4.94,574,4.339,575,3.648,576,3.943]],["title/classes/CreateStudentDto.html",[30,0.134,577,2.772]],["body/classes/CreateStudentDto.html",[1,3.201,3,0.115,4,0.103,5,0.092,7,0.453,8,1.625,14,0.882,15,0.01,16,1.152,19,1.113,27,0.288,29,0.126,30,0.238,32,0.007,33,0.007,78,1.611,187,2.385,189,2.98,211,3.042,439,1.194,577,3.844,578,7.467,579,3.465,580,4.37,581,3.941,582,4.141,583,5.359,584,5.359,585,3.941,586,4.005,587,5.359,588,4.341,589,4.341,590,4.341,591,4.341,592,4.341,593,4.341,594,4.341,595,4.341,596,4.341,597,4.341,598,4.341,599,4.341,600,3.205,601,2.825]],["title/classes/CreateSubjectDto.html",[30,0.134,602,2.772]],["body/classes/CreateSubjectDto.html",[3,0.138,4,0.124,5,0.11,7,0.544,8,1.833,14,0.808,15,0.01,16,1.054,17,2.189,19,1.02,27,0.254,29,0.152,30,0.258,32,0.008,33,0.008,439,1.433,446,3.437,534,5.208,540,3.213,566,4.531,602,4.336,603,7.028,604,4.159,605,5.424,606,5.424,607,5.21,608,8.002,609,5.21,610,5.21,611,5.21,612,5.21]],["title/classes/CreateTeacherDto.html",[30,0.134,613,2.772]],["body/classes/CreateTeacherDto.html",[1,2.973,3,0.1,4,0.09,5,0.08,7,0.394,8,1.475,9,4.604,10,4.604,12,4.604,13,4.604,14,0.896,15,0.01,16,1.158,19,1.127,27,0.184,29,0.11,30,0.119,32,0.006,33,0.006,78,1.496,187,2.214,189,2.768,211,3.495,439,1.039,446,2.381,563,2.217,566,2.33,580,4.058,581,3.659,582,3.845,585,3.659,586,3.834,601,2.459,613,3.49,614,7.542,615,3.015,616,4.977,617,4.977,618,4.977,619,4.977,620,4.977,621,4.306,622,3.777,623,3.777,624,3.777,625,3.777,626,3.777,627,3.777,628,3.777,629,3.777,630,3.777,631,3.777,632,3.777,633,3.777,634,3.777,635,3.777,636,3.777,637,3.015,638,3.777,639,3.777,640,3.777]],["title/classes/CreateUserCommand.html",[30,0.134,641,2.772]],["body/classes/CreateUserCommand.html",[3,0.153,4,0.138,5,0.123,14,0.806,15,0.01,16,0.94,19,0.765,27,0.283,29,0.169,30,0.183,32,0.009,33,0.009,49,1.432,50,1.357,51,1.32,78,1.932,115,2.46,187,2.063,189,2.579,361,3.401,439,1.598,586,3.976,637,5.694,641,4.643,642,5.267,643,5.102,644,5.809,645,5.809,646,4.012]],["title/classes/CreateUserDto.html",[30,0.134,647,2.772]],["body/classes/CreateUserDto.html",[3,0.152,4,0.137,5,0.122,7,0.602,8,1.954,14,0.804,15,0.01,16,1.058,19,1.014,27,0.281,29,0.168,30,0.182,32,0.008,33,0.008,187,2.734,189,3.417,439,1.587,586,4.325,646,3.985,647,4.623,648,7.055,649,4.606,650,5.77,651,5.77,652,5.77]],["title/classes/CreateUserException.html",[30,0.134,653,3.145]],["body/classes/CreateUserException.html",[3,0.16,4,0.144,5,0.128,14,0.632,15,0.01,16,0.964,19,0.798,29,0.176,30,0.191,32,0.009,33,0.009,40,1.81,49,1.493,50,1.414,51,1.376,115,2.088,297,1.493,396,4.512,439,1.665,521,3.394,653,5.402,654,6.426,655,4.833,656,3.036,657,6.426,658,5.318,659,5.318]],["title/classes/CreateUserExceptionFilter.html",[30,0.134,660,3.145]],["body/classes/CreateUserExceptionFilter.html",[3,0.134,4,0.12,5,0.107,7,0.528,14,0.528,15,0.011,19,0.666,27,0.373,29,0.147,30,0.159,32,0.008,33,0.008,39,1.656,40,1.511,49,1.247,50,1.181,51,1.149,53,1.281,68,0.871,167,3.119,183,5.348,287,2.466,297,1.247,340,3.734,395,4.467,439,1.391,653,5.653,660,4.826,661,5.217,662,5.217,663,5.002,664,4.036,665,3.508,666,6.361,667,5.741,668,6.725,669,4.441,670,4.036,671,5.217,672,5.057,673,3.836,674,4.441,675,5.057,676,4.441,677,4.441,678,4.441,679,4.441,680,3.291,681,3.119,682,4.441,683,3.291,684,4.441]],["title/classes/CreateUserHandler.html",[30,0.134,685,3.145]],["body/classes/CreateUserHandler.html",[3,0.112,4,0.1,5,0.089,7,0.441,14,0.605,15,0.011,19,0.764,27,0.385,28,1.374,29,0.123,30,0.133,32,0.007,33,0.007,39,1.469,40,1.262,49,1.43,50,1.354,51,1.318,53,1.07,78,1.391,80,1.041,108,1.336,114,2.154,115,1.999,117,3.163,126,1.942,128,2.256,132,2.607,135,4.004,187,1.5,189,1.875,283,2.87,287,1.594,297,1.632,346,4.571,359,2.749,360,3.773,376,4.627,379,2.329,390,2.87,418,3.993,433,2.605,439,1.162,446,1.875,641,4.637,663,2.917,665,3.111,685,4.281,686,5.814,687,3.71,688,5.814,689,4.004,690,3.371,691,4.223,692,5.092,693,4.223,694,3.371,695,3.71,696,3.371,697,4.223,698,2.917,699,3.71,700,3.371,701,4.223,702,4.223,703,4.223,704,4.627,705,5.797,706,4.223,707,4.223,708,4.223,709,4.223,710,4.223,711,4.223]],["title/classes/CreateUserRequest.html",[30,0.134,712,2.942]],["body/classes/CreateUserRequest.html",[3,0.128,4,0.115,5,0.103,7,0.507,8,1.751,14,0.742,15,0.011,16,0.993,17,2.008,19,0.936,27,0.346,29,0.141,30,0.201,32,0.008,33,0.008,72,1.777,78,2.015,187,2.523,189,3.153,439,1.336,521,3.568,534,4.623,540,2.995,551,6.018,552,4.266,574,4.266,586,4.325,646,3.354,712,4.397,713,6.621,714,4.266,715,6.366,716,4.856,717,4.856,718,4.856,719,6.366,720,5.592,721,4.856,722,4.856,723,4.856,724,7.538,725,3.586,726,4.856]],["title/injectables/DatabaseStrategy.html",[111,0.995,420,2.942]],["body/injectables/DatabaseStrategy.html",[3,0.113,4,0.102,5,0.09,7,0.446,14,0.61,15,0.011,16,1.02,19,0.77,27,0.386,28,1.391,29,0.124,30,0.135,32,0.007,33,0.007,39,1.481,49,1.442,50,1.365,51,1.329,53,1.084,68,0.737,78,1.403,80,1.054,108,1.352,111,1.365,112,1.718,114,2.168,115,2.016,117,3.179,126,1.966,128,2.276,132,2.14,187,2.663,189,3.437,283,2.895,287,1.614,297,1.766,304,3.413,345,2.637,348,2.295,359,2.783,360,3.805,379,2.349,390,2.895,404,3.413,418,4.442,420,4.038,426,3.756,656,2.426,690,3.413,720,5.135,727,3.756,728,5.846,729,5.846,730,4.276,731,5.846,732,4.276,733,4.276,734,3.413,735,3.157,736,3.756,737,3.413,738,3.413,739,3.157,740,4.276,741,3.756,742,4.276,743,2.953,744,5.846,745,4.276]],["title/classes/DuplicateUserException.html",[30,0.134,698,2.942]],["body/classes/DuplicateUserException.html",[3,0.159,4,0.143,5,0.128,14,0.63,15,0.01,16,0.962,19,0.795,29,0.176,30,0.19,32,0.009,33,0.009,49,1.488,50,1.409,51,1.371,115,2.081,135,4.167,297,1.488,396,4.502,439,1.66,521,3.382,655,4.816,656,3.03,657,6.412,658,5.3,659,5.3,698,5.042,704,4.816,746,6.412]],["title/classes/DuplicateUserExceptionFilter.html",[30,0.134,747,3.145]],["body/classes/DuplicateUserExceptionFilter.html",[3,0.134,4,0.12,5,0.107,7,0.528,14,0.528,15,0.011,19,0.666,27,0.373,29,0.147,30,0.159,32,0.008,33,0.008,39,1.656,49,1.247,50,1.181,51,1.149,53,1.281,68,0.871,167,3.119,183,5.348,287,2.466,297,1.247,340,3.734,395,4.467,439,1.391,661,5.217,663,5.002,664,4.036,665,3.508,666,6.361,667,5.741,668,6.725,669,4.441,670,4.036,671,5.217,673,3.836,674,4.441,676,4.441,677,4.441,678,4.441,679,4.441,680,3.291,681,3.119,682,4.441,683,3.291,684,4.441,698,5.287,699,4.441,747,4.826,748,5.217,749,5.057,750,5.057]],["title/injectables/ExceptionInterceptor.html",[111,0.995,751,3.4]],["body/injectables/ExceptionInterceptor.html",[3,0.143,4,0.129,5,0.115,7,0.566,14,0.566,15,0.01,19,0.715,27,0.333,29,0.158,30,0.171,32,0.008,33,0.008,39,1.732,49,1.337,50,1.267,51,1.233,53,1.374,68,0.935,80,1.337,111,1.596,112,2.179,300,4.764,379,2.179,665,2.911,751,5.456,752,4.764,753,5.456,754,5.456,755,6.272,756,6.272,757,6.272,758,5.424,759,4.33,760,5.974,761,6.835,762,5.456,763,4.764,764,6.004,765,4.005,766,5.424]],["title/classes/FetchUserByIdCommand.html",[30,0.134,767,3.145]],["body/classes/FetchUserByIdCommand.html",[3,0.163,4,0.146,5,0.13,14,0.644,15,0.01,16,1.044,19,0.812,29,0.179,30,0.194,32,0.009,33,0.009,49,1.52,50,1.439,51,1.401,115,2.125,297,1.823,439,1.695,767,5.46,768,6.495,769,4.92,770,6.163,771,6.163,772,7.394,773,6.163]],["title/classes/FetchUserByIdHandler.html",[30,0.134,774,3.4]],["body/classes/FetchUserByIdHandler.html",[3,0.147,4,0.133,5,0.118,7,0.583,14,0.583,15,0.01,19,0.736,27,0.339,30,0.176,32,0.008,33,0.008,39,1.764,49,1.377,50,1.304,51,1.269,53,1.415,80,1.377,114,2.467,283,3.446,297,1.87,302,3.855,433,3.443,439,1.536,665,3.735,688,6.661,689,4.807,692,6.113,694,4.456,695,4.903,767,5.862,769,4.456,774,5.556,775,6.113,776,5.582,777,5.582,778,5.582,779,5.582]],["title/entities/FinalAttendance.html",[0,1.469,780,2.772]],["body/entities/FinalAttendance.html",[0,2.033,2,2.065,3,0.114,4,0.103,5,0.092,7,0.452,8,1.622,11,2.182,14,0.845,15,0.011,16,0.777,17,2.197,18,4.221,19,1.024,23,3.936,27,0.351,28,1.409,29,0.126,30,0.137,32,0.007,33,0.007,194,3.707,211,4.095,216,4.072,218,4.707,225,4.364,296,3.53,297,1.068,337,2.818,446,3.196,447,3.838,466,2.99,725,5.316,780,3.838,781,3.803,782,5.89,783,5.89,784,6.012,785,4.33,786,4.33,787,4.33,788,5.896,789,4.33,790,3.803,791,4.33,792,4.33,793,3.803,794,4.33,795,3.803,796,2.818,797,4.354,798,3.456,799,3.838,800,3.803,801,3.803]],["title/controllers/FinalAttendanceController.html",[34,1.309,802,3.145]],["body/controllers/FinalAttendanceController.html",[3,0.104,4,0.093,5,0.083,7,0.41,14,0.575,15,0.011,16,0.993,17,2.056,19,0.958,27,0.268,29,0.114,30,0.124,32,0.007,33,0.007,34,1.206,36,1.206,38,2.106,39,1.396,47,2.106,49,1.358,50,1.287,51,1.252,53,1.842,66,2.199,68,0.676,77,2.199,78,0.942,80,1.859,114,2.757,121,3.119,132,2.526,187,1.957,194,2.021,225,5.039,245,4.397,247,3.585,361,2.627,388,2.71,395,2.42,396,3.398,398,3.133,521,3.088,793,3.447,802,4.068,803,3.447,804,4.839,805,6.902,806,6.902,807,4.839,808,5.51,809,3.924,810,5.509,811,3.924,812,5.509,813,3.924,814,5.509,815,3.924,816,3.447,817,3.924,818,4.839,819,3.924,820,3.926,821,3.447,822,3.924,823,3.924,824,3.924,825,3.924,826,3.804,827,3.924,828,3.924,829,4.839,830,3.924,831,2.898,832,3.924,833,3.924,834,3.924,835,3.924,836,3.924]],["title/modules/FinalAttendanceModule.html",[89,1.309,153,2.772]],["body/modules/FinalAttendanceModule.html",[3,0.12,4,0.108,5,0.096,15,0.011,27,0.408,29,0.132,30,0.143,32,0.007,33,0.007,36,1.87,68,0.781,89,2.111,91,1.946,92,2.013,93,2.163,94,2.163,95,2.013,96,3.274,97,3.274,101,2.901,102,2.163,103,2.163,107,2.336,108,1.434,109,2.901,149,5.127,153,5.569,155,4.624,158,4.415,177,3.984,178,3.349,199,3.984,296,2.013,326,3.621,466,3.132,780,2.952,802,5.07,820,5.245,821,3.984,837,3.984,838,3.984,839,4.536,840,3.984,841,4.536,842,4.536,843,3.349,844,4.536,845,3.984,846,4.536]],["title/injectables/FinalAttendanceService.html",[111,0.995,820,2.627]],["body/injectables/FinalAttendanceService.html",[3,0.056,4,0.05,5,0.045,7,0.222,14,0.456,15,0.011,16,0.729,17,0.6,19,0.781,27,0.363,28,0.691,29,0.062,30,0.109,32,0.004,33,0.004,39,0.875,49,1.076,50,1.019,51,0.992,53,1.402,68,0.366,78,1.207,80,1.24,108,0.672,111,0.807,112,0.853,114,2.39,115,1.191,117,2.232,121,1.873,126,0.977,128,1.957,132,2.17,178,1.568,187,1.227,194,1.779,209,1.382,211,3.975,225,2.841,226,3.034,247,3.272,252,3.854,272,3.502,285,1.695,287,3.007,295,1.865,296,1.938,297,1.24,306,1.695,308,1.865,314,1.695,315,1.467,379,1.388,462,2.692,466,1.467,581,1.247,585,1.247,586,1.094,601,1.382,780,1.382,782,3.834,783,5.208,784,1.695,795,1.865,796,1.382,801,3.834,804,4.416,807,3.034,808,3.484,816,3.034,820,2.13,845,1.865,847,1.865,848,3.454,849,5.028,850,2.124,851,3.218,852,2.124,853,3.454,854,2.124,855,2.124,856,3.454,857,3.713,858,2.124,859,2.124,860,2.124,861,2.124,862,2.124,863,2.124,864,2.124,865,3.034,866,2.124,867,2.124,868,1.467,869,2.124,870,2.124,871,2.124,872,4.365,873,2.124,874,2.124,875,2.124,876,2.124,877,2.124,878,2.124,879,2.124,880,2.124,881,2.124,882,2.124,883,4.365,884,4.365,885,2.124,886,2.124,887,1.865,888,3.454,889,4.365,890,4.365,891,2.124,892,1.865,893,2.124,894,2.124,895,2.124,896,3.834,897,4.365,898,2.124,899,2.124,900,3.454,901,2.124,902,2.124,903,2.124,904,2.124,905,4.365,906,2.124,907,4.365,908,2.124,909,2.124,910,3.454,911,5.028,912,5.028,913,2.124,914,3.454,915,3.454,916,3.034,917,2.757,918,3.454,919,2.124,920,2.124,921,1.568,922,3.454,923,3.454,924,2.124,925,2.757,926,5.028,927,5.028,928,5.208,929,4.416,930,4.416,931,3.454,932,5.208,933,3.454,934,3.454,935,2.124,936,3.454,937,1.865,938,2.124,939,2.124,940,2.124,941,2.124,942,1.695,943,2.124,944,2.124,945,2.124,946,2.124,947,2.124,948,2.124,949,2.124,950,1.865,951,2.124,952,2.124,953,2.124,954,2.124,955,2.124,956,2.124,957,2.124,958,2.124,959,2.124,960,2.124,961,2.124,962,1.865,963,2.124,964,2.124,965,2.124]],["title/controllers/HealthController.html",[34,1.309,966,3.145]],["body/controllers/HealthController.html",[3,0.116,4,0.104,5,0.093,7,0.458,15,0.011,17,1.24,19,0.578,27,0.368,29,0.128,30,0.138,32,0.007,33,0.007,34,1.348,36,1.348,38,2.353,39,1.507,53,1.111,68,0.756,71,2.353,72,1.605,80,1.467,115,1.512,128,2.817,134,5.224,309,5.224,518,6.851,530,3.852,681,4.463,887,5.224,966,4.392,967,3.852,968,4.385,969,5.948,970,4.385,971,4.385,972,4.385,973,5.948,974,5.948,975,5.948,976,5.948,977,4.385,978,4.385,979,6.749,980,3.5,981,4.392,982,4.385,983,5.948,984,2.705,985,3.238,986,4.385,987,4.385,988,4.385,989,4.385,990,3.238,991,4.385,992,5.948,993,4.385,994,4.385,995,4.385,996,4.385,997,3.852,998,5.224,999,5.948,1000,5.948,1001,4.385,1002,4.385,1003,5.948,1004,7.237,1005,5.948,1006,4.385,1007,4.385]],["title/modules/HealthModule.html",[89,1.309,1008,3.4]],["body/modules/HealthModule.html",[3,0.158,4,0.142,5,0.127,15,0.011,27,0.396,29,0.174,30,0.189,32,0.009,33,0.009,36,2.235,68,1.032,89,2.235,91,2.571,109,2.857,966,5.778,980,4.783,1008,5.803,1009,5.991,1010,7.269,1011,7.269,1012,5.263,1013,5.991]],["title/interfaces/IErrorBody.html",[673,2.5,1014,1.827]],["body/interfaces/IErrorBody.html",[3,0.114,4,0.102,5,0.091,7,0.449,8,1.614,14,0.891,15,0.011,16,1.148,29,0.226,32,0.007,33,0.007,51,1.836,78,2.091,361,2.049,446,3.586,673,3.443,680,4.671,681,4.426,683,4.671,1014,3.079,1015,2.522,1016,2.797,1017,5.299,1018,5.579,1019,2.797,1020,3.173,1021,3.173,1022,3.173,1023,3.173,1024,3.173,1025,3.173,1026,3.173,1027,3.173,1028,3.173,1029,3.618,1030,4.332,1031,3.618,1032,3.173,1033,2.797]],["title/interfaces/ItemsBody.html",[1014,1.827,1031,2.627]],["body/interfaces/ItemsBody.html",[3,0.127,4,0.114,5,0.102,7,0.503,8,1.741,14,0.837,15,0.01,16,1.124,29,0.233,32,0.008,33,0.008,78,2.115,361,2.296,446,3.557,673,2.827,680,3.134,681,2.97,683,3.134,1014,3.224,1015,2.827,1016,3.134,1017,3.556,1018,4.885,1019,3.134,1020,3.556,1021,3.556,1022,3.556,1023,3.556,1024,3.556,1025,3.556,1026,3.556,1027,3.556,1028,3.556,1029,3.905,1030,5.548,1031,4.363,1032,5.548,1033,3.134]],["title/injectables/JwtStorage.html",[111,0.995,419,2.627]],["body/injectables/JwtStorage.html",[3,0.088,4,0.079,5,0.071,7,0.349,8,1.351,11,1.088,14,0.807,15,0.011,16,0.972,17,0.945,19,0.972,27,0.348,28,1.088,29,0.097,30,0.105,32,0.006,33,0.006,39,1.244,49,1.435,50,1.359,51,1.323,53,1.244,68,0.576,78,1.969,80,1.211,108,1.057,111,1.147,112,1.343,114,2.323,115,1.693,117,3.17,126,1.537,128,3.136,132,1.224,283,3.175,287,1.262,297,1.684,341,2.309,348,1.794,349,2.752,355,5.948,356,2.309,359,3.787,360,4.803,362,2.669,364,2.669,365,2.669,374,3.196,379,1.343,390,1.656,403,2.669,419,3.029,441,5.7,447,3.196,448,3.626,449,3.626,665,1.794,739,2.469,1014,1.435,1034,2.669,1035,5.111,1036,5.111,1037,5.273,1038,4.313,1039,4.313,1040,3.344,1041,4.91,1042,4.313,1043,3.344,1044,4.313,1045,3.344,1046,3.344,1047,4.313,1048,3.344,1049,4.313,1050,3.344,1051,2.937,1052,4.735,1053,4.313,1054,2.937,1055,2.937,1056,2.937,1057,4.313,1058,2.937,1059,2.937,1060,2.937,1061,2.937,1062,2.937,1063,2.937]],["title/injectables/JwtStrategy.html",[111,0.995,1064,3.145]],["body/injectables/JwtStrategy.html",[3,0.114,4,0.102,5,0.091,7,0.449,14,0.613,15,0.011,16,0.566,19,0.773,27,0.387,29,0.171,30,0.185,32,0.007,33,0.007,39,1.487,49,1.447,50,1.37,51,1.333,53,1.089,68,0.74,78,1.031,80,1.06,111,1.37,112,1.727,114,2.173,115,2.023,128,1.673,132,1.573,167,2.65,283,2.905,287,2.214,297,1.647,302,2.968,335,2.797,341,2.968,342,5.299,345,2.65,348,2.306,349,4.448,350,3.43,358,3.43,374,3.818,388,2.968,395,2.65,423,2.968,437,4.332,656,2.772,734,5.728,735,4.332,737,3.43,738,3.43,1037,4.932,1064,4.332,1065,3.43,1066,5.866,1067,4.297,1068,4.297,1069,5.153,1070,4.297,1071,3.775,1072,3.775,1073,3.775,1074,5.867,1075,5.867,1076,5.153,1077,3.775,1078,3.775,1079,3.775]],["title/entities/Marks.html",[0,1.469,1080,2.772]],["body/entities/Marks.html",[0,2.076,2,2.129,3,0.118,4,0.106,5,0.094,7,0.466,8,1.656,11,2.216,14,0.837,15,0.011,16,0.793,17,2.217,18,4.395,19,1.033,23,3.998,27,0.355,28,1.453,29,0.13,30,0.141,32,0.007,33,0.007,216,3.084,296,3.558,337,2.906,446,3.236,447,3.918,466,3.084,562,5.437,564,5.437,575,5.62,576,3.564,725,5.383,790,5.288,797,5.03,799,4.433,1080,3.918,1081,3.922,1082,5.437,1083,4.128,1084,4.465,1085,4.465,1086,4.465,1087,4.465,1088,4.465,1089,4.465,1090,4.465,1091,3.922,1092,3.922]],["title/controllers/MarksController.html",[34,1.309,1093,3.145]],["body/controllers/MarksController.html",[3,0.064,4,0.057,5,0.051,7,0.252,11,2.043,14,0.734,15,0.011,16,1.052,17,2.078,19,0.968,27,0.264,29,0.07,30,0.076,32,0.005,33,0.005,34,0.742,36,0.742,38,1.295,39,0.97,40,1.421,41,2.322,42,1.699,43,1.642,44,1.76,47,2.552,49,1.734,50,1.642,51,1.598,53,1.862,55,1.11,56,2.36,58,1.11,59,2.36,62,2.36,64,2.246,65,2.791,66,1.353,67,1.417,68,0.416,71,1.295,72,0.883,73,1.11,77,1.353,78,0.579,79,1.417,80,1.895,83,1.488,87,1.488,114,2.649,121,2.823,132,1.981,194,1.971,227,2.054,245,3.055,247,3.523,257,1.667,287,1.795,301,1.488,305,1.926,361,2.268,379,1.911,388,3.738,390,2.355,395,3.338,396,3.873,398,1.926,521,3.033,559,5.156,563,2.246,826,1.667,829,4.754,831,2.826,1080,3.095,1083,1.971,1093,2.826,1094,2.12,1095,3.362,1096,3.827,1097,5.412,1098,3.362,1099,3.827,1100,2.12,1101,2.413,1102,2.12,1103,3.827,1104,2.413,1105,3.362,1106,2.413,1107,2.12,1108,2.413,1109,2.413,1110,2.413,1111,3.827,1112,2.413,1113,3.827,1114,3.362,1115,2.413,1116,2.12,1117,3.827,1118,2.413,1119,2.413,1120,2.413,1121,2.413,1122,2.413,1123,3.996,1124,2.413,1125,2.413,1126,2.826,1127,2.413,1128,3.095,1129,2.12,1130,1.926,1131,2.413,1132,2.413,1133,2.413,1134,2.413,1135,5.901,1136,2.413,1137,4.756,1138,3.827,1139,2.413,1140,3.362,1141,2.413,1142,1.667,1143,2.413,1144,2.413,1145,2.413,1146,2.413,1147,2.12,1148,2.413,1149,2.413,1150,2.413,1151,2.413,1152,2.413,1153,2.413,1154,2.413,1155,2.413,1156,2.413,1157,2.413,1158,2.413,1159,2.413,1160,2.413,1161,2.413]],["title/modules/MarksModule.html",[89,1.309,154,2.942]],["body/modules/MarksModule.html",[3,0.127,4,0.114,5,0.102,15,0.011,27,0.403,29,0.14,30,0.151,32,0.008,33,0.008,36,1.943,68,0.827,89,2.171,91,2.06,92,2.132,93,2.29,94,2.29,95,2.132,96,3.368,97,3.368,101,3.013,102,2.29,103,2.29,107,2.473,108,1.518,109,3.013,154,5.886,155,4.577,156,4.81,158,2.691,326,3.833,843,3.546,1080,3.125,1093,5.216,1128,5.583,1129,4.218,1162,4.218,1163,4.802,1164,4.218,1165,4.218,1166,4.802,1167,4.802,1168,4.218,1169,4.218,1170,4.802]],["title/injectables/MarksService.html",[111,0.995,1128,2.772]],["body/injectables/MarksService.html",[3,0.034,4,0.031,5,0.027,7,0.135,8,0.354,11,1.986,14,0.618,15,0.011,16,0.968,19,0.826,27,0.254,28,0.419,29,0.037,30,0.13,32,0.003,33,0.003,39,0.573,40,0.676,41,1.559,42,1.004,43,0.97,44,1.902,49,1.46,50,1.382,51,1.345,53,1.546,55,1.04,58,1.04,61,1.079,68,0.222,73,0.593,80,1.505,108,0.408,111,0.528,112,0.518,114,2.566,115,0.78,117,1.613,121,2.452,126,0.593,128,1.177,132,2.584,134,2.51,135,1.562,227,1.214,247,4.34,272,2.753,283,1.12,285,1.029,287,2.951,296,3.096,301,3.524,314,1.029,361,2.172,379,2.296,390,2.829,446,1.342,462,2.241,521,1.694,559,4.539,562,5.637,563,3.678,564,5.637,565,4.001,566,3.651,575,1.67,576,1.029,581,1.774,585,1.774,605,3.364,606,1.67,671,1.806,704,1.806,857,1.67,892,4.582,916,1.132,917,2.413,921,0.952,925,2.413,929,1.987,930,1.987,937,1.132,1080,3.972,1082,5.002,1083,3.592,1092,3.633,1095,1.987,1098,1.987,1100,1.987,1102,1.987,1105,1.987,1107,1.987,1114,1.132,1116,1.987,1126,0.952,1128,1.472,1130,1.029,1142,0.89,1169,1.132,1171,1.132,1172,2.262,1173,2.262,1174,3.634,1175,2.262,1176,1.289,1177,2.883,1178,1.289,1179,2.262,1180,1.289,1181,1.289,1182,1.289,1183,2.262,1184,4.136,1185,1.289,1186,2.262,1187,1.289,1188,1.289,1189,1.289,1190,1.289,1191,1.289,1192,1.289,1193,1.289,1194,2.262,1195,1.289,1196,1.132,1197,1.289,1198,3.634,1199,2.262,1200,3.192,1201,2.262,1202,3.634,1203,3.023,1204,3.633,1205,4.911,1206,4.136,1207,5.919,1208,5.482,1209,3.023,1210,3.023,1211,2.262,1212,3.023,1213,2.262,1214,3.023,1215,1.289,1216,1.289,1217,2.262,1218,2.262,1219,2.262,1220,2.262,1221,1.132,1222,3.023,1223,3.023,1224,3.023,1225,2.262,1226,2.262,1227,2.262,1228,1.289,1229,3.023,1230,3.634,1231,3.023,1232,2.262,1233,3.023,1234,2.262,1235,2.262,1236,1.289,1237,2.262,1238,2.262,1239,3.634,1240,3.023,1241,2.262,1242,1.289,1243,3.634,1244,1.289,1245,1.289,1246,1.289,1247,1.289,1248,2.262,1249,1.289,1250,1.289,1251,1.289,1252,1.289,1253,1.289,1254,1.289,1255,2.262,1256,1.289,1257,2.262,1258,1.289,1259,1.289,1260,1.289,1261,1.289,1262,1.289,1263,1.289,1264,1.289,1265,1.132,1266,2.262,1267,1.289,1268,1.289,1269,1.289,1270,1.289,1271,1.289,1272,1.289,1273,1.289,1274,1.289,1275,1.289,1276,1.289,1277,1.289,1278,1.289,1279,1.289,1280,1.289,1281,1.289,1282,1.289,1283,2.262,1284,1.289,1285,1.289,1286,1.289,1287,1.289,1288,2.262,1289,2.262,1290,1.289,1291,1.289,1292,1.289,1293,1.289,1294,1.289,1295,1.289,1296,1.289,1297,2.262,1298,2.262,1299,1.289,1300,1.289,1301,1.289,1302,1.289,1303,1.289,1304,1.289,1305,1.289]],["title/classes/NestJwtStrategy.html",[30,0.134,423,2.942]],["body/classes/NestJwtStrategy.html",[3,0.124,4,0.112,5,0.099,15,0.011,16,0.619,27,0.395,29,0.181,30,0.196,32,0.007,33,0.007,68,0.809,78,1.127,80,1.158,111,1.455,114,1.528,115,1.62,128,1.828,132,1.719,167,2.897,283,2.326,287,2.35,297,1.723,302,3.244,341,3.244,342,4.599,345,2.897,348,2.521,349,4.17,350,3.749,358,3.749,374,4.053,388,3.244,395,2.897,423,4.301,437,5.159,439,1.292,656,2.9,734,5.577,735,4.599,737,3.749,738,3.749,1037,3.468,1064,3.468,1065,3.749,1069,4.126,1071,4.126,1072,4.126,1073,4.126,1074,6.137,1075,6.137,1076,5.47,1077,4.126,1078,4.126,1079,5.47]],["title/interfaces/PaginationMetaInterface.html",[1014,1.827,1019,2.772]],["body/interfaces/PaginationMetaInterface.html",[3,0.108,4,0.097,5,0.086,7,0.426,8,1.558,14,0.885,15,0.011,16,1.142,29,0.222,32,0.007,33,0.007,51,1.814,78,2.079,361,1.947,446,3.801,673,2.396,680,2.657,681,2.518,683,2.657,1014,3.013,1015,2.396,1016,2.657,1017,3.015,1018,4.49,1019,3.686,1020,5.185,1021,5.185,1022,5.185,1023,5.185,1024,5.185,1025,5.185,1026,5.185,1027,5.185,1028,5.185,1029,3.493,1030,4.182,1031,3.493,1032,3.015,1033,2.657]],["title/interfaces/Req.html",[335,2.772,1014,1.827]],["body/interfaces/Req.html",[3,0.163,4,0.146,5,0.13,7,0.644,8,2.034,14,0.644,15,0.01,27,0.3,29,0.179,32,0.009,33,0.009,78,1.479,167,3.801,297,2.026,335,4.813,342,4.551,656,3.069,1014,2.644,1015,3.618,1306,5.414,1307,7.922]],["title/interfaces/ResourceBody.html",[1014,1.827,1029,2.627]],["body/interfaces/ResourceBody.html",[3,0.127,4,0.114,5,0.102,7,0.503,8,1.741,14,0.837,15,0.01,16,1.124,29,0.233,32,0.008,33,0.008,78,2.115,361,3.583,446,3.557,673,2.827,680,3.134,681,2.97,683,3.134,1014,3.224,1015,2.827,1016,3.134,1017,3.556,1018,4.885,1019,3.134,1020,3.556,1021,3.556,1022,3.556,1023,3.556,1024,3.556,1025,3.556,1026,3.556,1027,3.556,1028,3.556,1029,4.363,1030,5.548,1031,3.905,1032,3.556,1033,3.134]],["title/injectables/ResponseTransformInterceptor.html",[111,0.995,527,2.942]],["body/injectables/ResponseTransformInterceptor.html",[3,0.111,4,0.1,5,0.089,7,0.439,14,0.439,15,0.011,16,0.554,19,0.554,27,0.375,29,0.168,30,0.133,32,0.007,33,0.007,39,1.464,49,1.036,50,0.982,51,0.955,53,1.065,68,0.724,80,1.899,111,1.349,112,1.689,194,2.164,287,2.491,302,4.56,337,3.76,361,3.39,379,1.689,521,2.356,527,3.99,665,2.255,753,5.27,754,3.355,755,5.675,756,5.27,757,5.675,759,4.612,760,5.27,762,4.612,765,3.103,981,3.103,984,3.563,1033,3.76,1140,3.692,1308,4.266,1309,3.103,1310,4.203,1311,3.692,1312,4.203,1313,4.203,1314,3.355,1315,4.203,1316,4.203,1317,3.692,1318,3.355,1319,3.692,1320,4.612,1321,3.692,1322,4.203,1323,4.203,1324,4.203,1325,4.203,1326,4.203,1327,4.203,1328,5.777,1329,4.203,1330,4.203,1331,3.692,1332,4.203,1333,4.203,1334,4.203,1335,4.203,1336,4.203]],["title/entities/Student.html",[0,1.469,296,1.891]],["body/entities/Student.html",[0,1.761,1,2.862,2,1.683,3,0.093,4,0.084,5,0.075,7,0.368,8,1.405,11,1.953,14,0.858,15,0.011,16,1.106,17,2.323,18,4.728,19,1.083,23,3.523,27,0.292,28,1.148,29,0.103,30,0.242,32,0.006,33,0.006,78,1.879,194,3.091,211,3.748,296,2.267,297,1.851,580,3.906,581,3.523,582,3.702,583,4.791,584,4.791,585,3.523,587,4.791,600,2.606,796,2.297,797,3.771,798,4.077,799,3.324,1337,3.1,1338,5.272,1339,5.272,1340,3.529,1341,3.1,1342,3.529,1343,4.791,1344,3.529,1345,3.529,1346,3.529,1347,3.529,1348,3.529,1349,3.529,1350,3.529,1351,3.529,1352,3.529,1353,4.791,1354,3.529,1355,3.1,1356,4.486,1357,4.486,1358,3.1,1359,3.529,1360,2.606,1361,2.606,1362,3.771,1363,2.817]],["title/controllers/StudentController.html",[34,1.309,1364,3.145]],["body/controllers/StudentController.html",[3,0.073,4,0.066,5,0.058,7,0.288,11,2.16,14,0.722,15,0.011,16,1.053,17,2.185,19,1.018,27,0.337,28,0.897,29,0.08,30,0.163,32,0.005,33,0.005,34,0.848,36,0.848,38,1.48,39,1.077,40,1.27,41,2.497,42,1.886,43,1.823,44,1.953,47,2.28,49,1.706,50,1.616,51,1.572,53,1.958,55,1.268,56,2.62,58,1.268,59,2.62,61,1.315,62,2.62,64,2.494,65,1.619,66,1.546,67,1.619,68,0.475,71,1.48,72,1.01,73,1.268,77,1.546,78,0.662,79,1.619,80,1.93,83,1.701,85,1.795,87,1.701,114,2.546,121,2.497,187,1.509,225,1.795,227,2.28,242,3.391,257,1.905,272,2.904,296,1.224,480,1.795,563,2.494,577,4.955,582,2.62,808,2.202,818,2.423,826,4.02,921,3.137,984,1.701,985,2.037,1142,4.02,1364,3.137,1365,2.423,1366,5.112,1367,5.112,1368,3.137,1369,3.137,1370,5.112,1371,5.112,1372,4.248,1373,2.758,1374,4.248,1375,2.758,1376,2.423,1377,2.758,1378,2.758,1379,2.758,1380,2.758,1381,2.758,1382,2.758,1383,2.037,1384,4.248,1385,2.758,1386,2.758,1387,2.037,1388,2.758,1389,4.248,1390,2.758,1391,4.248,1392,2.758,1393,2.758,1394,4.641,1395,2.758,1396,2.423,1397,3.391,1398,2.758,1399,2.758,1400,2.758,1401,4.248,1402,2.758,1403,2.758,1404,2.758,1405,2.758,1406,2.758,1407,2.758,1408,2.758,1409,2.423,1410,2.758,1411,2.758,1412,2.758,1413,2.758,1414,2.758,1415,2.423,1416,2.758,1417,2.758,1418,2.758,1419,2.758]],["title/modules/StudentModule.html",[89,1.309,155,2.5]],["body/modules/StudentModule.html",[3,0.121,4,0.109,5,0.097,15,0.011,27,0.412,29,0.133,30,0.145,32,0.007,33,0.007,36,1.884,68,0.79,89,2.122,91,1.967,92,2.035,93,2.186,94,2.186,95,2.035,96,3.291,97,3.291,101,2.922,102,2.186,103,2.186,107,2.361,108,1.45,109,2.922,151,4.737,153,2.984,155,4.965,158,4.304,272,4.774,296,2.035,297,1.511,780,2.984,796,2.984,843,3.385,851,2.361,868,3.166,1364,5.097,1396,4.027,1420,4.027,1421,4.027,1422,4.027,1423,4.584,1424,4.584,1425,4.584,1426,4.027,1427,4.027,1428,4.584,1429,4.584,1430,4.584,1431,4.584]],["title/injectables/StudentService.html",[111,0.995,272,2.387]],["body/injectables/StudentService.html",[0,1.459,1,1.588,3,0.054,4,0.048,5,0.043,7,0.212,11,2.156,14,0.668,15,0.011,16,0.971,19,0.956,27,0.34,28,0.661,29,0.059,30,0.215,32,0.004,33,0.004,39,0.844,40,1.463,41,2.1,42,1.478,43,1.429,44,1.531,49,1.578,50,1.495,51,1.455,53,1.807,55,1.531,58,1.531,61,0.968,68,0.35,73,0.934,78,1.016,80,1.723,108,0.642,111,0.778,112,0.816,114,2.736,115,1.148,117,2.173,121,2.843,126,0.934,128,1.906,132,2.425,187,1.919,189,1.478,227,1.787,272,1.866,283,2.424,287,2.739,296,2.399,297,1.758,301,1.253,306,1.621,315,2.3,361,2.018,379,0.816,390,1.006,462,2.054,476,3.599,563,2.873,577,4.165,580,2.167,581,1.955,582,3.019,583,2.658,584,2.658,585,1.955,586,2.18,587,2.658,600,1.5,601,1.322,689,1.403,741,1.784,743,2.3,820,2.61,851,3.157,868,1.403,917,3.378,921,3.99,942,4.894,962,1.784,1082,3.908,1126,1.5,1366,4.3,1367,4.3,1368,2.459,1369,2.459,1370,4.3,1371,4.3,1376,2.925,1383,2.459,1387,2.459,1397,1.621,1426,1.784,1432,1.784,1433,2.031,1434,2.031,1435,3.33,1436,2.031,1437,2.031,1438,2.031,1439,3.33,1440,2.031,1441,3.33,1442,2.031,1443,2.031,1444,2.031,1445,2.031,1446,2.031,1447,2.031,1448,2.031,1449,2.031,1450,2.031,1451,2.031,1452,2.031,1453,1.784,1454,2.031,1455,2.031,1456,2.031,1457,2.925,1458,3.33,1459,3.33,1460,2.658,1461,3.33,1462,3.33,1463,3.33,1464,3.33,1465,3.33,1466,3.33,1467,3.33,1468,3.33,1469,3.33,1470,3.33,1471,2.925,1472,2.925,1473,2.031,1474,2.031,1475,2.031,1476,2.031,1477,2.031,1478,4.232,1479,4.895,1480,3.33,1481,2.031,1482,3.33,1483,4.895,1484,4.895,1485,2.031,1486,2.031,1487,2.031,1488,2.031,1489,2.031,1490,2.031,1491,2.031,1492,3.33,1493,3.33,1494,2.031,1495,3.33,1496,2.031,1497,2.031,1498,2.031,1499,2.031,1500,2.925,1501,1.784,1502,2.031,1503,2.031,1504,2.031,1505,1.621,1506,1.621,1507,2.031]],["title/entities/Subject.html",[0,1.469,1083,2.193]],["body/entities/Subject.html",[0,2.208,2,2.335,3,0.129,4,0.116,5,0.104,7,0.511,8,1.761,11,2.321,14,0.856,15,0.011,16,0.997,17,2.219,18,4.399,19,1.034,23,4.186,27,0.312,28,1.594,29,0.142,30,0.262,32,0.008,33,0.008,216,4.421,446,3.358,566,4.399,600,3.617,605,5.266,606,5.266,799,4.167,1083,3.297,1341,4.302,1508,4.302,1509,4.898,1510,7.563,1511,4.898,1512,4.898,1513,4.898,1514,4.898]],["title/controllers/SubjectController.html",[34,1.309,1515,3.145]],["body/controllers/SubjectController.html",[3,0.087,4,0.078,5,0.069,7,0.342,11,2.307,14,0.766,15,0.011,16,1.106,17,2.129,19,0.992,27,0.33,29,0.095,30,0.103,32,0.006,33,0.006,34,1.008,36,1.008,38,1.76,39,1.227,40,1.447,41,2.726,42,2.149,43,2.077,44,2.226,47,3.088,49,1.809,50,1.713,51,1.667,53,1.908,55,1.508,56,2.986,58,1.508,59,2.986,61,1.564,62,2.986,64,2.842,65,1.925,66,1.838,67,1.925,68,0.565,71,1.76,72,1.2,73,1.508,77,1.838,78,0.787,79,1.925,80,1.857,83,2.023,85,2.135,87,2.023,114,1.872,121,1.407,227,2.598,234,4.252,257,2.265,305,2.618,480,2.135,563,4.163,566,2.986,602,5.323,621,3.343,1083,1.689,1177,3.377,1200,2.881,1368,3.575,1383,2.422,1409,2.881,1515,3.575,1516,2.881,1517,5.054,1518,2.881,1519,3.28,1520,3.28,1521,3.28,1522,3.28,1523,4.841,1524,3.28,1525,2.881,1526,4.841,1527,3.28,1528,3.28,1529,3.28,1530,4.68,1531,3.28,1532,2.881,1533,3.864,1534,3.28,1535,3.28,1536,3.28,1537,3.28,1538,3.28,1539,3.28,1540,3.28,1541,3.28,1542,3.28,1543,3.28,1544,3.28]],["title/modules/SubjectModule.html",[89,1.309,156,2.627]],["body/modules/SubjectModule.html",[3,0.133,4,0.12,5,0.107,15,0.011,27,0.395,29,0.147,30,0.159,32,0.008,33,0.008,36,2.005,68,0.869,89,2.223,91,2.163,92,2.238,93,2.404,94,2.404,95,2.238,96,3.448,97,3.448,101,3.111,102,2.404,103,2.404,107,2.596,108,1.594,109,3.111,151,4.885,156,5.216,1083,2.596,1177,5.071,1427,4.428,1515,5.34,1532,4.428,1545,4.428,1546,4.428,1547,4.428,1548,5.042,1549,5.042,1550,5.042,1551,4.428,1552,5.042]],["title/injectables/SubjectService.html",[111,0.995,1177,2.5]],["body/injectables/SubjectService.html",[0,1.389,2,1.228,3,0.068,4,0.061,5,0.054,7,0.269,11,2.101,14,0.729,15,0.011,16,1.064,19,0.946,27,0.329,28,0.838,29,0.075,30,0.226,32,0.005,33,0.005,39,1.021,40,1.204,41,2.407,42,1.789,43,1.729,44,1.853,49,1.722,50,1.631,51,1.587,53,1.769,55,1.853,58,1.853,61,1.921,68,0.444,73,1.185,80,1.664,108,0.815,111,0.941,112,1.035,114,2.714,115,1.389,117,2.491,121,2.895,126,1.185,128,1.568,132,2.229,133,2.056,134,1.779,135,1.779,227,2.162,287,2.635,301,3.06,315,1.779,379,2.447,390,2.457,462,1.589,476,3.96,480,1.677,563,3.96,566,3.756,602,4.671,605,2.975,606,2.975,621,1.779,743,1.779,942,5.729,1083,3.474,1177,2.365,1368,2.975,1383,2.975,1453,2.263,1500,3.539,1501,2.263,1517,3.539,1518,3.539,1525,3.539,1530,4.206,1533,3.216,1551,2.263,1553,2.263,1554,2.576,1555,2.576,1556,4.029,1557,2.576,1558,4.029,1559,2.576,1560,4.029,1561,2.576,1562,2.576,1563,2.576,1564,2.576,1565,2.576,1566,2.576,1567,2.576,1568,4.029,1569,4.029,1570,4.029,1571,4.029,1572,4.962,1573,2.576,1574,4.029,1575,4.029,1576,3.539,1577,2.576,1578,2.576,1579,2.576,1580,2.576,1581,4.029,1582,4.029,1583,4.029,1584,2.576,1585,2.576,1586,2.576,1587,2.576,1588,2.576,1589,2.576]],["title/entities/Teacher.html",[0,1.469,1590,2.627]],["body/entities/Teacher.html",[0,2.128,1,3.431,2,1.474,3,0.082,4,0.073,5,0.065,7,0.323,8,1.274,11,2.151,14,0.845,15,0.011,16,1.066,17,2.266,18,4.73,19,1.056,23,3.261,27,0.322,28,1.006,29,0.09,30,0.146,32,0.006,33,0.006,50,1.621,78,1.333,194,3.705,211,3.178,297,1.774,337,3.015,446,2.056,580,3.616,581,3.261,582,3.427,585,3.261,616,4.435,617,4.435,618,4.435,619,4.435,620,4.435,621,3.837,796,2.012,797,4.881,798,4.435,799,2.012,800,4.069,1083,3.573,1091,2.715,1343,2.467,1353,2.467,1355,4.069,1356,6.095,1357,5.42,1358,4.069,1360,2.282,1361,2.282,1362,3.42,1363,2.467,1590,3.427,1591,2.715,1592,3.091,1593,3.091,1594,3.091,1595,3.091,1596,3.091,1597,3.091,1598,3.091,1599,3.091,1600,3.091,1601,3.091,1602,3.091,1603,3.091,1604,3.091,1605,4.632,1606,4.632,1607,3.091,1608,3.091,1609,4.632,1610,2.715,1611,2.467,1612,3.091,1613,2.467,1614,2.715,1615,3.091,1616,4.632,1617,4.632,1618,3.091,1619,3.091]],["title/controllers/TeacherController.html",[34,1.309,1620,3.145]],["body/controllers/TeacherController.html",[3,0.096,4,0.087,5,0.077,7,0.381,11,2.395,14,0.738,15,0.011,16,1.04,17,2.081,19,0.97,27,0.359,29,0.106,30,0.115,32,0.006,33,0.006,34,1.122,36,1.122,38,1.958,39,1.326,40,1.564,41,2.866,42,2.323,43,2.245,44,2.406,47,2.808,49,1.744,50,1.652,51,1.607,53,1.865,55,1.678,56,3.227,58,1.678,59,3.227,61,1.74,62,3.227,64,3.071,65,2.142,66,2.045,67,2.142,68,0.629,71,1.958,72,1.336,73,1.678,77,2.045,78,0.876,79,2.142,80,1.815,83,2.251,85,2.375,87,2.251,227,2.808,257,2.52,480,2.375,613,5.139,826,4.614,984,2.251,985,2.695,1142,4.614,1590,3.227,1620,3.863,1621,3.205,1622,3.205,1623,3.649,1624,3.649,1625,3.649,1626,3.649,1627,3.649,1628,3.649,1629,3.649,1630,3.649,1631,5.726,1632,3.649,1633,3.981,1634,3.205,1635,4.176,1636,3.649,1637,3.649,1638,3.649,1639,3.649,1640,3.649,1641,3.649,1642,3.649,1643,3.649,1644,3.649,1645,3.649,1646,3.649,1647,3.649,1648,3.649]],["title/modules/TeacherModule.html",[89,1.309,157,2.942]],["body/modules/TeacherModule.html",[3,0.125,4,0.112,5,0.1,15,0.011,27,0.411,29,0.137,30,0.149,32,0.007,33,0.007,36,1.921,68,0.814,89,2.154,90,5.048,91,2.026,92,2.097,93,2.252,94,2.252,95,2.097,96,3.341,97,2.252,101,2.98,102,2.252,103,2.252,107,2.432,108,1.493,109,2.98,156,4.784,157,5.91,158,4.347,297,1.165,796,3.074,843,3.487,851,2.432,868,3.262,1168,4.148,1590,2.913,1620,5.173,1633,5.187,1634,4.148,1649,4.148,1650,4.148,1651,4.723,1652,4.723,1653,4.723,1654,4.148,1655,4.723,1656,4.723]],["title/injectables/TeacherService.html",[111,0.995,1633,2.772]],["body/injectables/TeacherService.html",[0,1.617,1,3.413,3,0.062,4,0.056,5,0.05,7,0.247,9,2.779,10,2.779,11,2.329,12,2.779,13,2.779,14,0.61,15,0.011,16,0.82,19,0.86,27,0.34,28,0.769,29,0.069,30,0.148,32,0.004,33,0.004,39,0.954,40,1.746,41,2.295,42,1.671,43,1.615,44,1.731,49,1.534,50,1.453,51,1.414,53,1.577,55,1.731,58,1.731,61,1.795,68,0.407,69,4.026,73,1.087,78,1.126,80,1.44,108,0.747,111,0.879,112,0.95,114,2.588,115,1.298,117,2.375,121,2.506,126,1.087,128,2.082,132,2.556,187,1.337,189,1.671,227,2.02,287,2.849,296,1.049,297,1.765,301,2.322,315,1.632,361,2.55,379,1.512,390,1.864,580,2.45,581,2.209,582,2.322,585,2.209,586,2.416,601,1.538,613,4.248,616,3.005,617,3.005,618,3.005,619,3.005,620,3.005,621,3.694,689,1.632,743,1.632,851,3.361,868,1.632,1083,2.755,1126,1.745,1177,3.831,1196,2.076,1221,2.076,1265,3.306,1457,3.306,1471,3.306,1472,3.306,1505,1.887,1506,1.887,1576,2.076,1590,3.838,1622,3.306,1633,2.45,1635,1.887,1654,2.076,1657,2.076,1658,2.363,1659,2.363,1660,3.764,1661,2.363,1662,3.764,1663,2.363,1664,3.764,1665,2.363,1666,2.363,1667,2.363,1668,2.363,1669,2.363,1670,2.363,1671,2.363,1672,2.363,1673,3.764,1674,3.764,1675,3.764,1676,3.764,1677,3.764,1678,3.764,1679,3.764,1680,3.764,1681,3.764,1682,3.764,1683,3.764,1684,3.764,1685,3.764,1686,3.764,1687,3.764,1688,3.764,1689,3.764,1690,3.764,1691,3.764,1692,3.764,1693,2.363,1694,2.363,1695,2.363,1696,3.764,1697,3.764,1698,3.764,1699,5.349,1700,2.363,1701,3.764,1702,2.363,1703,2.363,1704,2.363,1705,2.363,1706,2.363,1707,2.363,1708,3.764,1709,3.764,1710,3.764,1711,2.363,1712,2.363,1713,2.363,1714,2.363]],["title/injectables/TimeoutInterceptor.html",[111,0.995,1715,3.4]],["body/injectables/TimeoutInterceptor.html",[3,0.136,4,0.123,5,0.109,7,0.539,14,0.539,15,0.011,19,0.68,27,0.323,29,0.15,30,0.163,32,0.008,33,0.008,39,1.679,49,1.273,50,1.206,51,1.173,53,1.308,68,0.89,80,1.804,111,1.547,112,2.074,379,2.662,396,3.184,665,2.771,753,5.288,754,5.288,755,6.159,756,5.839,757,6.159,759,4.121,760,5.839,762,5.288,763,4.535,764,6.425,765,3.812,1147,4.535,1331,4.535,1715,5.288,1716,4.535,1717,5.163,1718,6.624,1719,5.163,1720,6.624,1721,5.163,1722,5.163,1723,5.163]],["title/interfaces/TokenBody.html",[1014,1.827,1052,3.145]],["body/interfaces/TokenBody.html",[3,0.111,4,0.1,5,0.089,7,0.438,8,1.586,11,1.364,14,0.823,15,0.011,16,1.039,27,0.375,28,1.364,29,0.122,30,0.132,32,0.007,33,0.007,68,0.722,78,1.847,80,1.422,108,1.326,111,1.347,114,1.877,115,1.446,117,2.927,126,1.928,128,2.764,132,1.534,283,2.856,287,1.582,297,1.422,341,2.895,348,2.25,349,3.233,355,5.682,356,2.895,359,3.754,360,4.291,362,3.347,364,3.347,365,3.347,374,2.729,379,1.684,390,2.076,403,3.347,419,2.586,441,4.604,449,3.096,665,2.25,739,3.096,1014,1.799,1015,2.461,1034,3.347,1035,3.683,1036,3.683,1037,4.259,1042,3.683,1044,3.683,1047,3.683,1049,3.683,1051,3.683,1052,5.499,1053,6.541,1054,3.683,1055,3.683,1056,3.683,1057,5.066,1058,3.683,1059,3.683,1060,3.683,1061,3.683,1062,3.683,1063,3.683]],["title/injectables/TokenGuard.html",[111,0.995,1724,3.4]],["body/injectables/TokenGuard.html",[3,0.166,4,0.15,5,0.133,15,0.01,27,0.365,29,0.183,30,0.199,32,0.009,33,0.009,68,1.085,111,1.75,112,2.531,344,5.533,345,3.885,656,3.109,1724,5.98,1725,5.533,1726,7.491]],["title/interfaces/TokenStorage.html",[349,2.387,1014,1.827]],["body/interfaces/TokenStorage.html",[3,0.156,4,0.14,5,0.125,7,0.615,8,1.979,14,0.751,15,0.01,16,0.776,27,0.287,29,0.171,32,0.009,33,0.009,78,1.726,283,3.562,297,1.774,348,3.16,349,4.032,374,3.833,1014,2.526,1015,3.457,1038,7.105,1039,7.105,1320,6.457,1727,5.172]],["title/classes/UpdateAddressDto.html",[30,0.134,1728,3.4]],["body/classes/UpdateAddressDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,46,4.085,72,2.297,74,5.01,439,1.726,533,5.01,656,3.102,1728,5.967,1729,5.513,1730,7.475,1731,3.518]],["title/classes/UpdateAttendanceDto.html",[30,0.134,1732,3.4]],["body/classes/UpdateAttendanceDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,231,4.085,254,5.01,439,1.726,542,5.01,656,3.102,1731,3.518,1732,5.967,1733,5.513,1734,7.475]],["title/classes/UpdateClassDto.html",[30,0.134,479,3.145]],["body/classes/UpdateClassDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,470,4.085,478,5.01,479,5.519,554,5.01,656,3.102,1731,3.518,1735,5.513,1736,7.475]],["title/classes/UpdateFinalAttendanceDto.html",[30,0.134,1737,3.4]],["body/classes/UpdateFinalAttendanceDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,556,4.634,558,5.01,656,3.102,1731,3.518,1737,5.967,1738,5.513,1739,7.475,1740,6.276]],["title/classes/UpdateMarkDto.html",[30,0.134,1123,3.145]],["body/classes/UpdateMarkDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,559,4.085,561,5.01,656,3.102,1123,5.519,1130,5.01,1731,3.518,1741,5.513,1742,7.475]],["title/classes/UpdateStudentDto.html",[30,0.134,1394,3.145]],["body/classes/UpdateStudentDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,577,4.085,579,5.01,656,3.102,1394,5.519,1397,5.01,1731,3.518,1743,5.513,1744,7.475]],["title/classes/UpdateSubjectDto.html",[30,0.134,1530,2.942]],["body/classes/UpdateSubjectDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,602,4.085,604,5.01,656,3.102,1530,5.162,1533,5.01,1731,3.518,1745,5.513,1746,7.475]],["title/classes/UpdateTeacherDto.html",[30,0.134,1631,3.145]],["body/classes/UpdateTeacherDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,613,4.085,615,5.01,656,3.102,1631,5.519,1635,5.01,1731,3.518,1747,5.513,1748,7.475]],["title/classes/UpdateUserDto.html",[30,0.134,1749,3.145]],["body/classes/UpdateUserDto.html",[3,0.166,4,0.149,5,0.133,15,0.01,27,0.364,29,0.183,30,0.198,32,0.009,33,0.009,40,1.876,72,2.297,439,1.726,647,4.085,649,5.01,656,3.102,1731,3.518,1749,5.519,1750,5.513,1751,7.475,1752,5.513]],["title/entities/User.html",[0,1.469,297,1.05]],["body/entities/User.html",[0,1.976,2,1.98,3,0.11,4,0.099,5,0.088,7,0.434,8,1.576,11,2.134,14,0.821,15,0.011,16,1.011,17,2.169,18,3.964,19,1.011,23,3.851,27,0.32,28,1.351,29,0.121,30,0.181,32,0.007,33,0.007,78,2.012,187,2.33,189,2.912,194,3.642,211,3.642,216,2.867,218,5.236,297,1.413,337,2.702,447,3.729,586,4.126,646,2.867,725,5.223,799,2.702,831,5.223,925,4.573,1338,5.762,1339,5.762,1343,4.573,1353,4.573,1360,3.066,1361,3.066,1362,4.231,1363,3.314,1460,3.314,1610,6.212,1611,3.314,1753,3.647,1754,4.152,1755,4.152,1756,4.152,1757,4.152,1758,4.152,1759,4.152,1760,4.152,1761,4.152,1762,4.152,1763,4.152,1764,4.152]],["title/controllers/UserController.html",[34,1.309,1765,3.145]],["body/controllers/UserController.html",[3,0.079,4,0.071,5,0.063,7,0.31,11,2.225,14,0.714,15,0.011,16,1.036,17,1.933,19,0.901,27,0.372,29,0.086,30,0.094,32,0.005,33,0.005,34,0.914,36,0.914,38,1.596,39,1.14,40,1.622,41,2.596,42,1.997,43,1.93,44,2.068,47,2.414,49,1.603,50,1.518,51,1.477,53,1.733,55,1.367,56,2.775,58,1.367,59,2.775,61,1.418,62,2.775,64,4.168,65,1.745,66,1.666,67,1.745,68,0.512,71,1.596,72,1.088,78,1.08,79,1.745,80,1.803,83,1.834,85,1.935,87,1.834,114,1.969,115,1.025,121,1.276,128,1.751,132,1.088,187,1.598,242,3.591,287,1.122,297,1.492,347,3.951,379,1.195,390,1.472,433,1.834,480,1.935,641,1.935,642,2.195,647,1.935,660,3.322,662,2.373,663,3.107,670,3.591,700,2.373,712,4.904,747,3.322,748,2.373,826,3.107,851,2.795,984,1.834,985,2.195,990,3.322,1142,3.748,1369,3.322,1387,2.195,1415,2.612,1749,5.4,1752,2.612,1765,3.322,1766,2.612,1767,4.499,1768,2.973,1769,2.973,1770,2.973,1771,2.973,1772,2.973,1773,2.973,1774,2.973,1775,2.973,1776,2.973,1777,2.973,1778,2.973,1779,4.767,1780,4.499,1781,2.612,1782,2.612,1783,2.973,1784,2.973,1785,4.499,1786,4.499,1787,4.499,1788,4.499,1789,4.499,1790,2.973,1791,2.973,1792,2.612,1793,3.951,1794,2.612,1795,2.973,1796,2.973,1797,2.973,1798,2.973,1799,2.973,1800,2.973,1801,2.973,1802,2.973]],["title/classes/UserDetailResponse.html",[30,0.134,352,3.145]],["body/classes/UserDetailResponse.html",[3,0.153,4,0.138,5,0.122,14,0.743,15,0.01,19,0.763,27,0.282,29,0.207,30,0.183,32,0.008,33,0.008,49,1.428,50,1.352,51,1.316,115,1.996,297,1.901,348,3.107,352,5.256,439,1.592,656,2.954,665,3.82,1360,5.256,1361,5.692,1362,4.275,1803,5.682,1804,4.621,1805,6.771,1806,5.789,1807,5.789,1808,5.085,1809,5.789]],["title/modules/UserModule.html",[89,1.309,158,2.387]],["body/modules/UserModule.html",[3,0.132,4,0.118,5,0.105,15,0.011,27,0.407,29,0.145,30,0.157,32,0.008,33,0.008,36,1.99,68,0.859,89,2.211,91,2.138,92,2.212,93,2.376,94,2.376,95,2.212,96,3.429,97,3.429,101,3.087,102,2.376,103,2.376,107,2.566,108,1.576,109,2.376,158,4.615,297,1.229,418,2.793,432,5.687,433,3.073,434,4.377,685,4.781,696,3.978,851,4.415,1765,5.31,1810,4.377,1811,4.377,1812,4.377,1813,4.983,1814,4.983,1815,4.983,1816,4.377,1817,4.983,1818,4.983,1819,4.983]],["title/injectables/UserService.html",[111,0.995,851,2.193]],["body/injectables/UserService.html",[3,0.067,4,0.06,5,0.053,7,0.264,11,2.554,14,0.699,15,0.011,16,0.94,19,0.962,27,0.356,28,0.822,29,0.074,30,0.08,32,0.005,33,0.005,39,1.006,40,1.186,41,2.382,42,1.762,43,1.703,44,1.825,49,1.71,50,1.62,51,1.576,53,1.808,55,1.825,58,1.825,61,1.892,68,0.435,78,0.952,80,1.759,108,0.799,111,0.927,112,1.015,114,2.746,115,1.368,117,2.465,121,2.976,126,1.162,128,1.907,132,2.344,187,2.143,189,2.465,287,2.095,297,1.369,339,3.486,340,1.866,346,3.384,359,1.645,360,2.583,361,3.481,376,3.168,379,1.015,390,1.251,406,3.486,407,2.22,409,2.22,410,1.866,418,3.112,433,1.559,446,2.843,586,2.524,601,1.645,641,1.645,642,1.866,647,1.645,689,3.384,690,2.017,694,2.017,696,2.017,700,2.017,712,3.834,739,1.866,743,1.745,851,2.044,997,2.22,1369,2.93,1387,2.93,1460,2.017,1505,3.912,1506,4.432,1779,5.883,1781,2.22,1782,2.22,1793,3.486,1794,2.22,1816,2.22,1820,2.22,1821,3.968,1822,3.968,1823,5.552,1824,2.527,1825,3.968,1826,2.527,1827,3.968,1828,2.527,1829,4.9,1830,2.527,1831,2.527,1832,2.527,1833,2.527,1834,2.527,1835,2.527,1836,2.527,1837,2.527,1838,2.527,1839,2.527,1840,2.527,1841,2.527,1842,2.527,1843,2.527,1844,2.527,1845,2.527,1846,2.527,1847,2.527,1848,2.527,1849,2.527,1850,2.527,1851,2.527,1852,2.527,1853,4.9,1854,4.9,1855,3.968,1856,2.527]],["title/coverage.html",[1857,4.654]],["body/coverage.html",[0,2.261,1,0.941,5,0.042,6,1.733,14,0.206,15,0.011,30,0.26,32,0.004,33,0.004,34,2.213,35,1.457,37,1.733,46,1.284,69,1.217,95,0.876,111,1.774,113,1.733,138,1.457,139,1.733,142,1.284,175,2.595,205,1.733,209,1.284,210,1.733,223,1.457,224,1.733,231,1.284,252,1.217,269,1.733,272,1.106,296,0.876,297,1.023,328,1.457,329,2.595,335,1.284,349,1.106,352,1.457,379,0.793,410,1.457,418,1.106,419,1.217,420,1.362,423,1.362,427,1.575,440,1.733,461,1.733,467,1.457,468,1.733,470,1.284,476,1.158,479,1.457,495,1.733,516,1.457,517,1.733,527,1.362,532,1.733,533,2.595,541,1.733,542,2.595,553,1.733,554,2.595,556,1.457,557,1.733,558,2.595,559,1.284,560,1.733,561,2.595,577,1.284,578,1.733,579,2.595,602,1.284,603,1.733,604,2.595,613,1.284,614,1.733,615,2.595,641,1.284,642,1.457,643,1.733,647,1.284,648,1.733,649,2.595,653,1.457,654,1.733,655,2.595,660,1.457,661,2.595,662,1.575,663,2.245,664,2.595,673,1.158,685,1.457,686,1.733,687,1.733,698,1.362,712,1.362,713,1.733,714,1.733,727,1.733,746,1.733,747,1.457,748,1.575,751,1.575,752,1.733,767,1.457,768,1.733,769,2.595,774,1.575,775,1.733,780,1.284,781,1.733,802,1.457,803,1.733,820,1.217,847,1.733,851,1.016,857,6.57,966,1.457,967,1.733,981,1.457,984,1.217,1014,2.597,1016,3.13,1019,1.284,1029,1.217,1031,1.217,1034,2.595,1052,1.457,1064,1.457,1065,2.595,1080,1.284,1081,1.733,1083,1.016,1093,1.457,1094,1.733,1123,1.457,1128,1.284,1171,1.733,1177,1.158,1306,1.733,1308,3.062,1309,3.062,1314,1.575,1318,1.575,1320,2.595,1337,1.733,1364,1.457,1365,1.733,1394,1.457,1432,1.733,1508,1.733,1515,1.457,1516,1.733,1530,1.362,1553,1.733,1590,1.217,1591,1.733,1614,1.733,1620,1.457,1621,1.733,1631,1.457,1633,1.284,1657,1.733,1715,1.575,1716,1.733,1724,1.575,1725,1.733,1727,1.733,1728,1.575,1729,1.733,1732,1.575,1733,1.733,1735,1.733,1737,1.575,1738,1.733,1741,1.733,1743,1.733,1745,1.733,1747,1.733,1749,1.457,1750,1.733,1753,1.733,1765,1.457,1766,1.733,1803,1.575,1804,1.575,1820,1.733,1857,1.575,1858,1.973,1859,1.973,1860,1.973,1861,5.32,1862,5.32,1863,8.478,1864,7.739,1865,4.81,1866,3.251,1867,4.147,1868,5.725,1869,7.67,1870,1.733,1871,1.733,1872,2.856,1873,2.856,1874,2.856,1875,1.733,1876,1.733,1877,1.733,1878,1.733,1879,1.733,1880,1.733,1881,2.856,1882,1.733,1883,1.733,1884,2.856,1885,3.251,1886,1.733,1887,1.973,1888,3.251,1889,3.251,1890,1.973,1891,3.251,1892,1.973,1893,3.643,1894,1.733,1895,1.733,1896,1.733,1897,1.733,1898,1.733,1899,1.973]],["title/dependencies.html",[92,2.276,1900,3.117]],["body/dependencies.html",[15,0.011,28,1.537,30,0.197,32,0.007,33,0.007,68,0.814,72,1.729,92,2.097,108,1.493,163,4.148,166,5.49,167,3.855,178,3.487,345,2.913,346,3.262,356,3.262,433,2.913,437,3.487,540,2.913,646,3.262,735,5.173,736,4.148,765,3.487,865,4.148,980,3.77,1012,4.148,1317,4.148,1611,3.77,1901,4.723,1902,4.723,1903,4.723,1904,7.006,1905,4.723,1906,4.723,1907,4.723,1908,4.723,1909,4.723,1910,4.723,1911,6.251,1912,6.251,1913,4.723,1914,4.723,1915,4.723,1916,4.723,1917,4.723,1918,4.723,1919,4.723,1920,4.723,1921,4.723,1922,4.723,1923,4.723,1924,4.723,1925,4.723,1926,4.723,1927,4.723,1928,4.723,1929,4.723,1930,4.723,1931,4.723,1932,4.723,1933,4.723,1934,4.723,1935,4.723,1936,4.723,1937,4.723,1938,4.723,1939,4.723,1940,4.723,1941,4.723,1942,4.148,1943,4.723,1944,4.723,1945,4.723,1946,4.723,1947,4.723]],["title/miscellaneous/enumerations.html",[1948,2.083,1949,4.504]],["body/miscellaneous/enumerations.html",[7,0.445,15,0.011,32,0.007,33,0.007,296,2.591,297,1.764,448,6.54,575,4.31,586,3.006,784,4.659,928,5.126,932,5.126,1204,5.126,1590,3.6,1948,2.504,1949,3.747,1950,4.265,1951,5.836,1952,4.265,1953,5.836,1954,4.265,1955,5.836,1956,4.265,1957,4.265,1958,3.747,1959,7.154,1960,5.836,1961,7.154,1962,5.126,1963,7.154,1964,4.265,1965,4.265,1966,5.836,1967,5.836,1968,4.265,1969,5.836,1970,5.836,1971,5.836,1972,4.265,1973,5.836,1974,5.836,1975,5.836,1976,4.265,1977,5.836,1978,4.265,1979,7.736,1980,4.265,1981,7.154,1982,7.154,1983,7.154,1984,7.154,1985,4.265,1986,4.265,1987,4.265]],["title/miscellaneous/functions.html",[1948,2.083,1988,4.504]],["body/miscellaneous/functions.html",[7,0.683,15,0.009,32,0.009,33,0.009,95,3.605,981,5.997,1308,4.828,1309,5.655,1886,5.744,1948,3.838,1988,5.744,1989,6.539,1990,5.744]],["title/index.html",[7,0.37,1991,3.548,1992,3.548]],["body/index.html",[4,0.119,15,0.01,32,0.008,33,0.008,117,2.225,188,5.708,990,3.701,998,4.403,1613,4.001,1857,4.001,1993,5.012,1994,5.012,1995,6.499,1996,5.012,1997,5.012,1998,5.012,1999,5.012,2000,5.012,2001,5.012,2002,7.212,2003,5.012,2004,5.012,2005,5.012,2006,7.212,2007,8.246,2008,5.012,2009,5.012,2010,5.012,2011,8.101,2012,5.012,2013,5.012,2014,6.499,2015,5.012,2016,5.012,2017,5.012,2018,5.012,2019,6.499,2020,5.012,2021,5.012,2022,5.012,2023,6.499,2024,6.499,2025,5.012,2026,5.012,2027,5.012,2028,5.012,2029,5.012,2030,4.403,2031,5.012,2032,5.012,2033,5.012,2034,5.012,2035,5.012,2036,5.012,2037,5.012,2038,5.012,2039,4.403,2040,5.012,2041,5.012,2042,5.012,2043,5.012,2044,5.012,2045,5.012,2046,4.403]],["title/modules.html",[91,2.502]],["body/modules.html",[15,0.008,32,0.008,33,0.008,90,3.575,91,2.357,145,4.056,149,3.575,150,3.794,151,3.388,152,3.575,153,3.575,154,3.794,155,3.224,156,3.388,157,3.794,158,3.079,1008,4.385,2030,7.679,2047,8.743,2048,8.743,2049,8.779,2050,5.493,2051,5.493]],["title/overview.html",[2052,5.121]],["body/overview.html",[2,1.453,15,0.011,32,0.005,33,0.005,36,0.937,69,4.416,89,0.937,90,4.66,91,1.307,92,1.353,93,1.453,94,1.453,95,1.353,96,1.453,97,1.453,98,2.676,99,2.676,100,2.676,101,2.185,102,1.453,103,1.453,112,1.224,142,3.585,145,6.328,146,2.676,147,2.676,148,2.676,149,4.906,150,5.386,151,4.544,152,4.492,153,5.142,154,5.303,155,4.69,156,4.736,157,5.386,158,4.225,252,4.416,272,4.013,320,2.676,321,2.676,322,2.676,414,2.676,415,2.676,417,2.676,418,3.434,419,4.416,420,3.804,439,0.838,449,2.25,476,4.203,488,2.676,489,2.676,490,2.676,525,2.676,526,2.676,527,3.804,820,4.416,837,2.676,838,2.676,840,2.676,851,3.688,1015,1.788,1128,4.66,1162,2.676,1164,2.676,1165,2.676,1177,4.203,1420,2.676,1421,2.676,1422,2.676,1545,2.676,1546,2.676,1547,2.676,1633,3.585,1649,2.676,1650,2.676,1810,2.676,1811,2.676,1812,2.676,2052,2.676,2053,4.583,2054,3.047,2055,3.047,2056,3.047]],["title/properties.html",[8,1.41,1900,3.117]],["body/properties.html",[8,1.826,15,0.01,32,0.009,33,0.009,990,4.903,1942,5.832,2039,5.832,2046,5.832,2057,6.64,2058,6.64]],["title/miscellaneous/typealiases.html",[1948,2.083,2059,5.127]],["body/miscellaneous/typealiases.html",[7,0.663,14,0.786,15,0.01,32,0.009,33,0.009,637,5.065,1016,4.13,1018,5.196,1029,3.914,1031,3.914,1033,4.897,1803,5.065,1804,6.006,1805,6.609,1808,5.574,1948,3.725,1958,6.609,1962,5.574,2060,6.346]],["title/miscellaneous/variables.html",[1948,2.083,2061,4.504]],["body/miscellaneous/variables.html",[2,1.193,5,0.103,7,0.261,14,0.627,15,0.011,16,0.519,32,0.005,33,0.005,50,0.919,80,1.572,114,0.814,132,0.915,175,4.407,182,2.197,183,3.595,185,4.276,187,1.729,189,2.451,191,4.849,193,3.458,194,3.886,195,3.458,198,4.276,287,2.266,329,1.997,335,3.168,349,1.402,371,3.458,379,2.562,396,1.543,410,2.907,411,3.458,412,2.197,413,2.197,419,1.543,427,3.142,447,5.231,448,5.934,521,2.206,831,4.077,857,1.847,896,3.458,950,4.849,984,2.428,1308,1.847,1309,2.907,1311,2.197,1314,3.886,1318,3.142,1319,2.197,1321,2.197,1613,1.997,1792,3.458,1870,2.197,1871,3.458,1872,2.197,1873,4.849,1874,2.197,1875,2.197,1876,3.458,1877,2.197,1878,3.458,1879,2.197,1880,3.458,1881,2.197,1882,3.458,1883,3.458,1884,2.197,1893,2.197,1894,3.458,1895,3.458,1896,3.458,1897,2.197,1898,3.458,1948,1.468,1990,2.197,2061,2.197,2062,2.501,2063,2.501,2064,3.937,2065,3.937,2066,3.937,2067,4.868,2068,2.501,2069,2.501,2070,2.501,2071,3.937,2072,2.501,2073,2.501,2074,3.937,2075,2.501,2076,2.501,2077,3.937,2078,2.501,2079,2.501,2080,2.501,2081,3.937,2082,3.937,2083,3.937,2084,3.937,2085,3.937,2086,3.937,2087,3.937,2088,3.937,2089,3.937,2090,3.937,2091,3.937,2092,3.937,2093,3.937,2094,3.937,2095,3.937,2096,3.937,2097,3.937,2098,2.501,2099,2.501,2100,2.501,2101,2.501,2102,2.501,2103,2.501,2104,2.501,2105,5.521,2106,2.501,2107,2.501,2108,2.501,2109,2.501,2110,2.501,2111,2.501,2112,2.501,2113,2.501,2114,4.868,2115,2.501,2116,2.501,2117,2.501,2118,3.937,2119,3.937,2120,2.501,2121,2.501,2122,2.501,2123,2.501,2124,4.868,2125,2.501,2126,2.501,2127,2.501,2128,2.501,2129,2.501,2130,2.501,2131,3.937,2132,3.937,2133,2.501,2134,2.501,2135,2.501,2136,2.501,2137,2.501,2138,2.501,2139,2.501,2140,2.501,2141,2.501,2142,2.501,2143,2.501,2144,2.501,2145,2.501,2146,2.501,2147,2.501,2148,2.501,2149,2.501,2150,2.501,2151,2.501,2152,2.501,2153,2.501,2154,2.501,2155,2.501,2156,2.501,2157,2.501,2158,2.501,2159,2.501,2160,2.501,2161,2.501,2162,2.501,2163,2.501]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":857,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1942,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()abcdefghijklmnopqrstuvwxyz",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["02",{"_index":879,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["05",{"_index":880,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["1",{"_index":929,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["1.0.0",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":950,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["10.2.8",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1288,"title":{},"body":{"injectables/MarksService.html":{}}}],["1024",{"_index":1004,"title":{},"body":{"controllers/HealthController.html":{}}}],["110.44.123.230",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["12",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":2053,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15d",{"_index":363,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["16).tostring(16",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":2055,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["17.11.0",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":1141,"title":{},"body":{"controllers/MarksController.html":{}}}],["3.0.1",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2056,"title":{},"body":{"overview.html":{}}}],["300",{"_index":1003,"title":{},"body":{"controllers/HealthController.html":{}}}],["300mb",{"_index":999,"title":{},"body":{"controllers/HealthController.html":{}}}],["3306",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1143,"title":{},"body":{"controllers/MarksController.html":{}}}],["5",{"_index":896,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":882,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["60000)).toisostring().substring(0",{"_index":949,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["7",{"_index":449,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"overview.html":{}}}],["7.1.16",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2054,"title":{},"body":{"overview.html":{}}}],["__dirname",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_createtoken",{"_index":330,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["_createtoken(undefined",{"_index":332,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["absent",{"_index":932,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"miscellaneous/enumerations.html":{}}}],["absentcount",{"_index":907,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["absentees",{"_index":923,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["academicyear",{"_index":562,"title":{},"body":{"classes/CreateMarkDto.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{}}}],["academicyears",{"_index":1240,"title":{},"body":{"injectables/MarksService.html":{}}}],["acc",{"_index":960,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["acc[classname",{"_index":957,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["accesstoken",{"_index":366,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["active",{"_index":1981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":1695,"title":{},"body":{"injectables/TeacherService.html":{}}}],["addgroupby('student.class",{"_index":1496,"title":{},"body":{"injectables/StudentService.html":{}}}],["addorderby(\"mark.academicyear",{"_index":1253,"title":{},"body":{"injectables/MarksService.html":{}}}],["address",{"_index":1,"title":{"entities/Address.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"coverage.html":{}}}],["address.controller",{"_index":105,"title":{},"body":{"modules/AddressModule.html":{}}}],["address.dto",{"_index":74,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/UpdateAddressDto.html":{}}}],["address.dto.ts",{"_index":533,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["address.dto.ts:12",{"_index":538,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:15",{"_index":539,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:18",{"_index":537,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:6",{"_index":535,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.dto.ts:9",{"_index":536,"title":{},"body":{"classes/CreateAddressDto.html":{}}}],["address.service",{"_index":70,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{}}}],["address/address.module",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["addresscontroller",{"_index":35,"title":{"controllers/AddressController.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"coverage.html":{}}}],["addressdto",{"_index":52,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["addressmodule",{"_index":90,"title":{"modules/AddressModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/TeacherModule.html":{},"modules.html":{},"overview.html":{}}}],["addressrepository",{"_index":119,"title":{},"body":{"injectables/AddressService.html":{}}}],["addressservice",{"_index":69,"title":{"injectables/AddressService.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["addselect(\"user.password",{"_index":1850,"title":{},"body":{"injectables/UserService.html":{}}}],["addselect('student.class",{"_index":1494,"title":{},"body":{"injectables/StudentService.html":{}}}],["addselect('student.gender",{"_index":1493,"title":{},"body":{"injectables/StudentService.html":{}}}],["addselect('sum(marks.marksobtained",{"_index":1274,"title":{},"body":{"injectables/MarksService.html":{}}}],["addselect('sum(subject.fullmarks",{"_index":1276,"title":{},"body":{"injectables/MarksService.html":{}}}],["admin",{"_index":1979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aggregate",{"_index":832,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["aggregateattendance",{"_index":848,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["aggregateattendance(username",{"_index":854,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["aggregateattendancedata",{"_index":804,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{}}}],["aggregateattendancedata(@param('username",{"_index":827,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["aggregateattendancedata(username",{"_index":809,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["aggregateattendancedatamanually",{"_index":805,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["aggregated",{"_index":830,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["aggregation",{"_index":824,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["aliases",{"_index":2060,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":1006,"title":{},"body":{"controllers/HealthController.html":{}}}],["allowed",{"_index":1792,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":704,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{},"injectables/MarksService.html":{}}}],["amazing",{"_index":2031,"title":{},"body":{"index.html":{}}}],["andwhere(\"mark.academicyear",{"_index":1263,"title":{},"body":{"injectables/MarksService.html":{}}}],["andwhere(\"subject.id",{"_index":1262,"title":{},"body":{"injectables/MarksService.html":{}}}],["andwhere('subject.classid",{"_index":1586,"title":{},"body":{"injectables/SubjectService.html":{}}}],["api",{"_index":523,"title":{},"body":{"controllers/CoreController.html":{}}}],["apibody",{"_index":347,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/UserController.html":{}}}],["apiokresponse",{"_index":983,"title":{},"body":{"controllers/HealthController.html":{}}}],["apiproperty",{"_index":724,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["apitags",{"_index":71,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["apitags(\"authentication",{"_index":357,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["apitags('address",{"_index":76,"title":{},"body":{"controllers/AddressController.html":{}}}],["apitags('class",{"_index":482,"title":{},"body":{"controllers/ClassController.html":{}}}],["apitags('core",{"_index":522,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('health",{"_index":986,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('marks",{"_index":1132,"title":{},"body":{"controllers/MarksController.html":{}}}],["apitags('student",{"_index":1400,"title":{},"body":{"controllers/StudentController.html":{}}}],["apitags('subject",{"_index":1535,"title":{},"body":{"controllers/SubjectController.html":{}}}],["apitags('teacher",{"_index":1637,"title":{},"body":{"controllers/TeacherController.html":{}}}],["apitags('user",{"_index":1784,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":2009,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":143,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":138,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":2001,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":145,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":142,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["areequal",{"_index":406,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["argumentshost",{"_index":668,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["array(4",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array_agg(case",{"_index":1297,"title":{},"body":{"injectables/MarksService.html":{}}}],["array_agg(count",{"_index":1295,"title":{},"body":{"injectables/MarksService.html":{}}}],["array_agg(distinct",{"_index":1293,"title":{},"body":{"injectables/MarksService.html":{}}}],["asc",{"_index":916,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["assign",{"_index":1472,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["associate",{"_index":1573,"title":{},"body":{"injectables/SubjectService.html":{}}}],["associated",{"_index":1702,"title":{},"body":{"injectables/TeacherService.html":{}}}],["assuming",{"_index":612,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["async",{"_index":114,"title":{},"body":{"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attendance",{"_index":225,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/StudentController.html":{}}}],["attendance.controller",{"_index":325,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["attendance.dto",{"_index":254,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"classes/UpdateAttendanceDto.html":{}}}],["attendance.dto.ts",{"_index":542,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{},"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["attendance.dto.ts:12",{"_index":544,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["attendance.dto.ts:16",{"_index":546,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["attendance.dto.ts:20",{"_index":547,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["attendance.dto.ts:8",{"_index":549,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["attendance.entity.ts",{"_index":794,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["attendance.service",{"_index":253,"title":{},"body":{"controllers/AttendanceLogController.html":{},"modules/AttendanceModule.html":{}}}],["attendance/attendance.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["attendancebyclass",{"_index":953,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["attendancebydateandclass",{"_index":939,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["attendancebydateandclass.reduce((acc",{"_index":954,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["attendanceenum",{"_index":784,"title":{},"body":{"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{},"miscellaneous/enumerations.html":{}}}],["attendanceenum.absent",{"_index":801,"title":{},"body":{"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{}}}],["attendanceenum.present",{"_index":897,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["attendancelog",{"_index":209,"title":{"entities/AttendanceLog.html":{}},"body":{"entities/AttendanceLog.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"coverage.html":{}}}],["attendancelogcontroller",{"_index":223,"title":{"controllers/AttendanceLogController.html":{}},"body":{"controllers/AttendanceLogController.html":{},"modules/AttendanceModule.html":{},"coverage.html":{}}}],["attendancelogrepository",{"_index":274,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["attendancelogs",{"_index":884,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["attendancelogservice",{"_index":252,"title":{"injectables/AttendanceLogService.html":{}},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"coverage.html":{},"overview.html":{}}}],["attendancemodule",{"_index":149,"title":{"modules/AttendanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/FinalAttendanceModule.html":{},"modules.html":{},"overview.html":{}}}],["attendees",{"_index":922,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["auth",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["authenticate",{"_index":1066,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authenticate(req",{"_index":1069,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["authentication",{"_index":1049,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["authentication/authentication.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/services/bcrypt.service",{"_index":697,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["authenticationcontroller",{"_index":328,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":150,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authguard",{"_index":344,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/TokenGuard.html":{}}}],["authguard('jwt",{"_index":1726,"title":{},"body":{"injectables/TokenGuard.html":{}}}],["author",{"_index":2039,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":2051,"title":{},"body":{"modules.html":{}}}],["await",{"_index":132,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":969,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":2032,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":761,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["based",{"_index":308,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{}}}],["basic",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["bcrypt",{"_index":346,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(currentpassword",{"_index":413,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(password",{"_index":457,"title":{},"body":{"classes/BcryptService.html":{}}}],["bcrypt.hash(password",{"_index":458,"title":{},"body":{"classes/BcryptService.html":{}}}],["bcryptservice",{"_index":418,"title":{"classes/BcryptService.html":{}},"body":{"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["bcryptservice,userservice",{"_index":1819,"title":{},"body":{"modules/UserModule.html":{}}}],["bcryptservice.salt_rounds",{"_index":459,"title":{},"body":{"classes/BcryptService.html":{}}}],["bearer",{"_index":385,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["bignumberstrings",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":64,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["body.role",{"_index":1789,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2049,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2047,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1996,"title":{},"body":{"index.html":{}}}],["bus",{"_index":1843,"title":{},"body":{"injectables/UserService.html":{}}}],["byclass",{"_index":1413,"title":{},"body":{"controllers/StudentController.html":{}}}],["calculate",{"_index":888,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["callback",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(new",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":757,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["cascade",{"_index":1356,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["catch",{"_index":395,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/FinalAttendanceController.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"classes/NestJwtStrategy.html":{}}}],["catch(createuserexception",{"_index":675,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{}}}],["catch(duplicateuserexception",{"_index":749,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{}}}],["catch(exception",{"_index":667,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["catcherror",{"_index":763,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1722,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["changepassword",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(id",{"_index":1825,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordforuser",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordforuser(id",{"_index":1827,"title":{},"body":{"injectables/UserService.html":{}}}],["chars",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":134,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ClassService.html":{},"controllers/HealthController.html":{},"injectables/MarksService.html":{},"injectables/SubjectService.html":{}}}],["city",{"_index":9,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/TeacherService.html":{}}}],["class",{"_index":30,"title":{"classes/BcryptService.html":{},"entities/Class.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"classes/NestJwtStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class.classname",{"_index":1234,"title":{},"body":{"injectables/MarksService.html":{}}}],["class.controller",{"_index":493,"title":{},"body":{"modules/ClassModule.html":{}}}],["class.dto",{"_index":478,"title":{},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/UpdateClassDto.html":{}}}],["class.dto.ts",{"_index":554,"title":{},"body":{"classes/CreateClassDto.html":{},"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["class.dto.ts:5",{"_index":555,"title":{},"body":{"classes/CreateClassDto.html":{}}}],["class.service",{"_index":477,"title":{},"body":{"controllers/ClassController.html":{},"modules/ClassModule.html":{}}}],["class/class.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["classcontroller",{"_index":467,"title":{"controllers/ClassController.html":{}},"body":{"controllers/ClassController.html":{},"modules/ClassModule.html":{},"coverage.html":{}}}],["classcounts",{"_index":1482,"title":{},"body":{"injectables/StudentService.html":{}}}],["classentity",{"_index":942,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{}}}],["classentity.classname",{"_index":943,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["classes",{"_index":439,"title":{},"body":{"classes/BcryptService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"classes/NestJwtStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{},"overview.html":{}}}],["classid",{"_index":563,"title":{},"body":{"classes/CreateMarkDto.html":{},"classes/CreateTeacherDto.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["classmodule",{"_index":151,"title":{"modules/ClassModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClassModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules.html":{},"overview.html":{}}}],["classname",{"_index":462,"title":{},"body":{"entities/Class.html":{},"injectables/ClassService.html":{},"classes/CreateClassDto.html":{},"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{}}}],["classrepository",{"_index":499,"title":{},"body":{"injectables/ClassService.html":{}}}],["classservice",{"_index":476,"title":{"injectables/ClassService.html":{}},"body":{"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_addressmodule",{"_index":98,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_exports",{"_index":99,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_providers",{"_index":100,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_attendancemodule",{"_index":320,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_attendancemodule_exports",{"_index":322,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_attendancemodule_imports",{"_index":323,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["cluster_attendancemodule_providers",{"_index":321,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":414,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":415,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_imports",{"_index":416,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":417,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_classmodule",{"_index":488,"title":{},"body":{"modules/ClassModule.html":{},"overview.html":{}}}],["cluster_classmodule_exports",{"_index":489,"title":{},"body":{"modules/ClassModule.html":{},"overview.html":{}}}],["cluster_classmodule_providers",{"_index":490,"title":{},"body":{"modules/ClassModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":526,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_finalattendancemodule",{"_index":837,"title":{},"body":{"modules/FinalAttendanceModule.html":{},"overview.html":{}}}],["cluster_finalattendancemodule_exports",{"_index":840,"title":{},"body":{"modules/FinalAttendanceModule.html":{},"overview.html":{}}}],["cluster_finalattendancemodule_imports",{"_index":839,"title":{},"body":{"modules/FinalAttendanceModule.html":{}}}],["cluster_finalattendancemodule_providers",{"_index":838,"title":{},"body":{"modules/FinalAttendanceModule.html":{},"overview.html":{}}}],["cluster_marksmodule",{"_index":1162,"title":{},"body":{"modules/MarksModule.html":{},"overview.html":{}}}],["cluster_marksmodule_exports",{"_index":1164,"title":{},"body":{"modules/MarksModule.html":{},"overview.html":{}}}],["cluster_marksmodule_imports",{"_index":1163,"title":{},"body":{"modules/MarksModule.html":{}}}],["cluster_marksmodule_providers",{"_index":1165,"title":{},"body":{"modules/MarksModule.html":{},"overview.html":{}}}],["cluster_studentmodule",{"_index":1420,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_exports",{"_index":1421,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_imports",{"_index":1423,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_providers",{"_index":1422,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_subjectmodule",{"_index":1545,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_subjectmodule_exports",{"_index":1546,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_subjectmodule_imports",{"_index":1548,"title":{},"body":{"modules/SubjectModule.html":{}}}],["cluster_subjectmodule_providers",{"_index":1547,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":1649,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":1651,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":1650,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1810,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1811,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1812,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["colorize",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":18,"title":{},"body":{"entities/Address.html":{},"entities/AttendanceLog.html":{},"entities/Class.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"entities/Subject.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["column({nullable",{"_index":788,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["column({type",{"_index":216,"title":{},"body":{"entities/AttendanceLog.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Subject.html":{},"entities/User.html":{}}}],["column({unique",{"_index":1762,"title":{},"body":{"entities/User.html":{}}}],["combined.log",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":694,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/UserService.html":{}}}],["command.data",{"_index":709,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["command.data.phone",{"_index":705,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["command.data.username",{"_index":702,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["commandbus",{"_index":1779,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":695,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["commandhandler(createusercommand",{"_index":701,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["commandhandler(fetchuserbyidcommand",{"_index":779,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["commands/handlers/create",{"_index":1817,"title":{},"body":{"modules/UserModule.html":{}}}],["comparepasswords",{"_index":410,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(user.password",{"_index":407,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["config/database.config",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionsource",{"_index":1878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log",{"_index":1456,"title":{},"body":{"injectables/StudentService.html":{}}}],["console.log('classname',record",{"_index":899,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["console.log('creating",{"_index":1639,"title":{},"body":{"controllers/TeacherController.html":{}}}],["console.log('existingmark',existingmark",{"_index":1211,"title":{},"body":{"injectables/MarksService.html":{}}}],["console.log('inside",{"_index":1671,"title":{},"body":{"injectables/TeacherService.html":{}}}],["console.log('marks',marks",{"_index":1237,"title":{},"body":{"injectables/MarksService.html":{}}}],["console.log('req.user",{"_index":386,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["console.log('savedteacher',savedteacher.subjects",{"_index":1694,"title":{},"body":{"injectables/TeacherService.html":{}}}],["console.log(classcounts.map(count",{"_index":1489,"title":{},"body":{"injectables/StudentService.html":{}}}],["console.log(createstudentdto",{"_index":1404,"title":{},"body":{"controllers/StudentController.html":{}}}],["console.log(createteacherdto",{"_index":1643,"title":{},"body":{"controllers/TeacherController.html":{}}}],["console.log(req.user",{"_index":373,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["console.log(user",{"_index":711,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["const",{"_index":287,"title":{},"body":{"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"injectables/ClassService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/FetchUserByIdCommand.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["constructor(addressrepository",{"_index":116,"title":{},"body":{"injectables/AddressService.html":{}}}],["constructor(attendancelogrepository",{"_index":271,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["constructor(classrepository",{"_index":497,"title":{},"body":{"injectables/ClassService.html":{}}}],["constructor(data",{"_index":644,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(finalattendancerepository",{"_index":850,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["constructor(jwtservice",{"_index":1040,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["constructor(marksrepository",{"_index":1176,"title":{},"body":{"injectables/MarksService.html":{}}}],["constructor(message",{"_index":657,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{}}}],["constructor(props",{"_index":1360,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["constructor(readonly",{"_index":773,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["constructor(studentrepository",{"_index":1433,"title":{},"body":{"injectables/StudentService.html":{}}}],["constructor(subjectrepository",{"_index":1554,"title":{},"body":{"injectables/SubjectService.html":{}}}],["constructor(teacherrepository",{"_index":1658,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(tokenstorage",{"_index":1067,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userid",{"_index":770,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["constructor(userrepository",{"_index":690,"title":{},"body":{"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/UserService.html":{}}}],["contacttypeenum",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["context",{"_index":759,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["context.gethandler",{"_index":1327,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.gethandler()[ignoredpropertyname",{"_index":1329,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp().getrequest().reqid",{"_index":1336,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1334,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["controller",{"_index":34,"title":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AttendanceLogController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AttendanceLogController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('address",{"_index":75,"title":{},"body":{"controllers/AddressController.html":{}}}],["controller('attendance",{"_index":255,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["controller('class",{"_index":481,"title":{},"body":{"controllers/ClassController.html":{}}}],["controller('final",{"_index":822,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["controller('health",{"_index":987,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('marks",{"_index":1131,"title":{},"body":{"controllers/MarksController.html":{}}}],["controller('student",{"_index":1399,"title":{},"body":{"controllers/StudentController.html":{}}}],["controller('subject",{"_index":1534,"title":{},"body":{"controllers/SubjectController.html":{}}}],["controller('teacher",{"_index":1636,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('user",{"_index":1783,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":36,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AttendanceLogController.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["core/core.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["core/http/interceptors/response",{"_index":982,"title":{},"body":{"controllers/HealthController.html":{}}}],["core/http/request/request",{"_index":351,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["core/http/response/types",{"_index":674,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["corecontroller",{"_index":516,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["coremodule",{"_index":152,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1452,"title":{},"body":{"injectables/StudentService.html":{}}}],["corrected",{"_index":1619,"title":{},"body":{"entities/Teacher.html":{}}}],["count",{"_index":921,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["count(case",{"_index":926,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["count.count",{"_index":1490,"title":{},"body":{"injectables/StudentService.html":{}}}],["country",{"_index":10,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/TeacherService.html":{}}}],["countstudentsbyclass",{"_index":1366,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["counttotalstudents",{"_index":1367,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["coverage",{"_index":1857,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrsmodule",{"_index":432,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":40,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":79,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["create(addressdto",{"_index":45,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{}}}],["create(createattendancelogdto",{"_index":230,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["create(createclassdto",{"_index":469,"title":{},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{}}}],["create(createmarkdto",{"_index":1100,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["create(createstudentdto",{"_index":1376,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["create(createsubjectdto",{"_index":1518,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["create(createteacherdto",{"_index":1622,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(createuserdto",{"_index":1829,"title":{},"body":{"injectables/UserService.html":{}}}],["createaddressdto",{"_index":46,"title":{"classes/CreateAddressDto.html":{}},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"classes/CreateAddressDto.html":{},"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["createall",{"_index":227,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["createall(@body",{"_index":257,"title":{},"body":{"controllers/AttendanceLogController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{}}}],["createall(createattendancelogdtoarray",{"_index":233,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["createall(createmarkdtos",{"_index":1102,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["createall(createstudentdto",{"_index":1379,"title":{},"body":{"controllers/StudentController.html":{}}}],["createall(createstudentdtoarray",{"_index":1439,"title":{},"body":{"injectables/StudentService.html":{}}}],["createall(createsubjectdto",{"_index":1520,"title":{},"body":{"controllers/SubjectController.html":{}}}],["createall(createsubjectdtos",{"_index":1558,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createall(createteacherdto",{"_index":1625,"title":{},"body":{"controllers/TeacherController.html":{}}}],["createall(createteacherdtoarray",{"_index":1662,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createattendancelogdto",{"_index":231,"title":{"classes/CreateAttendanceLogDto.html":{}},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["createattendancelogdtoarray",{"_index":236,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["createclassdto",{"_index":470,"title":{"classes/CreateClassDto.html":{}},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateClassDto.html":{},"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["created",{"_index":1142,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["createdat",{"_index":1338,"title":{},"body":{"entities/Student.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":1343,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["createdattendancelog",{"_index":293,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["createdattendancelogs",{"_index":290,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["createdattendancelogs.push(createdattendancelog",{"_index":294,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["createdmarks",{"_index":1138,"title":{},"body":{"controllers/MarksController.html":{}}}],["createdstudents",{"_index":1474,"title":{},"body":{"injectables/StudentService.html":{}}}],["createdstudents.push(student",{"_index":1475,"title":{},"body":{"injectables/StudentService.html":{}}}],["createdteachers",{"_index":1704,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createdteachers.push(teacher",{"_index":1706,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createfinalattendancedto",{"_index":556,"title":{"classes/CreateFinalAttendanceDto.html":{}},"body":{"classes/CreateFinalAttendanceDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"coverage.html":{}}}],["createmarkdto",{"_index":559,"title":{"classes/CreateMarkDto.html":{}},"body":{"classes/CreateMarkDto.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["createmarkdtos",{"_index":1105,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["createquerybuilder(\"user",{"_index":1849,"title":{},"body":{"injectables/UserService.html":{}}}],["createquerybuilder('attendancelog",{"_index":311,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["createquerybuilder('finalattendance",{"_index":912,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["createquerybuilder('marks",{"_index":1291,"title":{},"body":{"injectables/MarksService.html":{}}}],["createquerybuilder('student",{"_index":1484,"title":{},"body":{"injectables/StudentService.html":{}}}],["createquerybuilder('subject",{"_index":1582,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createquerybuilder('user",{"_index":740,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["createstudentdto",{"_index":577,"title":{"classes/CreateStudentDto.html":{}},"body":{"classes/CreateStudentDto.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["createstudentdto.address",{"_index":1470,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.dateofbirth",{"_index":1466,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.firstname",{"_index":1463,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.gender",{"_index":1465,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.guardianname",{"_index":1468,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.guardianphone",{"_index":1469,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.lastname",{"_index":1464,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.password",{"_index":1459,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.rollno",{"_index":1467,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.username",{"_index":1458,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdtoarray",{"_index":1441,"title":{},"body":{"injectables/StudentService.html":{}}}],["createsubjectdto",{"_index":602,"title":{"classes/CreateSubjectDto.html":{}},"body":{"classes/CreateSubjectDto.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["createsubjectdto.fullmarks",{"_index":1574,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createsubjectdto.passmarks",{"_index":1575,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createsubjectdto.subjectname",{"_index":1572,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createsubjectdtos",{"_index":1560,"title":{},"body":{"injectables/SubjectService.html":{}}}],["createteacherdto",{"_index":613,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["createteacherdto.address",{"_index":1677,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.city",{"_index":1678,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.country",{"_index":1681,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.dateofbirth",{"_index":1686,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.email",{"_index":1691,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.experience",{"_index":1690,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.firstname",{"_index":1683,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.gender",{"_index":1685,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.joiningdate",{"_index":1688,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.lastname",{"_index":1684,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.mobile",{"_index":1687,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.password",{"_index":1674,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.qualification",{"_index":1689,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.state",{"_index":1679,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.subjects",{"_index":1697,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.username",{"_index":1673,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.zipcode",{"_index":1680,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdtoarray",{"_index":1664,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createuser",{"_index":1767,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":1788,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(body",{"_index":1768,"title":{},"body":{"controllers/UserController.html":{}}}],["createusercommand",{"_index":641,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusercommand(body",{"_index":1795,"title":{},"body":{"controllers/UserController.html":{}}}],["createusercommand(createuserdto",{"_index":1846,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":647,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":1840,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.role",{"_index":1841,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.username",{"_index":1839,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserexception",{"_index":653,"title":{"classes/CreateUserException.html":{}},"body":{"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"coverage.html":{}}}],["createuserexception(`you",{"_index":1791,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserexceptionfilter",{"_index":660,"title":{"classes/CreateUserExceptionFilter.html":{}},"body":{"classes/CreateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createuserhandler",{"_index":685,"title":{"classes/CreateUserHandler.html":{}},"body":{"classes/CreateUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserrequest",{"_index":712,"title":{"classes/CreateUserRequest.html":{}},"body":{"classes/CreateUserRequest.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1845,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials",{"_index":392,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["cron",{"_index":864,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["cron('0",{"_index":856,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["csv",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":676,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":678,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["curr",{"_index":955,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["curr.classname",{"_index":956,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["current",{"_index":883,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["currentpage",{"_index":1024,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["currentpassword",{"_index":412,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":361,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserCommand.html":{},"controllers/FinalAttendanceController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["data.hasownproperty('items",{"_index":1333,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["data.oldpassword",{"_index":1851,"title":{},"body":{"injectables/UserService.html":{}}}],["data:createstudentdto",{"_index":1499,"title":{},"body":{"injectables/StudentService.html":{}}}],["database",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database_url",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasestrategy",{"_index":420,"title":{"injectables/DatabaseStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["databasestrategy,jwtservice",{"_index":438,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["datasource",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":211,"title":{},"body":{"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["date('2024",{"_index":878,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["date(date.gettime",{"_index":947,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["date.gettimezoneoffset",{"_index":948,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["dateofbirth",{"_index":580,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["daterecord",{"_index":919,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["daterecord.date",{"_index":920,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["dates",{"_index":910,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["day",{"_index":872,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["days",{"_index":1047,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["db_config",{"_index":1882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_vars",{"_index":1883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":94,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"controllers/AppController.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"controllers/AuthenticationController.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateUserRequest.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["decorators/response.decorator",{"_index":1315,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["default",{"_index":447,"title":{},"body":{"classes/BcryptService.html":{},"entities/FinalAttendance.html":{},"injectables/JwtStorage.html":{},"entities/Marks.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":436,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":67,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":59,"title":{},"body":{"controllers/AddressController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["delete(':username/:date",{"_index":249,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":314,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["descending",{"_index":964,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["description",{"_index":990,"title":{},"body":{"controllers/HealthController.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":1323,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["descriptor.value[ignoredpropertyname",{"_index":1325,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["dest",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["detail",{"_index":683,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["detail.response",{"_index":354,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["detail.response.ts",{"_index":1804,"title":{},"body":{"classes/UserDetailResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail.response.ts:5",{"_index":1806,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["details",{"_index":512,"title":{},"body":{"injectables/ClassService.html":{}}}],["development",{"_index":2010,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":978,"title":{},"body":{"controllers/HealthController.html":{}}}],["document",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":291,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["dto/create",{"_index":73,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["dto/update",{"_index":480,"title":{},"body":{"controllers/ClassController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["duplicate",{"_index":750,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{}}}],["duplicateuserexception",{"_index":698,"title":{"classes/DuplicateUserException.html":{}},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["duplicateuserexception('phone",{"_index":707,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["duplicateuserexception('username",{"_index":703,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["duplicateuserexceptionfilter",{"_index":747,"title":{"classes/DuplicateUserExceptionFilter.html":{}},"body":{"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["e2e",{"_index":2020,"title":{},"body":{"index.html":{}}}],["each",{"_index":938,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["eager",{"_index":1357,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["editfilename",{"_index":1894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":1997,"title":{},"body":{"index.html":{}}}],["email",{"_index":616,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["end",{"_index":930,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Address.html":{},"modules/AppModule.html":{},"entities/AttendanceLog.html":{},"entities/Class.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"entities/Subject.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/address.entity",{"_index":106,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{}}}],["entities/attendance.entity",{"_index":284,"title":{},"body":{"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{}}}],["entities/class.entity",{"_index":492,"title":{},"body":{"modules/ClassModule.html":{},"injectables/ClassService.html":{}}}],["entities/final_attendance.entity",{"_index":845,"title":{},"body":{"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{}}}],["entities/mark.entity",{"_index":1169,"title":{},"body":{"modules/MarksModule.html":{},"injectables/MarksService.html":{}}}],["entities/student.entity",{"_index":1426,"title":{},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["entities/subject.entity",{"_index":1551,"title":{},"body":{"modules/SubjectModule.html":{},"injectables/SubjectService.html":{}}}],["entities/teacher.entity",{"_index":1654,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["entities/user.entity",{"_index":696,"title":{},"body":{"classes/CreateUserHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":0,"title":{"entities/Address.html":{},"entities/AttendanceLog.html":{},"entities/Class.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"entities/Subject.html":{},"entities/Teacher.html":{},"entities/User.html":{}},"body":{"entities/Address.html":{},"entities/AttendanceLog.html":{},"injectables/AttendanceLogService.html":{},"entities/Class.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{ts,js",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["entity{.ts,.js",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrytime",{"_index":212,"title":{},"body":{"entities/AttendanceLog.html":{},"classes/CreateAttendanceLogDto.html":{}}}],["enum",{"_index":725,"title":{},"body":{"classes/CreateUserRequest.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/User.html":{}}}],["enumerations",{"_index":1949,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1723,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":396,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["error('class",{"_index":1569,"title":{},"body":{"injectables/SubjectService.html":{}}}],["error('invalid",{"_index":1061,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["error('only",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('record",{"_index":1260,"title":{},"body":{"injectables/MarksService.html":{}}}],["error('student",{"_index":1199,"title":{},"body":{"injectables/MarksService.html":{}}}],["error('subject",{"_index":1201,"title":{},"body":{"injectables/MarksService.html":{}}}],["error(`class",{"_index":1578,"title":{},"body":{"injectables/SubjectService.html":{}}}],["error(`student",{"_index":1215,"title":{},"body":{"injectables/MarksService.html":{}}}],["error(`subject",{"_index":1216,"title":{},"body":{"injectables/MarksService.html":{}}}],["error.message",{"_index":1137,"title":{},"body":{"controllers/MarksController.html":{}}}],["example",{"_index":2006,"title":{},"body":{"index.html":{}}}],["exception",{"_index":670,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{}}}],["exception.message",{"_index":684,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exceptionfilter",{"_index":666,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exceptioninterceptor",{"_index":751,"title":{"injectables/ExceptionInterceptor.html":{}},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["exceptions/create",{"_index":672,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{}}}],["exceptions/duplicate",{"_index":699,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exclude",{"_index":1610,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["exclude()@column({nullable",{"_index":1757,"title":{},"body":{"entities/User.html":{}}}],["exclude()@createdatecolumn",{"_index":1754,"title":{},"body":{"entities/User.html":{}}}],["exclude()@updatedatecolumn",{"_index":1760,"title":{},"body":{"entities/User.html":{}}}],["execute",{"_index":689,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["execute(command",{"_index":692,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["executioncontext",{"_index":755,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["exist",{"_index":513,"title":{},"body":{"injectables/ClassService.html":{}}}],["existing",{"_index":1259,"title":{},"body":{"injectables/MarksService.html":{}}}],["existingmark",{"_index":1208,"title":{},"body":{"injectables/MarksService.html":{}}}],["existingmark.marksobtained",{"_index":1217,"title":{},"body":{"injectables/MarksService.html":{}}}],["existingmark.result",{"_index":1218,"title":{},"body":{"injectables/MarksService.html":{}}}],["exists",{"_index":135,"title":{},"body":{"injectables/AddressService.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{},"injectables/MarksService.html":{},"injectables/SubjectService.html":{}}}],["exittime",{"_index":213,"title":{},"body":{"entities/AttendanceLog.html":{},"classes/CreateAttendanceLogDto.html":{}}}],["experience",{"_index":617,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["expiresin",{"_index":362,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["export",{"_index":29,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"dependencies.html":{}}}],["expressrequest",{"_index":1307,"title":{},"body":{"interfaces/Req.html":{}}}],["extends",{"_index":656,"title":{},"body":{"classes/CreateUserException.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"injectables/TokenGuard.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{}}}],["extname(file.originalname",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extra",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":1071,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(req",{"_index":1073,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["fail",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["failed",{"_index":398,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{}}}],["false",{"_index":831,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["female",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":777,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["fetchuserbyidcommand",{"_index":767,"title":{"classes/FetchUserByIdCommand.html":{}},"body":{"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["fetchuserbyidhandler",{"_index":774,"title":{"classes/FetchUserByIdHandler.html":{}},"body":{"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.originalname.match",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.match(/\\.(svg|svg|jpg|jpeg|png|jpg|jpeg|png|gif",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileextname",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filename",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fill(null",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1780,"title":{},"body":{"controllers/UserController.html":{}}}],["filter.ts",{"_index":664,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["filter.ts:8",{"_index":669,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["filters/create",{"_index":662,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["filters/duplicate",{"_index":748,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["final",{"_index":793,"title":{},"body":{"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{}}}],["final_attendance.controller",{"_index":842,"title":{},"body":{"modules/FinalAttendanceModule.html":{}}}],["final_attendance.dto",{"_index":1740,"title":{},"body":{"classes/UpdateFinalAttendanceDto.html":{}}}],["final_attendance.dto.ts",{"_index":558,"title":{},"body":{"classes/CreateFinalAttendanceDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"coverage.html":{}}}],["final_attendance.service",{"_index":821,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{}}}],["final_attendance/final_attendance.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["finalattendance",{"_index":780,"title":{"entities/FinalAttendance.html":{}},"body":{"entities/FinalAttendance.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["finalattendance.attendance",{"_index":927,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["finalattendance.date",{"_index":914,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["finalattendancecontroller",{"_index":802,"title":{"controllers/FinalAttendanceController.html":{}},"body":{"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"coverage.html":{}}}],["finalattendancemodule",{"_index":153,"title":{"modules/FinalAttendanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["finalattendancerepository",{"_index":853,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["finalattendanceservice",{"_index":820,"title":{"injectables/FinalAttendanceService.html":{}},"body":{"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":892,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["findall",{"_index":41,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyclassid",{"_index":1368,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["findbyclassid(@param('classid",{"_index":1409,"title":{},"body":{"controllers/StudentController.html":{},"controllers/SubjectController.html":{}}}],["findbyclassid(classid",{"_index":1383,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["findbydate",{"_index":228,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["findbydate(@param('date",{"_index":260,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["findbydate(date",{"_index":238,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["findbysubjectnameandclassid",{"_index":1517,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["findbysubjectnameandclassid(subjectname",{"_index":1525,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["findbyusername",{"_index":229,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["findbyusername(@param('username",{"_index":264,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["findbyusername(username",{"_index":241,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["findexistingmark",{"_index":1172,"title":{},"body":{"injectables/MarksService.html":{}}}],["findexistingmark(studentid",{"_index":1183,"title":{},"body":{"injectables/MarksService.html":{}}}],["findmarksbyclassid",{"_index":1173,"title":{},"body":{"injectables/MarksService.html":{}}}],["findmarksbyclassid(classid",{"_index":1186,"title":{},"body":{"injectables/MarksService.html":{}}}],["findmarksbystudentid",{"_index":1095,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["findmarksbystudentid(@param('studentid",{"_index":1145,"title":{},"body":{"controllers/MarksController.html":{}}}],["findmarksbystudentid(studentid",{"_index":1107,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["findone",{"_index":42,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":83,"title":{},"body":{"controllers/AddressController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["findone(@param('studentid",{"_index":262,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["findone(id",{"_index":55,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(studentid",{"_index":244,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["findone(username",{"_index":317,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["findonebyclassname",{"_index":496,"title":{},"body":{"injectables/ClassService.html":{}}}],["findonebyclassname(classname",{"_index":503,"title":{},"body":{"injectables/ClassService.html":{}}}],["findonebyclassname(classname:string",{"_index":511,"title":{},"body":{"injectables/ClassService.html":{}}}],["findonebyusername",{"_index":1369,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findonebyusername(@param('username",{"_index":1415,"title":{},"body":{"controllers/StudentController.html":{},"controllers/UserController.html":{}}}],["findonebyusername(username",{"_index":1387,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findunregisteredstudents",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":581,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["firstname,lastname,classname",{"_index":1242,"title":{},"body":{"injectables/MarksService.html":{}}}],["firstpageurl",{"_index":1025,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["format",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.colorize",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.combine",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.json",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.timestamp",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":301,"title":{},"body":{"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{}}}],["framework",{"_index":1995,"title":{},"body":{"index.html":{}}}],["fullmarks",{"_index":605,"title":{},"body":{"classes/CreateSubjectDto.html":{},"injectables/MarksService.html":{},"entities/Subject.html":{},"injectables/SubjectService.html":{}}}],["function",{"_index":1320,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["functions",{"_index":1988,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":582,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["genderenum",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generatetoken",{"_index":1038,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenStorage.html":{}}}],["generatetoken(user",{"_index":1042,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["get('/health",{"_index":519,"title":{},"body":{"controllers/CoreController.html":{}}}],["get(':id",{"_index":56,"title":{},"body":{"controllers/AddressController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["get('aggregate",{"_index":812,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["get('attendancebydateandclass",{"_index":814,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["get('byclass/:classid",{"_index":1384,"title":{},"body":{"controllers/StudentController.html":{}}}],["get('bydate/:date",{"_index":239,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["get('byusername/:username",{"_index":242,"title":{},"body":{"controllers/AttendanceLogController.html":{},"controllers/StudentController.html":{},"controllers/UserController.html":{}}}],["get('class/:classid",{"_index":1111,"title":{},"body":{"controllers/MarksController.html":{}}}],["get('countbyclass",{"_index":1372,"title":{},"body":{"controllers/StudentController.html":{}}}],["get('findbyclassid/:classid",{"_index":1523,"title":{},"body":{"controllers/SubjectController.html":{}}}],["get('findbysubjectnameandclassid",{"_index":1526,"title":{},"body":{"controllers/SubjectController.html":{}}}],["get('gender",{"_index":1389,"title":{},"body":{"controllers/StudentController.html":{}}}],["get('pass",{"_index":1113,"title":{},"body":{"controllers/MarksController.html":{}}}],["get('percentage/:studentid",{"_index":1117,"title":{},"body":{"controllers/MarksController.html":{}}}],["get('student/:studentid",{"_index":245,"title":{},"body":{"controllers/AttendanceLogController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{}}}],["get('top",{"_index":818,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"controllers/StudentController.html":{}}}],["get('total",{"_index":1391,"title":{},"body":{"controllers/StudentController.html":{}}}],["get('totalstudents",{"_index":1374,"title":{},"body":{"controllers/StudentController.html":{}}}],["get()@apiokresponse({description",{"_index":968,"title":{},"body":{"controllers/HealthController.html":{}}}],["getattendancebydateandclass",{"_index":806,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["getattendancelogbystudentid",{"_index":270,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["getattendancelogbystudentid(studentid",{"_index":280,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["getfinalattendancebystudentid",{"_index":807,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{}}}],["getfinalattendancebystudentid(@param('studentid",{"_index":835,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["getfinalattendancebystudentid(studentid",{"_index":816,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{}}}],["getgendercountbyclass",{"_index":1370,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["gethello",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":315,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{}}}],["getmarksbyclassid",{"_index":1096,"title":{},"body":{"controllers/MarksController.html":{}}}],["getmarksbyclassid(@param('classid",{"_index":1152,"title":{},"body":{"controllers/MarksController.html":{}}}],["getmarksbyclassid(classid",{"_index":1110,"title":{},"body":{"controllers/MarksController.html":{}}}],["getone",{"_index":743,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["getpasspercentagebysubject",{"_index":1097,"title":{},"body":{"controllers/MarksController.html":{}}}],["getpercentagebystudentid",{"_index":1098,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["getpercentagebystudentid(@param('studentid",{"_index":1157,"title":{},"body":{"controllers/MarksController.html":{}}}],["getpercentagebystudentid(studentid",{"_index":1116,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["getrawmany",{"_index":917,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{}}}],["getrawone",{"_index":937,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["getting",{"_index":1991,"title":{"index.html":{}},"body":{}}],["gettopattendeesbyclass",{"_index":808,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/StudentController.html":{}}}],["gettotalattendancebyclassanddate",{"_index":849,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["gettotalgendercount",{"_index":1371,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["globallogger",{"_index":1876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["good",{"_index":524,"title":{},"body":{"controllers/CoreController.html":{}}}],["graph",{"_index":2050,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1203,"title":{},"body":{"injectables/MarksService.html":{}}}],["group",{"_index":1238,"title":{},"body":{"injectables/MarksService.html":{}}}],["groupby('classentity.classname",{"_index":944,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["groupby('finalattendance.date",{"_index":935,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["groupby('marks.academicyear",{"_index":1279,"title":{},"body":{"injectables/MarksService.html":{}}}],["groupby('marks.subjectid",{"_index":1302,"title":{},"body":{"injectables/MarksService.html":{}}}],["groupby('student.classid",{"_index":1486,"title":{},"body":{"injectables/StudentService.html":{}}}],["groupby('student.gender",{"_index":1495,"title":{},"body":{"injectables/StudentService.html":{}}}],["groupedresults",{"_index":909,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["groupedresults[classname",{"_index":900,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["groupedresults[classname].push",{"_index":901,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["grow",{"_index":2027,"title":{},"body":{"index.html":{}}}],["guardianname",{"_index":583,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["guardianphone",{"_index":584,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["handle",{"_index":300,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/ExceptionInterceptor.html":{}}}],["hapi/joi",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["hashpassword",{"_index":443,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashpassword(password",{"_index":451,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashuserpassword",{"_index":444,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashuserpassword(user",{"_index":453,"title":{},"body":{"classes/BcryptService.html":{}}}],["health",{"_index":518,"title":{},"body":{"controllers/CoreController.html":{},"controllers/HealthController.html":{}}}],["health.controller",{"_index":1013,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":975,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":973,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":966,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":1008,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["heap",{"_index":1002,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":207,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":2036,"title":{},"body":{"index.html":{}}}],["high",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":677,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["hours",{"_index":890,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["http",{"_index":988,"title":{},"body":{"controllers/HealthController.html":{}}}],["http/controller.ts/core.controllers",{"_index":531,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/controllers/authentication.controller",{"_index":425,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["http/controllers/user.controller",{"_index":1815,"title":{},"body":{"modules/UserModule.html":{}}}],["http/interceptors/response",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/services/user.service",{"_index":1814,"title":{},"body":{"modules/UserModule.html":{}}}],["http://localhost:3002",{"_index":995,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpexception",{"_index":339,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["httpexception(\"user",{"_index":405,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('authentication",{"_index":397,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('invalid",{"_index":391,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('user",{"_index":394,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httphealthindicator",{"_index":974,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":1011,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://nestjs.com",{"_index":2043,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":340,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/UserService.html":{}}}],["httpstatus.not_acceptable",{"_index":1852,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.unauthorized",{"_index":393,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":682,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["icommandhandler",{"_index":688,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["id",{"_index":11,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AuthenticationController.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"entities/FinalAttendance.html":{},"injectables/JwtStorage.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id.command",{"_index":778,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["id.command.ts",{"_index":769,"title":{},"body":{"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["id.command.ts:1",{"_index":771,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["id.command.ts:6",{"_index":776,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["id:string",{"_index":31,"title":{},"body":{"entities/Address.html":{}}}],["identifier",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["ierrorbody",{"_index":673,"title":{"interfaces/IErrorBody.html":{}},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{}}}],["if(testdate.getday",{"_index":881,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["ignore",{"_index":1075,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["ignoredpropertyname",{"_index":1318,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagefilefilter",{"_index":1895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":382,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["implements",{"_index":665,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"classes/UserDetailResponse.html":{}}}],["import",{"_index":27,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}}}],["inactive",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incorrect",{"_index":409,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":298,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["inject",{"_index":341,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{}}}],["inject(\"tokenstorage",{"_index":358,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["inject(jwtservice",{"_index":1054,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["injectable",{"_index":111,"title":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AttendanceLogService.html":{},"injectables/ClassService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AttendanceLogService.html":{},"injectables/ClassService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":112,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/AttendanceLogService.html":{},"injectables/ClassService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":126,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["injectrepository(address",{"_index":127,"title":{},"body":{"injectables/AddressService.html":{}}}],["injectrepository(attendancelog",{"_index":286,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["injectrepository(class",{"_index":507,"title":{},"body":{"injectables/ClassService.html":{}}}],["injectrepository(finalattendance",{"_index":869,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["injectrepository(marks",{"_index":1197,"title":{},"body":{"injectables/MarksService.html":{}}}],["injectrepository(student",{"_index":1455,"title":{},"body":{"injectables/StudentService.html":{}}}],["injectrepository(subject",{"_index":1567,"title":{},"body":{"injectables/SubjectService.html":{}}}],["injectrepository(teacher",{"_index":1670,"title":{},"body":{"injectables/TeacherService.html":{}}}],["injectrepository(user",{"_index":359,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["innerjoin('marks.subject",{"_index":1272,"title":{},"body":{"injectables/MarksService.html":{}}}],["installation",{"_index":2005,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2008,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1017,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["instanceof",{"_index":1147,"title":{},"body":{"controllers/MarksController.html":{},"injectables/TimeoutInterceptor.html":{}}}],["int",{"_index":1510,"title":{},"body":{"entities/Subject.html":{}}}],["intercept",{"_index":753,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":754,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interface",{"_index":1014,"title":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["interfaces",{"_index":1015,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1127,"title":{},"body":{"controllers/MarksController.html":{}}}],["internalservererrorexception('something",{"_index":1149,"title":{},"body":{"controllers/MarksController.html":{}}}],["invalid",{"_index":719,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["inversejoincolumn",{"_index":1606,"title":{},"body":{"entities/Teacher.html":{}}}],["isdatestring",{"_index":550,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["isemail",{"_index":723,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isenum",{"_index":574,"title":{},"body":{"classes/CreateMarkDto.html":{},"classes/CreateUserRequest.html":{}}}],["isenum(role",{"_index":726,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isignored",{"_index":1328,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["isint",{"_index":567,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["isnotempty",{"_index":551,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateUserRequest.html":{}}}],["isnotempty()@apiproperty({enum",{"_index":717,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isnotempty()@isdatestring",{"_index":543,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["isnotempty()@isstring",{"_index":548,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["isnotempty()@isstring()@apiproperty",{"_index":715,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isnumber",{"_index":608,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["isodatetime",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptional",{"_index":552,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{},"classes/CreateUserRequest.html":{}}}],["isoptional()@isdatestring",{"_index":545,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{}}}],["isstring",{"_index":534,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateUserRequest.html":{}}}],["isstring()@isnotempty",{"_index":569,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["isuccessbody",{"_index":1033,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["itemcount",{"_index":1020,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["items",{"_index":1032,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["itemsbody",{"_index":1031,"title":{"interfaces/ItemsBody.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["itemsperpage",{"_index":1022,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["iuserresponse",{"_index":1805,"title":{},"body":{"classes/UserDetailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["joi",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1613,"title":{},"body":{"entities/Teacher.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":797,"title":{},"body":{"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"entities/Teacher.html":{}}}],["joiningdate",{"_index":618,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["jointable",{"_index":1609,"title":{},"body":{"entities/Teacher.html":{}}}],["jwt",{"_index":437,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"dependencies.html":{}}}],["jwtservice",{"_index":355,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstorage",{"_index":419,"title":{"injectables/JwtStorage.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jwtstorage.token_expiry",{"_index":1058,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstorage.token_type",{"_index":1057,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstrategy",{"_index":1064,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":2040,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":585,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["lastpageurl",{"_index":1026,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["later",{"_index":383,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["leftjoin(\"mark.student",{"_index":1224,"title":{},"body":{"injectables/MarksService.html":{}}}],["leftjoin(\"mark.subject",{"_index":1223,"title":{},"body":{"injectables/MarksService.html":{}}}],["leftjoin(\"student.class",{"_index":1225,"title":{},"body":{"injectables/MarksService.html":{}}}],["leftjoin('finalattendance.student",{"_index":940,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["leftjoin('marks.subject",{"_index":1301,"title":{},"body":{"injectables/MarksService.html":{}}}],["leftjoin('student.class",{"_index":941,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["leftjoinandselect(\"teacher.address",{"_index":1709,"title":{},"body":{"injectables/TeacherService.html":{}}}],["leftjoinandselect(\"teacher.user",{"_index":1710,"title":{},"body":{"injectables/TeacherService.html":{}}}],["leftjoinandselect('finalattendance.student",{"_index":961,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["leftjoinandselect('student.class",{"_index":1478,"title":{},"body":{"injectables/StudentService.html":{}}}],["leftjoinandselect('student.user",{"_index":1479,"title":{},"body":{"injectables/StudentService.html":{}}}],["leftjoinandselect('subject.class",{"_index":1583,"title":{},"body":{"injectables/SubjectService.html":{}}}],["legend",{"_index":93,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["lessthan",{"_index":862,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["level",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":2046,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2024,"title":{},"body":{"index.html":{}}}],["literal",{"_index":637,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":736,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"dependencies.html":{}}}],["localhost",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":306,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{}}}],["log.controller.ts",{"_index":251,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["logger",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["loggerconfig",{"_index":1880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":1844,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":331,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(@request",{"_index":372,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(req",{"_index":334,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["loginuser(req",{"_index":400,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logs",{"_index":226,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/FinalAttendanceService.html":{}}}],["logs/error.log",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["make",{"_index":1450,"title":{},"body":{"injectables/StudentService.html":{}}}],["male",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":800,"title":{},"body":{"entities/FinalAttendance.html":{},"entities/Teacher.html":{}}}],["manytomany(undefined",{"_index":1603,"title":{},"body":{"entities/Teacher.html":{}}}],["manytoone",{"_index":799,"title":{},"body":{"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"entities/Subject.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["manytoone(undefined",{"_index":1341,"title":{},"body":{"entities/Student.html":{},"entities/Subject.html":{}}}],["manytoone(undefined)@joincolumn",{"_index":790,"title":{},"body":{"entities/FinalAttendance.html":{},"entities/Marks.html":{}}}],["map",{"_index":1311,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["map((data",{"_index":1332,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["mark",{"_index":1207,"title":{},"body":{"injectables/MarksService.html":{}}}],["mark.academicyear",{"_index":1229,"title":{},"body":{"injectables/MarksService.html":{}}}],["mark.controller.ts",{"_index":1125,"title":{},"body":{"controllers/MarksController.html":{}}}],["mark.dto",{"_index":1130,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/UpdateMarkDto.html":{}}}],["mark.dto.ts",{"_index":561,"title":{},"body":{"classes/CreateMarkDto.html":{},"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["mark.dto.ts:10",{"_index":573,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["mark.dto.ts:14",{"_index":570,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["mark.dto.ts:17",{"_index":568,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["mark.dto.ts:20",{"_index":571,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["mark.dto.ts:7",{"_index":572,"title":{},"body":{"classes/CreateMarkDto.html":{}}}],["mark.marksobtained",{"_index":1231,"title":{},"body":{"injectables/MarksService.html":{}}}],["mark.result",{"_index":1233,"title":{},"body":{"injectables/MarksService.html":{}}}],["mark.student",{"_index":1268,"title":{},"body":{"injectables/MarksService.html":{}}}],["mark.subject",{"_index":1269,"title":{},"body":{"injectables/MarksService.html":{}}}],["marks",{"_index":1080,"title":{"entities/Marks.html":{}},"body":{"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"coverage.html":{}}}],["marks.academicyear",{"_index":1294,"title":{},"body":{"injectables/MarksService.html":{}}}],["marks.controller",{"_index":1167,"title":{},"body":{"modules/MarksModule.html":{}}}],["marks.entity.ts",{"_index":1090,"title":{},"body":{"entities/Marks.html":{}}}],["marks.foreach(mark",{"_index":1241,"title":{},"body":{"injectables/MarksService.html":{}}}],["marks.result",{"_index":1298,"title":{},"body":{"injectables/MarksService.html":{}}}],["marks.service",{"_index":1129,"title":{},"body":{"controllers/MarksController.html":{},"modules/MarksModule.html":{}}}],["marks.subjectid",{"_index":1292,"title":{},"body":{"injectables/MarksService.html":{}}}],["marks/marks.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["marksbystudent",{"_index":1239,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent.academicyears[academicyear",{"_index":1248,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent.academicyears[academicyear].push",{"_index":1249,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent.classname",{"_index":1247,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent.firstname",{"_index":1245,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent.lastname",{"_index":1246,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent.studentid",{"_index":1244,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent[studentid",{"_index":1255,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent[studentid].academicyears[academicyear",{"_index":1257,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbystudent[studentid].academicyears[academicyear].push({subjectname",{"_index":1258,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbyyear",{"_index":1281,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbyyear.map(row",{"_index":1284,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbyyearquery",{"_index":1270,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksbyyearquery.getrawmany",{"_index":1282,"title":{},"body":{"injectables/MarksService.html":{}}}],["markscontroller",{"_index":1093,"title":{"controllers/MarksController.html":{}},"body":{"controllers/MarksController.html":{},"modules/MarksModule.html":{},"coverage.html":{}}}],["marksmodule",{"_index":154,"title":{"modules/MarksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarksModule.html":{},"modules.html":{},"overview.html":{}}}],["marksobtained",{"_index":564,"title":{},"body":{"classes/CreateMarkDto.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{}}}],["marksrepository",{"_index":1179,"title":{},"body":{"injectables/MarksService.html":{}}}],["marksservice",{"_index":1128,"title":{"injectables/MarksService.html":{}},"body":{"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":33,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.round(moment(log.exittime).diff(moment(log.entrytime",{"_index":895,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["max",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memory",{"_index":1000,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":979,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":521,"title":{},"body":{"controllers/CoreController.html":{},"classes/CreateUserException.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["messageformat",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1672,"title":{},"body":{"injectables/TeacherService.html":{}}}],["methods",{"_index":39,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["midnight",{"_index":871,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["migrations",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/**/*.ts",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minor@1234",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1948,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2023,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":619,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["mode",{"_index":2014,"title":{},"body":{"index.html":{}}}],["module",{"_index":89,"title":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":865,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"dependencies.html":{}}}],["moment().startof('day",{"_index":874,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["moment(log.exittime).diff(moment(log.entrytime",{"_index":894,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["moment(today).add(1",{"_index":876,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["mongodb+srv://${db_vars.username}:${db_vars.password}@${db_vars.host}/?retrywrites=true&w=majority",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodbhealth",{"_index":989,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosehealthindicator",{"_index":976,"title":{},"body":{"controllers/HealthController.html":{}}}],["more",{"_index":998,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["morethanorequal",{"_index":863,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["ms",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":2041,"title":{},"body":{"index.html":{}}}],["name",{"_index":50,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":2002,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2045,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":762,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":1012,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":68,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateUserExceptionFilter.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1317,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":433,"title":{},"body":{"modules/AuthenticationModule.html":{},"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":356,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":345,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TokenGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":72,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"classes/CreateUserRequest.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":980,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":108,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["nestjswinstonloggerservice",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjwtstrategy",{"_index":423,"title":{"classes/NestJwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["new",{"_index":379,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newsubject",{"_index":1570,"title":{},"body":{"injectables/SubjectService.html":{}}}],["next",{"_index":756,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe",{"_index":1331,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":1330,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["nextpageurl",{"_index":1027,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["node.js",{"_index":1994,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":1126,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["notfoundexception('mark",{"_index":1156,"title":{},"body":{"controllers/MarksController.html":{}}}],["notfoundexception(`class",{"_index":1502,"title":{},"body":{"injectables/StudentService.html":{}}}],["notfoundexception(`mark",{"_index":1267,"title":{},"body":{"injectables/MarksService.html":{}}}],["notfoundexception(`student",{"_index":1264,"title":{},"body":{"injectables/MarksService.html":{}}}],["notfoundexception(`subject",{"_index":1265,"title":{},"body":{"injectables/MarksService.html":{},"injectables/TeacherService.html":{}}}],["notfoundexception(error.message",{"_index":1148,"title":{},"body":{"controllers/MarksController.html":{}}}],["null",{"_index":302,"title":{},"body":{"injectables/AttendanceLogService.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["nullable",{"_index":218,"title":{},"body":{"entities/AttendanceLog.html":{},"entities/FinalAttendance.html":{},"entities/User.html":{}}}],["number",{"_index":446,"title":{},"body":{"classes/BcryptService.html":{},"classes/CreateMarkDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserHandler.html":{},"entities/FinalAttendance.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"entities/Subject.html":{},"entities/Teacher.html":{},"injectables/UserService.html":{}}}],["object",{"_index":371,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":1363,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["observable",{"_index":760,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obtained",{"_index":1202,"title":{},"body":{"injectables/MarksService.html":{}}}],["okr",{"_index":994,"title":{},"body":{"controllers/HealthController.html":{}}}],["omit",{"_index":1808,"title":{},"body":{"classes/UserDetailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["onetomany",{"_index":465,"title":{},"body":{"entities/Class.html":{}}}],["onetoone",{"_index":798,"title":{},"body":{"entities/FinalAttendance.html":{},"entities/Student.html":{},"entities/Teacher.html":{}}}],["onetoone(undefined",{"_index":1355,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["open",{"_index":2025,"title":{},"body":{"index.html":{}}}],["optional",{"_index":51,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"interfaces/IErrorBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":965,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["orderby(\"mark.academicyear",{"_index":1236,"title":{},"body":{"injectables/MarksService.html":{}}}],["orderby(\"student.id",{"_index":1252,"title":{},"body":{"injectables/MarksService.html":{}}}],["orderby('attendancelog.date",{"_index":313,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["orderby('classentity.classname",{"_index":945,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["orderby('finalattendance.date",{"_index":915,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["orderby('marks.academicyear",{"_index":1280,"title":{},"body":{"injectables/MarksService.html":{}}}],["orderby('marks.subjectid",{"_index":1303,"title":{},"body":{"injectables/MarksService.html":{}}}],["orderby('student.class",{"_index":1497,"title":{},"body":{"injectables/StudentService.html":{}}}],["orderby('student.classid",{"_index":1487,"title":{},"body":{"injectables/StudentService.html":{}}}],["others",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":103,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2052,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1900,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationmetainterface",{"_index":1019,"title":{"interfaces/PaginationMetaInterface.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{}}}],["param",{"_index":66,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["param('date",{"_index":267,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["parseint(curr.absentcount",{"_index":959,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["parseint(curr.presentcount",{"_index":958,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["parseint(process.env.database_port",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.db_connection_pool_max",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(row.academicyear",{"_index":1285,"title":{},"body":{"injectables/MarksService.html":{}}}],["partial",{"_index":1361,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["partialtype",{"_index":1731,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaddressdto",{"_index":1730,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["partialtype(createattendancelogdto",{"_index":1734,"title":{},"body":{"classes/UpdateAttendanceDto.html":{}}}],["partialtype(createclassdto",{"_index":1736,"title":{},"body":{"classes/UpdateClassDto.html":{}}}],["partialtype(createfinalattendancedto",{"_index":1739,"title":{},"body":{"classes/UpdateFinalAttendanceDto.html":{}}}],["partialtype(createmarkdto",{"_index":1742,"title":{},"body":{"classes/UpdateMarkDto.html":{}}}],["partialtype(createstudentdto",{"_index":1744,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["partialtype(createsubjectdto",{"_index":1746,"title":{},"body":{"classes/UpdateSubjectDto.html":{}}}],["partialtype(createteacherdto",{"_index":1748,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["partialtype(createuserdto",{"_index":1751,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":1204,"title":{},"body":{"injectables/MarksService.html":{},"miscellaneous/enumerations.html":{}}}],["passedstudents",{"_index":1299,"title":{},"body":{"injectables/MarksService.html":{}}}],["passmarks",{"_index":606,"title":{},"body":{"classes/CreateSubjectDto.html":{},"injectables/MarksService.html":{},"entities/Subject.html":{},"injectables/SubjectService.html":{}}}],["passmarks,result",{"_index":1243,"title":{},"body":{"injectables/MarksService.html":{}}}],["passpercentage",{"_index":1300,"title":{},"body":{"injectables/MarksService.html":{}}}],["passpercentagebysubject",{"_index":1174,"title":{},"body":{"injectables/MarksService.html":{}}}],["passpercentageresults",{"_index":1289,"title":{},"body":{"injectables/MarksService.html":{}}}],["passport",{"_index":735,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"dependencies.html":{}}}],["passport/strategy/database.strategy",{"_index":430,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passport/strategy/jwt.strategy",{"_index":424,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule",{"_index":422,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule.register",{"_index":435,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":737,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["passportstrategy(jwtstrategy",{"_index":1079,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":728,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["password",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwordgenerator",{"_index":1898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordlength",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":65,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":62,"title":{},"body":{"controllers/AddressController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["pdffilefilter",{"_index":1896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["percentage",{"_index":1114,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["percentages",{"_index":1283,"title":{},"body":{"injectables/MarksService.html":{}}}],["pg",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":706,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["pino",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pinohttp",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(catcherror((err",{"_index":766,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["please",{"_index":2034,"title":{},"body":{"index.html":{}}}],["port",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":47,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["post(\"/authentication",{"_index":369,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post(\"/me",{"_index":399,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post(\"/user",{"_index":1786,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/user')@responsemessage('user",{"_index":1769,"title":{},"body":{"controllers/UserController.html":{}}}],["post('aggregate/:username",{"_index":810,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["post('all",{"_index":234,"title":{},"body":{"controllers/AttendanceLogController.html":{},"controllers/SubjectController.html":{}}}],["post('allmarks",{"_index":1103,"title":{},"body":{"controllers/MarksController.html":{}}}],["post('allstudents",{"_index":1403,"title":{},"body":{"controllers/StudentController.html":{}}}],["post('allstudents')@responsemessage('student",{"_index":1380,"title":{},"body":{"controllers/StudentController.html":{}}}],["post('allteachers",{"_index":1641,"title":{},"body":{"controllers/TeacherController.html":{}}}],["post('allteachers')@responsemessage('teachers",{"_index":1626,"title":{},"body":{"controllers/TeacherController.html":{}}}],["post()@responsemessage('student",{"_index":1377,"title":{},"body":{"controllers/StudentController.html":{}}}],["post()@responsemessage('teacher",{"_index":1623,"title":{},"body":{"controllers/TeacherController.html":{}}}],["postgres",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["postgresql",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["prefix",{"_index":38,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AttendanceLogController.html":{},"controllers/ClassController.html":{},"controllers/FinalAttendanceController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["present",{"_index":928,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"miscellaneous/enumerations.html":{}}}],["presentcount",{"_index":905,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["pretty",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previouspageurl",{"_index":1028,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["primary",{"_index":1966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primarycolumn",{"_index":221,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["primarycolumn({type",{"_index":214,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["primarygeneratedcolumn",{"_index":23,"title":{},"body":{"entities/Address.html":{},"entities/Class.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"entities/Student.html":{},"entities/Subject.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["priorityenum",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":128,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process",{"_index":887,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{}}}],["process.env.database_host",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_schema_sync",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_connection_pool_max",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_database",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.typeorm_query_logging",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":2016,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1993,"title":{},"body":{"index.html":{}}}],["project",{"_index":2026,"title":{},"body":{"index.html":{}}}],["promise",{"_index":283,"title":{},"body":{"injectables/AttendanceLogService.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}}}],["promise.all",{"_index":375,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Address.html":{},"entities/AttendanceLog.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"entities/FinalAttendance.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"entities/Student.html":{},"entities/Subject.html":{},"entities/Teacher.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"properties.html":{}}}],["propertydescriptor",{"_index":1324,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["propertykey",{"_index":1322,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["props",{"_index":1362,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["provide",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/token",{"_index":428,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public",{"_index":1037,"title":{},"body":{"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{}}}],["qualification",{"_index":620,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["query",{"_index":305,"title":{},"body":{"injectables/AttendanceLogService.html":{},"controllers/MarksController.html":{},"controllers/SubjectController.html":{}}}],["query('classid",{"_index":1541,"title":{},"body":{"controllers/SubjectController.html":{}}}],["query('subjectname",{"_index":1540,"title":{},"body":{"controllers/SubjectController.html":{}}}],["randomname",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${fileextname",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":2035,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":78,"title":{},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":1212,"title":{},"body":{"injectables/MarksService.html":{}}}],["record.absentcount",{"_index":908,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["record.classname",{"_index":898,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["record.firstname",{"_index":903,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["record.lastname",{"_index":904,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["record.presentcount",{"_index":906,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["record.studentid",{"_index":902,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["records",{"_index":307,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["referencedcolumnname",{"_index":1617,"title":{},"body":{"entities/Teacher.html":{}}}],["referencing",{"_index":1616,"title":{},"body":{"entities/Teacher.html":{}}}],["reflect",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1316,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["reflector().get(responsemessagekey",{"_index":1326,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["refreshtoken",{"_index":380,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["rejected",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["remark",{"_index":782,"title":{},"body":{"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{}}}],["remove",{"_index":43,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":87,"title":{},"body":{"controllers/AddressController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["remove(@param('username",{"_index":266,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["remove(id",{"_index":58,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(username",{"_index":248,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{}}}],["repository",{"_index":117,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":335,"title":{"interfaces/Req.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"interfaces/Req.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["req.headers.host",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.method",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.password",{"_index":408,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.url",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":387,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.user.id",{"_index":377,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.user.username",{"_index":389,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.username",{"_index":401,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["reqid",{"_index":1335,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["request",{"_index":342,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{}}}],["requests/create",{"_index":1781,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requesttimeoutexception",{"_index":1718,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["res.statuscode",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":102,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resourcebody",{"_index":1029,"title":{"interfaces/ResourceBody.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["response",{"_index":671,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/MarksService.html":{}}}],["response.push",{"_index":1220,"title":{},"body":{"injectables/MarksService.html":{}}}],["response.status(httpstatus.unprocessable_entity).json",{"_index":679,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["response/types",{"_index":1313,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["response/user",{"_index":353,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["responsemessage",{"_index":984,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"backend",{"_index":991,"title":{},"body":{"controllers/HealthController.html":{}}}],["responsemessage('student",{"_index":1401,"title":{},"body":{"controllers/StudentController.html":{}}}],["responsemessage('teacher",{"_index":1638,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsemessage('teachers",{"_index":1642,"title":{},"body":{"controllers/TeacherController.html":{}}}],["responsemessage('user",{"_index":1787,"title":{},"body":{"controllers/UserController.html":{}}}],["responsemessagekey",{"_index":1314,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsetime",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetransforminterceptor",{"_index":527,"title":{"injectables/ResponseTransformInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["responsetransforminterceptorignore",{"_index":981,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["restdata",{"_index":1500,"title":{},"body":{"injectables/StudentService.html":{},"injectables/SubjectService.html":{}}}],["result",{"_index":1082,"title":{},"body":{"entities/Marks.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{}}}],["resultenum",{"_index":575,"title":{},"body":{"classes/CreateMarkDto.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{},"miscellaneous/enumerations.html":{}}}],["resultenum.fail",{"_index":1092,"title":{},"body":{"entities/Marks.html":{},"injectables/MarksService.html":{}}}],["resultenum.pass",{"_index":1206,"title":{},"body":{"injectables/MarksService.html":{}}}],["results",{"_index":32,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":295,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{}}}],["retrieved",{"_index":309,"title":{},"body":{"injectables/AttendanceLogService.html":{},"controllers/HealthController.html":{}}}],["retrieved')@healthcheck()@responsetransforminterceptorignore",{"_index":971,"title":{},"body":{"controllers/HealthController.html":{}}}],["retrieved'})@responsemessage('backend",{"_index":970,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":80,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returndocument",{"_index":1398,"title":{},"body":{"controllers/StudentController.html":{}}}],["returns",{"_index":53,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":586,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["role.staff_admin",{"_index":1790,"title":{},"body":{"controllers/UserController.html":{}}}],["role.student",{"_index":1460,"title":{},"body":{"injectables/StudentService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["role.teacher",{"_index":1675,"title":{},"body":{"injectables/TeacherService.html":{}}}],["role})@isenum(role",{"_index":718,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["rollno",{"_index":587,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["row.totalfullmarks",{"_index":1287,"title":{},"body":{"injectables/MarksService.html":{}}}],["row.totalmarks",{"_index":1286,"title":{},"body":{"injectables/MarksService.html":{}}}],["rss",{"_index":1005,"title":{},"body":{"controllers/HealthController.html":{}}}],["run",{"_index":2011,"title":{},"body":{"index.html":{}}}],["runs",{"_index":870,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["rxjs",{"_index":765,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1312,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["salt_rounds",{"_index":442,"title":{},"body":{"classes/BcryptService.html":{}}}],["save",{"_index":1576,"title":{},"body":{"injectables/SubjectService.html":{},"injectables/TeacherService.html":{}}}],["savedteacher",{"_index":1692,"title":{},"body":{"injectables/TeacherService.html":{}}}],["savedteacher.subjects.push(subject",{"_index":1700,"title":{},"body":{"injectables/TeacherService.html":{}}}],["scalable",{"_index":1998,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/FinalAttendanceModule.html":{}}}],["schedulemodule.forroot",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/FinalAttendanceModule.html":{}}}],["schema",{"_index":370,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["secondary",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["secret",{"_index":364,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["secretkey",{"_index":365,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["select",{"_index":925,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"entities/User.html":{}}}],["select(\"mark.id",{"_index":1261,"title":{},"body":{"injectables/MarksService.html":{}}}],["select('count(student.id",{"_index":1492,"title":{},"body":{"injectables/StudentService.html":{}}}],["select('distinct",{"_index":913,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["select('marks.academicyear",{"_index":1273,"title":{},"body":{"injectables/MarksService.html":{}}}],["select('student.classid",{"_index":1485,"title":{},"body":{"injectables/StudentService.html":{}}}],["select(['user.id",{"_index":742,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["server",{"_index":1999,"title":{},"body":{"index.html":{}}}],["services/bcrypt.service",{"_index":426,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{}}}],["services/user.service",{"_index":1778,"title":{},"body":{"controllers/UserController.html":{}}}],["set",{"_index":1505,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["setmetadata(responsemessagekey",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparameters",{"_index":936,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["side",{"_index":2000,"title":{},"body":{"index.html":{}}}],["singleline",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket.io",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["sorting",{"_index":963,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateFinalAttendanceDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateFinalAttendanceDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spent",{"_index":891,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["sponsors",{"_index":2029,"title":{},"body":{"index.html":{}}}],["src/.../attendance.enum.ts",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../authentication.controller.ts",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../contact.enum.ts",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../database.config.ts",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.ts",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db.config.ts",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.enum.ts",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../globallogger.ts",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.utils.ts",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password.generator.ts",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pinologgerconfig.ts",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../priority.enum.ts",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../response",{"_index":1990,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../response.decorator.ts",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../result.enum.ts",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.enum.ts",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/address/address.controller.ts",{"_index":37,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{}}}],["src/address/address.controller.ts:12",{"_index":48,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:17",{"_index":54,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:22",{"_index":57,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:27",{"_index":63,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.controller.ts:32",{"_index":60,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/address/address.module",{"_index":1655,"title":{},"body":{"modules/TeacherModule.html":{}}}],["src/address/address.module.ts",{"_index":104,"title":{},"body":{"modules/AddressModule.html":{}}}],["src/address/address.service",{"_index":1669,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/address/address.service.ts",{"_index":113,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/address/address.service.ts:15",{"_index":120,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:19",{"_index":122,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:23",{"_index":123,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:27",{"_index":125,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:32",{"_index":124,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/address.service.ts:9",{"_index":118,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/address/dto/create",{"_index":532,"title":{},"body":{"classes/CreateAddressDto.html":{},"coverage.html":{}}}],["src/address/dto/update",{"_index":1729,"title":{},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["src/address/entities/address.entity",{"_index":1612,"title":{},"body":{"entities/Teacher.html":{}}}],["src/address/entities/address.entity.ts",{"_index":6,"title":{},"body":{"entities/Address.html":{},"coverage.html":{}}}],["src/address/entities/address.entity.ts:10",{"_index":20,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:13",{"_index":21,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:16",{"_index":25,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:19",{"_index":26,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:22",{"_index":22,"title":{},"body":{"entities/Address.html":{}}}],["src/address/entities/address.entity.ts:7",{"_index":24,"title":{},"body":{"entities/Address.html":{}}}],["src/app.controller.ts",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":141,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":205,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":206,"title":{},"body":{"injectables/AppService.html":{}}}],["src/attendance/attendance.controller.ts",{"_index":224,"title":{},"body":{"controllers/AttendanceLogController.html":{},"coverage.html":{}}}],["src/attendance/attendance.controller.ts:13",{"_index":232,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.controller.ts:18",{"_index":235,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.controller.ts:23",{"_index":237,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.controller.ts:28",{"_index":240,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.controller.ts:33",{"_index":246,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.controller.ts:38",{"_index":243,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.controller.ts:43",{"_index":250,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["src/attendance/attendance.module",{"_index":844,"title":{},"body":{"modules/FinalAttendanceModule.html":{}}}],["src/attendance/attendance.module.ts",{"_index":324,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["src/attendance/attendance.service",{"_index":867,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/attendance/attendance.service.ts",{"_index":269,"title":{},"body":{"injectables/AttendanceLogService.html":{},"coverage.html":{}}}],["src/attendance/attendance.service.ts:12",{"_index":273,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:20",{"_index":275,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:25",{"_index":276,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:35",{"_index":281,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:55",{"_index":279,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:63",{"_index":277,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:67",{"_index":278,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/attendance.service.ts:75",{"_index":282,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["src/attendance/dto/create",{"_index":541,"title":{},"body":{"classes/CreateAttendanceLogDto.html":{},"coverage.html":{}}}],["src/attendance/dto/update",{"_index":1733,"title":{},"body":{"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["src/attendance/entities/attendance.entity",{"_index":866,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/attendance/entities/attendance.entity.ts",{"_index":210,"title":{},"body":{"entities/AttendanceLog.html":{},"coverage.html":{}}}],["src/attendance/entities/attendance.entity.ts:12",{"_index":219,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["src/attendance/entities/attendance.entity.ts:15",{"_index":220,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["src/attendance/entities/attendance.entity.ts:6",{"_index":222,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["src/attendance/entities/attendance.entity.ts:9",{"_index":215,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["src/authentication/authentication.module.ts",{"_index":421,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/http/controllers/authentication.controller",{"_index":1837,"title":{},"body":{"injectables/UserService.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts",{"_index":329,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:25",{"_index":333,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:52",{"_index":338,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/response/user",{"_index":1803,"title":{},"body":{"classes/UserDetailResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/authentication/http/token.guard.ts",{"_index":1725,"title":{},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts",{"_index":727,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts:12",{"_index":730,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts:21",{"_index":732,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts",{"_index":1065,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts:10",{"_index":1068,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts:19",{"_index":1070,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/providers/token",{"_index":1870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/services/bcrypt.service",{"_index":1816,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/authentication/services/bcrypt.service.ts",{"_index":440,"title":{},"body":{"classes/BcryptService.html":{},"coverage.html":{}}}],["src/authentication/services/bcrypt.service.ts:11",{"_index":452,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:15",{"_index":454,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:5",{"_index":450,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:7",{"_index":456,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/storage/jwt.storage.ts",{"_index":1034,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{}}}],["src/authentication/storage/jwt.storage.ts:15",{"_index":1048,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:16",{"_index":1050,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:18",{"_index":1046,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:20",{"_index":1041,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:32",{"_index":1043,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:45",{"_index":1045,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/token.storage.ts",{"_index":1727,"title":{},"body":{"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["src/class/class.controller.ts",{"_index":468,"title":{},"body":{"controllers/ClassController.html":{},"coverage.html":{}}}],["src/class/class.controller.ts:13",{"_index":471,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:18",{"_index":472,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:23",{"_index":473,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:28",{"_index":475,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:33",{"_index":474,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.module",{"_index":1427,"title":{},"body":{"modules/StudentModule.html":{},"modules/SubjectModule.html":{}}}],["src/class/class.module.ts",{"_index":491,"title":{},"body":{"modules/ClassModule.html":{}}}],["src/class/class.service",{"_index":1453,"title":{},"body":{"injectables/StudentService.html":{},"injectables/SubjectService.html":{}}}],["src/class/class.service.ts",{"_index":495,"title":{},"body":{"injectables/ClassService.html":{},"coverage.html":{}}}],["src/class/class.service.ts:14",{"_index":500,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:18",{"_index":501,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:22",{"_index":502,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:26",{"_index":504,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:30",{"_index":506,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:35",{"_index":505,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:8",{"_index":498,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/dto/create",{"_index":553,"title":{},"body":{"classes/CreateClassDto.html":{},"coverage.html":{}}}],["src/class/dto/update",{"_index":1735,"title":{},"body":{"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["src/class/entities/class.entity",{"_index":600,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{}}}],["src/class/entities/class.entity.ts",{"_index":461,"title":{},"body":{"entities/Class.html":{},"coverage.html":{}}}],["src/class/entities/class.entity.ts:10",{"_index":463,"title":{},"body":{"entities/Class.html":{}}}],["src/class/entities/class.entity.ts:7",{"_index":464,"title":{},"body":{"entities/Class.html":{}}}],["src/common/enums/attendance.enum",{"_index":795,"title":{},"body":{"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{}}}],["src/common/enums/attendance.enum.ts",{"_index":1964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/priority.enum.ts",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/result.enum",{"_index":576,"title":{},"body":{"classes/CreateMarkDto.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{}}}],["src/common/enums/result.enum.ts",{"_index":1976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/status.enum.ts",{"_index":1980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/user",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/config/database.config.ts",{"_index":1872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database.ts",{"_index":1874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/globallogger.ts",{"_index":1875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/ormconfig.ts",{"_index":1877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/pinologgerconfig.ts",{"_index":1879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/db.config.ts",{"_index":1881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/decorators/response.decorator",{"_index":985,"title":{},"body":{"controllers/HealthController.html":{},"controllers/StudentController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["src/core/decorators/response.decorator.ts",{"_index":1884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/http/controller.ts/core.controllers.ts",{"_index":517,"title":{},"body":{"controllers/CoreController.html":{},"coverage.html":{}}}],["src/core/http/controller.ts/core.controllers.ts:8",{"_index":520,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/http/interceptors/exception.interceptor.ts",{"_index":752,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["src/core/http/interceptors/exception.interceptor.ts:12",{"_index":758,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["src/core/http/interceptors/response",{"_index":1308,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/http/interceptors/timeout.interceptor.ts",{"_index":1716,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/core/http/interceptors/timeout.interceptor.ts:18",{"_index":1717,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/core/http/request/request.ts",{"_index":1306,"title":{},"body":{"interfaces/Req.html":{},"coverage.html":{}}}],["src/core/http/response/types.ts",{"_index":1016,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/final_attendance/dto/create",{"_index":557,"title":{},"body":{"classes/CreateFinalAttendanceDto.html":{},"coverage.html":{}}}],["src/final_attendance/dto/update",{"_index":1738,"title":{},"body":{"classes/UpdateFinalAttendanceDto.html":{},"coverage.html":{}}}],["src/final_attendance/entities/final_attendance.entity",{"_index":1428,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts",{"_index":781,"title":{},"body":{"entities/FinalAttendance.html":{},"coverage.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts:10",{"_index":787,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts:13",{"_index":786,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts:20",{"_index":785,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts:23",{"_index":792,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts:26",{"_index":789,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["src/final_attendance/entities/final_attendance.entity.ts:30",{"_index":791,"title":{},"body":{"entities/FinalAttendance.html":{}}}],["src/final_attendance/final_attendance.controller.ts",{"_index":803,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"coverage.html":{}}}],["src/final_attendance/final_attendance.controller.ts:15",{"_index":811,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["src/final_attendance/final_attendance.controller.ts:24",{"_index":819,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["src/final_attendance/final_attendance.controller.ts:29",{"_index":815,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["src/final_attendance/final_attendance.controller.ts:34",{"_index":817,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["src/final_attendance/final_attendance.controller.ts:9",{"_index":813,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["src/final_attendance/final_attendance.module",{"_index":1429,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/final_attendance/final_attendance.module.ts",{"_index":841,"title":{},"body":{"modules/FinalAttendanceModule.html":{}}}],["src/final_attendance/final_attendance.service",{"_index":1454,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/final_attendance/final_attendance.service.ts",{"_index":847,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"coverage.html":{}}}],["src/final_attendance/final_attendance.service.ts:100",{"_index":858,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/final_attendance/final_attendance.service.ts:166",{"_index":855,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/final_attendance/final_attendance.service.ts:18",{"_index":852,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/final_attendance/final_attendance.service.ts:208",{"_index":860,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/final_attendance/final_attendance.service.ts:251",{"_index":861,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/final_attendance/final_attendance.service.ts:310",{"_index":859,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["src/health/health.controller.ts",{"_index":967,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:30",{"_index":972,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":1009,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1886,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/marks/dto/create",{"_index":560,"title":{},"body":{"classes/CreateMarkDto.html":{},"coverage.html":{}}}],["src/marks/dto/update",{"_index":1741,"title":{},"body":{"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["src/marks/entities/mark.entity.ts",{"_index":1081,"title":{},"body":{"entities/Marks.html":{},"coverage.html":{}}}],["src/marks/entities/mark.entity.ts:11",{"_index":1085,"title":{},"body":{"entities/Marks.html":{}}}],["src/marks/entities/mark.entity.ts:15",{"_index":1088,"title":{},"body":{"entities/Marks.html":{}}}],["src/marks/entities/mark.entity.ts:19",{"_index":1089,"title":{},"body":{"entities/Marks.html":{}}}],["src/marks/entities/mark.entity.ts:22",{"_index":1084,"title":{},"body":{"entities/Marks.html":{}}}],["src/marks/entities/mark.entity.ts:25",{"_index":1086,"title":{},"body":{"entities/Marks.html":{}}}],["src/marks/entities/mark.entity.ts:32",{"_index":1087,"title":{},"body":{"entities/Marks.html":{}}}],["src/marks/marks.controller.ts",{"_index":1094,"title":{},"body":{"controllers/MarksController.html":{},"coverage.html":{}}}],["src/marks/marks.controller.ts:14",{"_index":1101,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:18",{"_index":1121,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:28",{"_index":1104,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:37",{"_index":1106,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:42",{"_index":1108,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:54",{"_index":1112,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:59",{"_index":1124,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:72",{"_index":1118,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:77",{"_index":1115,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:82",{"_index":1109,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:89",{"_index":1119,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.module.ts",{"_index":1166,"title":{},"body":{"modules/MarksModule.html":{}}}],["src/marks/marks.service.ts",{"_index":1171,"title":{},"body":{"injectables/MarksService.html":{},"coverage.html":{}}}],["src/marks/marks.service.ts:102",{"_index":1188,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:148",{"_index":1187,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:15",{"_index":1178,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:185",{"_index":1195,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:216",{"_index":1185,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:229",{"_index":1193,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:23",{"_index":1180,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:263",{"_index":1190,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:283",{"_index":1191,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:303",{"_index":1182,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:307",{"_index":1189,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:311",{"_index":1192,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:59",{"_index":1181,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/student/dto/create",{"_index":578,"title":{},"body":{"classes/CreateStudentDto.html":{},"coverage.html":{}}}],["src/student/dto/update",{"_index":1743,"title":{},"body":{"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["src/student/entities/student.entity",{"_index":466,"title":{},"body":{"entities/Class.html":{},"entities/FinalAttendance.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"entities/Marks.html":{}}}],["src/student/entities/student.entity.ts",{"_index":1337,"title":{},"body":{"entities/Student.html":{},"coverage.html":{}}}],["src/student/entities/student.entity.ts:14",{"_index":1350,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:17",{"_index":1346,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:20",{"_index":1351,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:23",{"_index":1347,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:26",{"_index":1345,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:29",{"_index":1352,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:32",{"_index":1342,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:35",{"_index":1348,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:38",{"_index":1349,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:41",{"_index":1340,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:45",{"_index":1359,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:48",{"_index":1344,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:51",{"_index":1354,"title":{},"body":{"entities/Student.html":{}}}],["src/student/student.controller.ts",{"_index":1365,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student.controller.ts:16",{"_index":1378,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:22",{"_index":1381,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:28",{"_index":1382,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:33",{"_index":1375,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:38",{"_index":1373,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:44",{"_index":1385,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:49",{"_index":1390,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:54",{"_index":1392,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:63",{"_index":1388,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:68",{"_index":1386,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:73",{"_index":1395,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:78",{"_index":1393,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.module",{"_index":326,"title":{},"body":{"modules/AttendanceModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{}}}],["src/student/student.module.ts",{"_index":1424,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/student/student.service",{"_index":285,"title":{},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{}}}],["src/student/student.service.ts",{"_index":1432,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/student/student.service.ts:100",{"_index":1436,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:114",{"_index":1443,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:122",{"_index":1446,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:13",{"_index":1434,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:136",{"_index":1447,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:147",{"_index":1445,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:155",{"_index":1449,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:172",{"_index":1448,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:23",{"_index":1438,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:49",{"_index":1440,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:80",{"_index":1442,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:87",{"_index":1444,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:96",{"_index":1437,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/subject/dto/create",{"_index":603,"title":{},"body":{"classes/CreateSubjectDto.html":{},"coverage.html":{}}}],["src/subject/dto/update",{"_index":1745,"title":{},"body":{"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["src/subject/entities/subject.entity",{"_index":1091,"title":{},"body":{"entities/Marks.html":{},"entities/Teacher.html":{}}}],["src/subject/entities/subject.entity.ts",{"_index":1508,"title":{},"body":{"entities/Subject.html":{},"coverage.html":{}}}],["src/subject/entities/subject.entity.ts:10",{"_index":1514,"title":{},"body":{"entities/Subject.html":{}}}],["src/subject/entities/subject.entity.ts:13",{"_index":1511,"title":{},"body":{"entities/Subject.html":{}}}],["src/subject/entities/subject.entity.ts:16",{"_index":1513,"title":{},"body":{"entities/Subject.html":{}}}],["src/subject/entities/subject.entity.ts:19",{"_index":1509,"title":{},"body":{"entities/Subject.html":{}}}],["src/subject/entities/subject.entity.ts:7",{"_index":1512,"title":{},"body":{"entities/Subject.html":{}}}],["src/subject/subject.controller.ts",{"_index":1516,"title":{},"body":{"controllers/SubjectController.html":{},"coverage.html":{}}}],["src/subject/subject.controller.ts:13",{"_index":1519,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:18",{"_index":1521,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:23",{"_index":1522,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:28",{"_index":1524,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:33",{"_index":1527,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:42",{"_index":1528,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:47",{"_index":1531,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:52",{"_index":1529,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.module",{"_index":1168,"title":{},"body":{"modules/MarksModule.html":{},"modules/TeacherModule.html":{}}}],["src/subject/subject.module.ts",{"_index":1549,"title":{},"body":{"modules/SubjectModule.html":{}}}],["src/subject/subject.service",{"_index":1196,"title":{},"body":{"injectables/MarksService.html":{},"injectables/TeacherService.html":{}}}],["src/subject/subject.service.ts",{"_index":1553,"title":{},"body":{"injectables/SubjectService.html":{},"coverage.html":{}}}],["src/subject/subject.service.ts:10",{"_index":1555,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:17",{"_index":1557,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:33",{"_index":1559,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:56",{"_index":1561,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:63",{"_index":1562,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:67",{"_index":1563,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:76",{"_index":1564,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:80",{"_index":1566,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:96",{"_index":1565,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/teacher/dto/create",{"_index":614,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["src/teacher/dto/update",{"_index":1747,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["src/teacher/entities/teacher.entity.ts",{"_index":1591,"title":{},"body":{"entities/Teacher.html":{},"coverage.html":{}}}],["src/teacher/entities/teacher.entity.ts:16",{"_index":1598,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:19",{"_index":1596,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:22",{"_index":1600,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:25",{"_index":1597,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:28",{"_index":1593,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:31",{"_index":1601,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:34",{"_index":1599,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:37",{"_index":1602,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:40",{"_index":1595,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:43",{"_index":1594,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:47",{"_index":1608,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:51",{"_index":1592,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:65",{"_index":1607,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/teacher.controller.ts",{"_index":1621,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["src/teacher/teacher.controller.ts:15",{"_index":1624,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:22",{"_index":1627,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:28",{"_index":1628,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:33",{"_index":1629,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:38",{"_index":1632,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:43",{"_index":1630,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.module.ts",{"_index":1652,"title":{},"body":{"modules/TeacherModule.html":{}}}],["src/teacher/teacher.service.ts",{"_index":1657,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["src/teacher/teacher.service.ts:12",{"_index":1659,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:125",{"_index":1665,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:132",{"_index":1666,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:140",{"_index":1668,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:150",{"_index":1667,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:23",{"_index":1661,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:75",{"_index":1663,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/user/commands/create",{"_index":642,"title":{},"body":{"classes/CreateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/commands/fetch",{"_index":768,"title":{},"body":{"classes/FetchUserByIdCommand.html":{},"coverage.html":{}}}],["src/user/commands/handlers/create",{"_index":686,"title":{},"body":{"classes/CreateUserHandler.html":{},"coverage.html":{}}}],["src/user/commands/handlers/fetch",{"_index":775,"title":{},"body":{"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":648,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":1750,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":796,"title":{},"body":{"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{},"entities/Student.html":{},"modules/StudentModule.html":{},"entities/Teacher.html":{},"modules/TeacherModule.html":{}}}],["src/user/entities/user.entity.ts",{"_index":1753,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":1756,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:20",{"_index":1763,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:27",{"_index":1758,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:35",{"_index":1759,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":1755,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":1761,"title":{},"body":{"entities/User.html":{}}}],["src/user/exceptions/create",{"_index":654,"title":{},"body":{"classes/CreateUserException.html":{},"coverage.html":{}}}],["src/user/exceptions/duplicate",{"_index":746,"title":{},"body":{"classes/DuplicateUserException.html":{},"coverage.html":{}}}],["src/user/http/controllers/user.controller.ts",{"_index":1766,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/http/controllers/user.controller.ts:39",{"_index":1771,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:49",{"_index":1772,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:54",{"_index":1774,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:59",{"_index":1773,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:64",{"_index":1776,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:69",{"_index":1775,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/exception",{"_index":661,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["src/user/http/requests/create",{"_index":713,"title":{},"body":{"classes/CreateUserRequest.html":{},"coverage.html":{}}}],["src/user/http/services/user.service",{"_index":868,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["src/user/http/services/user.service.ts",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/http/services/user.service.ts:100",{"_index":1835,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:13",{"_index":1824,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:31",{"_index":1830,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:38",{"_index":1831,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:42",{"_index":1832,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:46",{"_index":1833,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:50",{"_index":1834,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:56",{"_index":1826,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:79",{"_index":1828,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:90",{"_index":1836,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/types",{"_index":601,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["src/user/types.ts",{"_index":1978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/user.module",{"_index":843,"title":{},"body":{"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/TeacherModule.html":{}}}],["src/user/user.module.ts",{"_index":1813,"title":{},"body":{"modules/UserModule.html":{}}}],["src/utils/enums/contact.enum.ts",{"_index":1965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/gender.enum.ts",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/status.enum.ts",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/user",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/images.utils.ts",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/password.generator.ts",{"_index":1897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2012,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2015,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2017,"title":{},"body":{"index.html":{}}}],["started",{"_index":1992,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2004,"title":{},"body":{"index.html":{}}}],["state",{"_index":12,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/TeacherService.html":{}}}],["statements",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":441,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["status",{"_index":681,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/HealthController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["statuscode",{"_index":1140,"title":{},"body":{"controllers/MarksController.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["statusenum",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2037,"title":{},"body":{"index.html":{}}}],["storage.provider",{"_index":429,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storage.provider.ts",{"_index":1871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage/jwt.storage",{"_index":431,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storage/token.storage",{"_index":350,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["strategy",{"_index":734,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/FetchUserByIdCommand.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":296,"title":{"entities/Student.html":{}},"body":{"injectables/AttendanceLogService.html":{},"entities/Class.html":{},"entities/FinalAttendance.html":{},"modules/FinalAttendanceModule.html":{},"injectables/FinalAttendanceService.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["student's",{"_index":303,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["student.controller",{"_index":1425,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.dto",{"_index":1397,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateStudentDto.html":{}}}],["student.dto.ts",{"_index":579,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["student.dto.ts:10",{"_index":589,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:11",{"_index":593,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:12",{"_index":594,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:13",{"_index":588,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:14",{"_index":599,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:15",{"_index":596,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:16",{"_index":597,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:5",{"_index":591,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:6",{"_index":595,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:7",{"_index":592,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:8",{"_index":590,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:9",{"_index":598,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.firstname",{"_index":1227,"title":{},"body":{"injectables/MarksService.html":{}}}],["student.id",{"_index":1226,"title":{},"body":{"injectables/MarksService.html":{}}}],["student.lastname",{"_index":1228,"title":{},"body":{"injectables/MarksService.html":{}}}],["student.service",{"_index":1396,"title":{},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{}}}],["student/student.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["student_id",{"_index":565,"title":{},"body":{"classes/CreateMarkDto.html":{},"injectables/MarksService.html":{}}}],["student_mis",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["studentcontroller",{"_index":1364,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentid",{"_index":247,"title":{},"body":{"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["studentmodule",{"_index":155,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentname",{"_index":1250,"title":{},"body":{"injectables/MarksService.html":{}}}],["studentname,classname",{"_index":1256,"title":{},"body":{"injectables/MarksService.html":{}}}],["studentname,classname,academicyear",{"_index":1254,"title":{},"body":{"injectables/MarksService.html":{}}}],["studentrepository",{"_index":1435,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":272,"title":{"injectables/StudentService.html":{}},"body":{"injectables/AttendanceLogService.html":{},"injectables/FinalAttendanceService.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["sub",{"_index":1053,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["subject",{"_index":1083,"title":{"entities/Subject.html":{}},"body":{"entities/Marks.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"coverage.html":{}}}],["subject.controller",{"_index":1550,"title":{},"body":{"modules/SubjectModule.html":{}}}],["subject.dto",{"_index":1533,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"classes/UpdateSubjectDto.html":{}}}],["subject.dto.ts",{"_index":604,"title":{},"body":{"classes/CreateSubjectDto.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["subject.dto.ts:11",{"_index":609,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.dto.ts:14",{"_index":610,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.dto.ts:5",{"_index":611,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.dto.ts:8",{"_index":607,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.fullmarks",{"_index":1232,"title":{},"body":{"injectables/MarksService.html":{}}}],["subject.id",{"_index":1210,"title":{},"body":{"injectables/MarksService.html":{}}}],["subject.passmarks",{"_index":1205,"title":{},"body":{"injectables/MarksService.html":{}}}],["subject.service",{"_index":1532,"title":{},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{}}}],["subject.subjectname",{"_index":1230,"title":{},"body":{"injectables/MarksService.html":{}}}],["subject/subject.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["subject_id",{"_index":1618,"title":{},"body":{"entities/Teacher.html":{}}}],["subjectcontroller",{"_index":1515,"title":{"controllers/SubjectController.html":{}},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"coverage.html":{}}}],["subjectid",{"_index":1184,"title":{},"body":{"injectables/MarksService.html":{}}}],["subjectinfo",{"_index":1696,"title":{},"body":{"injectables/TeacherService.html":{}}}],["subjectinfo.classid",{"_index":1699,"title":{},"body":{"injectables/TeacherService.html":{}}}],["subjectinfo.subjectname",{"_index":1701,"title":{},"body":{"injectables/TeacherService.html":{}}}],["subjectmodule",{"_index":156,"title":{"modules/SubjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarksModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules.html":{},"overview.html":{}}}],["subjectname",{"_index":566,"title":{},"body":{"classes/CreateMarkDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/MarksService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["subjectrepository",{"_index":1556,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subjects",{"_index":621,"title":{},"body":{"classes/CreateTeacherDto.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["subjects.push(newsubject",{"_index":1579,"title":{},"body":{"injectables/SubjectService.html":{}}}],["subjectservice",{"_index":1177,"title":{"injectables/SubjectService.html":{}},"body":{"injectables/MarksService.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":829,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{}}}],["successfully",{"_index":826,"title":{},"body":{"controllers/FinalAttendanceController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["successfully')@apibody({type",{"_index":1770,"title":{},"body":{"controllers/UserController.html":{}}}],["super",{"_index":738,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["super(message",{"_index":659,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["super(props",{"_index":1809,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["supplied",{"_index":720,"title":{},"body":{"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{}}}],["support",{"_index":2030,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":1451,"title":{},"body":{"injectables/StudentService.html":{}}}],["svg",{"_index":2048,"title":{},"body":{"modules.html":{}}}],["svg|svg|jpg|jpeg|png|jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('ignoredpropertyname",{"_index":1319,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1030,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["table",{"_index":1614,"title":{},"body":{"entities/Teacher.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1321,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["teacher",{"_index":1590,"title":{"entities/Teacher.html":{}},"body":{"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["teacher.controller",{"_index":1653,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":1635,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":615,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:10",{"_index":634,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:11",{"_index":627,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:12",{"_index":626,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:13",{"_index":639,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:14",{"_index":633,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:15",{"_index":635,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:16",{"_index":622,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:17",{"_index":623,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:18",{"_index":636,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:19",{"_index":640,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:20",{"_index":624,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:21",{"_index":638,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:4",{"_index":628,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:5",{"_index":631,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:6",{"_index":629,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:7",{"_index":625,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:8",{"_index":632,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:9",{"_index":630,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.service",{"_index":1634,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher.subjects.push(subject",{"_index":1705,"title":{},"body":{"injectables/TeacherService.html":{}}}],["teacher/teacher.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["teacher_id",{"_index":1615,"title":{},"body":{"entities/Teacher.html":{}}}],["teacher_subject",{"_index":1605,"title":{},"body":{"entities/Teacher.html":{}}}],["teachercontroller",{"_index":1620,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teachermodule",{"_index":157,"title":{"modules/TeacherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeacherModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":1660,"title":{},"body":{"injectables/TeacherService.html":{}}}],["teacherservice",{"_index":1633,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["terminusmodule",{"_index":1010,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covsupport",{"_index":2022,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2021,"title":{},"body":{"index.html":{}}}],["test@1234",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["testdate",{"_index":877,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["testdb",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["tests",{"_index":2019,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":2028,"title":{},"body":{"index.html":{}}}],["this.addressrepository.delete(id",{"_index":137,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.find",{"_index":130,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.findone",{"_index":131,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.save(addressdto",{"_index":129,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.update(id",{"_index":136,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.create",{"_index":1676,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.addressservice.create(addressdto",{"_index":81,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findall",{"_index":82,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.findone(id",{"_index":84,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.remove(id",{"_index":88,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.update(id",{"_index":86,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.appservice.gethello",{"_index":144,"title":{},"body":{"controllers/AppController.html":{}}}],["this.attendancelogrepository",{"_index":310,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogrepository.create(createattendancelogdto",{"_index":288,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogrepository.create(dto",{"_index":292,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogrepository.delete",{"_index":319,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogrepository.find",{"_index":316,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogrepository.findone",{"_index":318,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogrepository.save(attendancelog",{"_index":289,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.attendancelogservice.create(createattendancelogdto",{"_index":256,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.attendancelogservice.createall(createattendancelogdtoarray",{"_index":258,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.attendancelogservice.findall",{"_index":259,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.attendancelogservice.findbydate(date",{"_index":261,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.attendancelogservice.findbydate(testdate",{"_index":886,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["this.attendancelogservice.findbydate(today.todate",{"_index":885,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["this.attendancelogservice.findbyusername(username",{"_index":265,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.attendancelogservice.getattendancelogbystudentid(studentid",{"_index":263,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.attendancelogservice.remove(username",{"_index":268,"title":{},"body":{"controllers/AttendanceLogController.html":{}}}],["this.bcrypt.hashpassword(command.data.password",{"_index":710,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["this.bcrypt.hashpassword(data.password",{"_index":1855,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bcryptservice.verifycredentials(user",{"_index":745,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["this.classrepository.delete(id",{"_index":515,"title":{},"body":{"injectables/ClassService.html":{}}}],["this.classrepository.find",{"_index":509,"title":{},"body":{"injectables/ClassService.html":{}}}],["this.classrepository.findone",{"_index":510,"title":{},"body":{"injectables/ClassService.html":{}}}],["this.classrepository.save(createclassdto",{"_index":508,"title":{},"body":{"injectables/ClassService.html":{}}}],["this.classrepository.update(id",{"_index":514,"title":{},"body":{"injectables/ClassService.html":{}}}],["this.classservice.create(createclassdto",{"_index":483,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.findall",{"_index":484,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.findone(id",{"_index":485,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.findonebyclassname(classname",{"_index":1501,"title":{},"body":{"injectables/StudentService.html":{},"injectables/SubjectService.html":{}}}],["this.classservice.findonebyclassname(createstudentdto.class",{"_index":1461,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.classservice.findonebyclassname(createsubjectdto.class",{"_index":1568,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.classservice.remove(id",{"_index":487,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.update(id",{"_index":486,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.commandbus.execute(new",{"_index":1794,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.fail(401",{"_index":1076,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.finalattendancerepository",{"_index":911,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["this.finalattendanceservice.aggregateattendance(username",{"_index":828,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["this.finalattendanceservice.aggregateattendancedata",{"_index":823,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["this.finalattendanceservice.getfinalattendancebystudentid(studentid",{"_index":836,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["this.finalattendanceservice.gettopattendeesbyclass",{"_index":833,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["this.finalattendanceservice.gettotalattendancebyclassanddate",{"_index":834,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["this.findexistingmark(student_id",{"_index":1209,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.findone(id",{"_index":133,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ClassService.html":{},"injectables/SubjectService.html":{}}}],["this.hashpassword(user.password",{"_index":460,"title":{},"body":{"classes/BcryptService.html":{}}}],["this.health.check",{"_index":992,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('base",{"_index":993,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice",{"_index":1055,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.jwtservice.sign(user",{"_index":367,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.jwtservice.signasync",{"_index":1056,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":1059,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.marksrepository",{"_index":1290,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.create",{"_index":1213,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.createquerybuilder(\"mark",{"_index":1222,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.createquerybuilder('marks",{"_index":1271,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.delete(id",{"_index":1305,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.find",{"_index":1304,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.findone",{"_index":1266,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.save(existingmark",{"_index":1219,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksrepository.save(mark",{"_index":1214,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.marksservice.create(createmarkdto",{"_index":1133,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.createall(createmarkdtos",{"_index":1139,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.findall",{"_index":1144,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.findmarksbyclassid(classid",{"_index":1153,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.findmarksbystudentid(studentid",{"_index":1146,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.findone(id",{"_index":1160,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.getpercentagebystudentid(studentid",{"_index":1158,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.passpercentagebysubject",{"_index":1159,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.remove(id",{"_index":1161,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.update(id",{"_index":1155,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.updatemarksbystudentid(createmarkdto",{"_index":1136,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":1001,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":1007,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.mongodbhealth.pingcheck('database",{"_index":996,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.studentrepository",{"_index":1483,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.count",{"_index":1481,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.create",{"_index":1462,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.createquerybuilder(\"student",{"_index":1477,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.createquerybuilder(\"user",{"_index":1503,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.createquerybuilder('student",{"_index":1480,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.delete(id",{"_index":1507,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.save(createdstudents",{"_index":1476,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.save(student",{"_index":1473,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentservice.countstudentsbyclass",{"_index":1408,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.counttotalstudents",{"_index":1407,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.create(createstudentdto",{"_index":1402,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.createall(createstudentdto",{"_index":1405,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.findall",{"_index":1406,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.findbyclassid(classid",{"_index":1410,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.findone(id",{"_index":1417,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.findone(student_id",{"_index":1198,"title":{},"body":{"injectables/MarksService.html":{}}}],["this.studentservice.findone(studentid",{"_index":299,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["this.studentservice.findonebyusername(username",{"_index":1416,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.getgendercountbyclass",{"_index":1411,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.gettopattendeesbyclass",{"_index":1414,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.gettotalgendercount",{"_index":1412,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.remove(id",{"_index":1419,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.update(id",{"_index":1418,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.subjectrepository",{"_index":1581,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.create",{"_index":1571,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.delete(id",{"_index":1589,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.find",{"_index":1584,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.findone",{"_index":1587,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.save(newsubject",{"_index":1577,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.save(subjects",{"_index":1580,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectrepository.update(id",{"_index":1588,"title":{},"body":{"injectables/SubjectService.html":{}}}],["this.subjectservice.create(createsubjectdto",{"_index":1536,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.createall(createsubjectdto",{"_index":1537,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.findall",{"_index":1538,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.findbyclassid(classid",{"_index":1539,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.findbysubjectnameandclassid(subjectinfo.subjectname",{"_index":1698,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.subjectservice.findbysubjectnameandclassid(subjectname",{"_index":1200,"title":{},"body":{"injectables/MarksService.html":{},"controllers/SubjectController.html":{}}}],["this.subjectservice.findone(id",{"_index":1542,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.remove(id",{"_index":1544,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.update(id",{"_index":1543,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.success(user",{"_index":1078,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.teacherrepository.create",{"_index":1682,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.createquerybuilder(\"teacher",{"_index":1708,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.createquerybuilder(\"user",{"_index":1712,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.delete(id",{"_index":1714,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.save(createdteachers",{"_index":1707,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.save(savedteacher",{"_index":1703,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.save(teacher",{"_index":1693,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":1640,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.createall(createteacherdto",{"_index":1644,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":1645,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findone(id",{"_index":1646,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.remove(id",{"_index":1648,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.update(+id",{"_index":1647,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.tokenstorage",{"_index":1072,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.tokenstorage.generatetoken",{"_index":402,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.tokenstorage.generatetoken(req.user",{"_index":378,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.tokenstorage.validatetoken(token",{"_index":1077,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.userrepository",{"_index":739,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["this.userrepository.create",{"_index":1838,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user",{"_index":1853,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user\").getmany",{"_index":1847,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(id",{"_index":1856,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":1848,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":376,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail",{"_index":1062,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.userrepository.insert",{"_index":708,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["this.userrepository.save(user",{"_index":1842,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create",{"_index":1457,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["this.userservice.create(body",{"_index":1796,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(createuserdto",{"_index":1797,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":1798,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":1800,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findonebyusername(log.username",{"_index":893,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["this.userservice.findonebyusername(username",{"_index":1799,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":1802,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":1801,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":390,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["throwerror",{"_index":764,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":1719,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(1000",{"_index":1721,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":1720,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1715,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":217,"title":{},"body":{"entities/AttendanceLog.html":{}}}],["title",{"_index":680,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["today",{"_index":873,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["todo",{"_index":381,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["token",{"_index":374,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}}}],["token.storage",{"_index":1051,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["token_expiry",{"_index":1035,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["token_type",{"_index":1036,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenbody",{"_index":1052,"title":{"interfaces/TokenBody.html":{}},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{}}}],["tokenbody.sub",{"_index":1063,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenbody.type",{"_index":1060,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenguard",{"_index":1724,"title":{"injectables/TokenGuard.html":{}},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["tokenstorage",{"_index":349,"title":{"interfaces/TokenStorage.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorageprovider",{"_index":427,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokentype",{"_index":384,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["tomorrow",{"_index":875,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["total",{"_index":889,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalabsentees",{"_index":933,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalattendance",{"_index":918,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalattendance.push",{"_index":946,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalattendancebydate",{"_index":924,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalattendancebydate.totalabsentees",{"_index":952,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalattendancebydate.totalattendees",{"_index":951,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalattendees",{"_index":931,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["totalfullmarks",{"_index":1277,"title":{},"body":{"injectables/MarksService.html":{}}}],["totalhours",{"_index":783,"title":{},"body":{"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{}}}],["totalitems",{"_index":1021,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["totalmarks",{"_index":1275,"title":{},"body":{"injectables/MarksService.html":{}}}],["totalpages",{"_index":1023,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["totalstudents",{"_index":1296,"title":{},"body":{"injectables/MarksService.html":{}}}],["touch",{"_index":2038,"title":{},"body":{"index.html":{}}}],["transform.interceptor",{"_index":530,"title":{},"body":{"modules/CoreModule.html":{},"controllers/HealthController.html":{}}}],["transform.interceptor.ts",{"_index":1309,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["transform.interceptor.ts:29",{"_index":1310,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["transformer",{"_index":1611,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transport",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.console",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.file",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggered",{"_index":825,"title":{},"body":{"controllers/FinalAttendanceController.html":{}}}],["true",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"entities/AttendanceLog.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/MarksController.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn",{"_index":1358,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["true})@jointable({name",{"_index":1604,"title":{},"body":{"entities/Teacher.html":{}}}],["try",{"_index":388,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/FinalAttendanceController.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"classes/NestJwtStrategy.html":{}}}],["ts",{"_index":1074,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["twitter",{"_index":2044,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"entities/Address.html":{},"controllers/AddressController.html":{},"injectables/AddressService.html":{},"modules/AppModule.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"entities/Class.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"entities/Marks.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2059,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":28,"title":{},"body":{"entities/Address.html":{},"injectables/AddressService.html":{},"entities/AttendanceLog.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"entities/Class.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"entities/Marks.html":{},"injectables/MarksService.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"entities/Subject.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":977,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":107,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([address",{"_index":110,"title":{},"body":{"modules/AddressModule.html":{}}}],["typeormmodule.forfeature([attendancelog]),studentmodule",{"_index":327,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["typeormmodule.forfeature([class",{"_index":494,"title":{},"body":{"modules/ClassModule.html":{}}}],["typeormmodule.forfeature([finalattendance",{"_index":846,"title":{},"body":{"modules/FinalAttendanceModule.html":{}}}],["typeormmodule.forfeature([marks]),subjectmodule,studentmodule",{"_index":1170,"title":{},"body":{"modules/MarksModule.html":{}}}],["typeormmodule.forfeature([student",{"_index":1430,"title":{},"body":{"modules/StudentModule.html":{}}}],["typeormmodule.forfeature([subject]),classmodule",{"_index":1552,"title":{},"body":{"modules/SubjectModule.html":{}}}],["typeormmodule.forfeature([teacher,user]),usermodule,subjectmodule,addressmodule",{"_index":1656,"title":{},"body":{"modules/TeacherModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":434,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":646,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"entities/User.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2003,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":733,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":744,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["undefined",{"_index":337,"title":{},"body":{"controllers/AuthenticationController.html":{},"entities/FinalAttendance.html":{},"entities/Marks.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["unique",{"_index":1764,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":2018,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":121,"title":{},"body":{"injectables/AddressService.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"injectables/ClassService.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":2058,"title":{},"body":{"properties.html":{}}}],["update",{"_index":44,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@body",{"_index":1134,"title":{},"body":{"controllers/MarksController.html":{}}}],["update(@param('id",{"_index":85,"title":{},"body":{"controllers/AddressController.html":{},"controllers/ClassController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["update(createmarkdto",{"_index":1120,"title":{},"body":{"controllers/MarksController.html":{}}}],["update(id",{"_index":61,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id:string",{"_index":1498,"title":{},"body":{"injectables/StudentService.html":{}}}],["update(student",{"_index":1504,"title":{},"body":{"injectables/StudentService.html":{}}}],["update(teacher",{"_index":1713,"title":{},"body":{"injectables/TeacherService.html":{}}}],["update(user",{"_index":1854,"title":{},"body":{"injectables/UserService.html":{}}}],["updateaddressdto",{"_index":1728,"title":{"classes/UpdateAddressDto.html":{}},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["updateattendancedto",{"_index":1732,"title":{"classes/UpdateAttendanceDto.html":{}},"body":{"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["updateclassdto",{"_index":479,"title":{"classes/UpdateClassDto.html":{}},"body":{"controllers/ClassController.html":{},"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["updated",{"_index":1221,"title":{},"body":{"injectables/MarksService.html":{},"injectables/TeacherService.html":{}}}],["updatedat",{"_index":1339,"title":{},"body":{"entities/Student.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":1353,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["updatedmark",{"_index":1135,"title":{},"body":{"controllers/MarksController.html":{}}}],["updatefinalattendancedto",{"_index":1737,"title":{"classes/UpdateFinalAttendanceDto.html":{}},"body":{"classes/UpdateFinalAttendanceDto.html":{},"coverage.html":{}}}],["updatemarkdto",{"_index":1123,"title":{"classes/UpdateMarkDto.html":{}},"body":{"controllers/MarksController.html":{},"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["updatemarksbyid",{"_index":1099,"title":{},"body":{"controllers/MarksController.html":{}}}],["updatemarksbyid(@param('id",{"_index":1154,"title":{},"body":{"controllers/MarksController.html":{}}}],["updatemarksbyid(id",{"_index":1122,"title":{},"body":{"controllers/MarksController.html":{}}}],["updatemarksbystudentid",{"_index":1175,"title":{},"body":{"injectables/MarksService.html":{}}}],["updatemarksbystudentid(createmarkdto",{"_index":1194,"title":{},"body":{"injectables/MarksService.html":{}}}],["updatestudentdto",{"_index":1394,"title":{"classes/UpdateStudentDto.html":{}},"body":{"controllers/StudentController.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["updatesubjectdto",{"_index":1530,"title":{"classes/UpdateSubjectDto.html":{}},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["updateteacherdto",{"_index":1631,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1749,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["use",{"_index":997,"title":{},"body":{"controllers/HealthController.html":{},"injectables/UserService.html":{}}}],["useclass",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefilters",{"_index":1777,"title":{},"body":{"controllers/UserController.html":{}}}],["usefilters(new",{"_index":1785,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards",{"_index":343,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(authguard(\"local",{"_index":368,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(undefined)@post('/authentication')@apibody({schema",{"_index":336,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user",{"_index":297,"title":{"entities/User.html":{}},"body":{"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"injectables/ClassService.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"entities/FinalAttendance.html":{},"injectables/FinalAttendanceService.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"entities/Student.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.command",{"_index":700,"title":{},"body":{"classes/CreateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":643,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:3",{"_index":645,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["user.dto",{"_index":1752,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":649,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:4",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":650,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.exception",{"_index":663,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["user.exception.ts",{"_index":655,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{},"coverage.html":{}}}],["user.exception.ts:1",{"_index":658,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["user.handler",{"_index":1818,"title":{},"body":{"modules/UserModule.html":{}}}],["user.handler.ts",{"_index":687,"title":{},"body":{"classes/CreateUserHandler.html":{},"coverage.html":{}}}],["user.handler.ts:10",{"_index":691,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["user.handler.ts:17",{"_index":693,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["user.id",{"_index":403,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["user.password",{"_index":404,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"injectables/DatabaseStrategy.html":{}}}],["user.raw[0",{"_index":1471,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["user.request",{"_index":1782,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.request.ts",{"_index":714,"title":{},"body":{"classes/CreateUserRequest.html":{},"coverage.html":{}}}],["user.request.ts:14",{"_index":716,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.request.ts:21",{"_index":721,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.request.ts:9",{"_index":722,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.username",{"_index":304,"title":{},"body":{"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"injectables/DatabaseStrategy.html":{}}}],["user/entities/user.entity",{"_index":348,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"classes/UserDetailResponse.html":{}}}],["user/user.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":1765,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":1793,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userdetailresponse",{"_index":352,"title":{"classes/UserDetailResponse.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/UserDetailResponse.html":{},"coverage.html":{}}}],["userid",{"_index":772,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["usermodule",{"_index":158,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usermodule,classmodule",{"_index":1431,"title":{},"body":{"modules/StudentModule.html":{}}}],["username",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"entities/AttendanceLog.html":{},"controllers/AttendanceLogController.html":{},"injectables/AttendanceLogService.html":{},"controllers/AuthenticationController.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"controllers/FinalAttendanceController.html":{},"injectables/FinalAttendanceService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userpassword",{"_index":411,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":360,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":851,"title":{"injectables/UserService.html":{}},"body":{"injectables/FinalAttendanceService.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertypeenum",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validate",{"_index":729,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["validate(username",{"_index":731,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["validatetoken",{"_index":1039,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenStorage.html":{}}}],["validatetoken(token",{"_index":1044,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["validationerrors",{"_index":1018,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"miscellaneous/typealiases.html":{}}}],["validator",{"_index":540,"title":{},"body":{"classes/CreateAddressDto.html":{},"classes/CreateAttendanceLogDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateUserRequest.html":{},"dependencies.html":{}}}],["value",{"_index":448,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1488,"title":{},"body":{"injectables/StudentService.html":{}}}],["variable",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2061,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifycredentials",{"_index":445,"title":{},"body":{"classes/BcryptService.html":{}}}],["verifycredentials(user",{"_index":455,"title":{},"body":{"classes/BcryptService.html":{}}}],["version",{"_index":2057,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":2013,"title":{},"body":{"index.html":{}}}],["website",{"_index":2042,"title":{},"body":{"index.html":{}}}],["went",{"_index":1150,"title":{},"body":{"controllers/MarksController.html":{}}}],["where(\"class.id",{"_index":1251,"title":{},"body":{"injectables/MarksService.html":{}}}],["where(\"student.id",{"_index":1235,"title":{},"body":{"injectables/MarksService.html":{}}}],["where(\"teacher.id",{"_index":1711,"title":{},"body":{"injectables/TeacherService.html":{}}}],["where(\"user.id=:id",{"_index":1506,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["where('attendancelog.username",{"_index":312,"title":{},"body":{"injectables/AttendanceLogService.html":{}}}],["where('class.id",{"_index":1491,"title":{},"body":{"injectables/StudentService.html":{}}}],["where('finalattendance.date",{"_index":934,"title":{},"body":{"injectables/FinalAttendanceService.html":{}}}],["where('marks.student",{"_index":1278,"title":{},"body":{"injectables/MarksService.html":{}}}],["where('student.id",{"_index":962,"title":{},"body":{"injectables/FinalAttendanceService.html":{},"injectables/StudentService.html":{}}}],["where('subject.subjectname",{"_index":1585,"title":{},"body":{"injectables/SubjectService.html":{}}}],["where('user.username",{"_index":741,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/StudentService.html":{}}}],["winston",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["winston.format.simple",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":208,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":1151,"title":{},"body":{"controllers/MarksController.html":{}}}],["yarn",{"_index":2007,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1807,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["you'd",{"_index":2033,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"entities/Address.html":{},"classes/CreateAddressDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/TeacherService.html":{}}}],["zoom",{"_index":101,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/FinalAttendanceModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Address.html":{"url":"entities/Address.html","title":"entity - Address","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/entities/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/entities/address.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        \nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Address {\n  @PrimaryGeneratedColumn()\n  id:string;\n\n  @Column()\n  address: string;\n\n  @Column()\n  city: string;\n\n  @Column()\n  state: string;\n\n  @Column()\n  zipCode: string;\n\n  @Column()\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressController.html":{"url":"controllers/AddressController.html","title":"controller - AddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                address\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(addressDto: CreateAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, addressDto: CreateAddressDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/address/address.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateAddressDto } from './dto/create-address.dto';\n\n@Controller('address')\n@ApiTags('Address')\nexport class AddressController {\n  constructor(private readonly addressService: AddressService) {}\n\n  @Post()\n  create(@Body() addressDto: CreateAddressDto) {\n    return this.addressService.create(addressDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.addressService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.addressService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() addressDto: CreateAddressDto) {\n    return this.addressService.update(id, addressDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.addressService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressModule.html":{"url":"modules/AddressModule.html","title":"module - AddressModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_exports\n\n\n\ncluster_AddressModule_providers\n\n\n\n\nAddressService \n\nAddressService \n\n\n\nAddressModule\n\nAddressModule\n\nAddressService  -->\n\nAddressModule->AddressService \n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/address/address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { AddressController } from './address.controller';\nimport { Address } from './entities/address.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Address])],\n  controllers: [AddressController],\n  providers: [AddressService],\n  exports: [AddressService]\n})\nexport class AddressModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/address/address.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(addressDto: CreateAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, addressDto: CreateAddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/address/address.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addressDto\n                                            \n                                                            CreateAddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Address } from './entities/address.entity';\nimport { CreateAddressDto } from './dto/create-address.dto';\n\n\n@Injectable()\nexport class AddressService {\n  constructor(\n    @InjectRepository(Address)\n    private addressRepository: Repository,\n  ) {}\n\n  async create(addressDto: CreateAddressDto) {\n    return this.addressRepository.save(addressDto);\n  }\n\n  async findAll() {\n    return this.addressRepository.find();\n  }\n\n  async findOne(id: string) {\n    return this.addressRepository.findOne({ where: { id: id } });\n  }\n\n  async update(id: string, addressDto: CreateAddressDto) {\n    await this.findOne(id); // Check if address exists\n    return this.addressRepository.update(id, addressDto);\n  }\n\n  async remove(id: string) {\n    await this.addressRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\nAppModule -->\n\nAttendanceModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nClassModule\n\nClassModule\n\nAppModule -->\n\nClassModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFinalAttendanceModule\n\nFinalAttendanceModule\n\nAppModule -->\n\nFinalAttendanceModule->AppModule\n\n\n\n\n\nMarksModule\n\nMarksModule\n\nAppModule -->\n\nMarksModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nAppModule -->\n\nSubjectModule->AppModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nAppModule -->\n\nTeacherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            AttendanceModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            ClassModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FinalAttendanceModule\n                        \n                        \n                            MarksModule\n                        \n                        \n                            StudentModule\n                        \n                        \n                            SubjectModule\n                        \n                        \n                            TeacherModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CoreModule } from './core/core.module';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { TeacherModule } from './teacher/teacher.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { StudentModule } from './student/student.module';\nimport { ClassModule } from './class/class.module';\nimport { SubjectModule } from './subject/subject.module';\nimport { AttendanceModule } from './attendance/attendance.module';\nimport { MarksModule } from './marks/marks.module';\nimport dbconfig from './config/database.config';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { FinalAttendanceModule } from './final_attendance/final_attendance.module';\nimport { AddressModule } from './address/address.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(\n      {\n        type: 'postgres',\n        host: '110.44.123.230',\n        port: 5432,\n        username: 'test',\n        password: 'test@1234',\n        database: 'testdb',\n        synchronize: true,\n        autoLoadEntities: true,\n      }\n    ),\n    MulterModule.register({\n      dest: './files',\n    }),\n    ScheduleModule.forRoot(),\n    ConfigModule.forRoot(),\n    CoreModule,\n    UserModule,\n    TeacherModule,\n    AuthenticationModule,\n    StudentModule,\n    ClassModule,\n    SubjectModule,\n    AttendanceModule,\n    MarksModule,\n    AddressModule,\n    FinalAttendanceModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n\n// {\n//   type: 'postgres',\n//   host: '110.44.123.230',\n//   port: 5432,\n//   username: 'test',\n//   password: 'test@1234',\n//   database: 'testdb',\n//   // entities: ['../**/*.entity.{ts,js}'],\n//   synchronize: true,\n//   autoLoadEntities: true,\n// }\n\n\n\n// TypeOrmModule.forRoot(\n//   {\n//     type: 'postgres',\n//     host: 'localhost',\n//     port: 5432,\n//     username: 'postgres',\n//     password: 'minor@1234',\n//     database: 'student_mis',\n//     // entities: ['../**/*.entity.{ts,js}'],\n//     synchronize: true,\n//     autoLoadEntities: true,\n//   }\n// ),\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AttendanceLog.html":{"url":"entities/AttendanceLog.html","title":"entity - AttendanceLog","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AttendanceLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/entities/attendance.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                entrytime\n                            \n                            \n                                    \n                                exittime\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/entities/attendance.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        entrytime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/entities/attendance.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        exittime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/entities/attendance.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/entities/attendance.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryColumn, Column } from 'typeorm';\n\n@Entity()\nexport class AttendanceLog {\n  @PrimaryColumn()\n  username: string;\n\n  @PrimaryColumn({ type: 'date' })\n  date: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  entrytime: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  exittime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AttendanceLogController.html":{"url":"controllers/AttendanceLogController.html","title":"controller - AttendanceLogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AttendanceLogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/attendance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                attendance-logs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                createAll\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findbyDate\n                            \n                            \n                                    \n                                    Async\n                                findByUsername\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAttendanceLogDto: CreateAttendanceLogDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAttendanceLogDto\n                                            \n                                                            CreateAttendanceLogDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createAttendanceLogDtoArray: CreateAttendanceLogDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('all-attendance')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAttendanceLogDtoArray\n                                            \n                                                            CreateAttendanceLogDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findbyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findbyDate(date: Date)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byDate/:Date')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byusername/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(studentid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('student/:studentid')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(username: string, date: Date)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username/:date')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // attendance-log.controller.ts\n\nimport { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\nimport { AttendanceLogService } from './attendance.service';\nimport { CreateAttendanceLogDto } from './dto/create-attendance.dto';\n\n\n@Controller('attendance-logs')\nexport class AttendanceLogController {\n  constructor(private readonly attendanceLogService: AttendanceLogService) {}\n\n  @Post()\n  async create(@Body() createAttendanceLogDto: CreateAttendanceLogDto){\n    return this.attendanceLogService.create(createAttendanceLogDto);\n  }\n\n  @Post('all-attendance')\n  async createAll(@Body() createAttendanceLogDtoArray: CreateAttendanceLogDto[]) {\n    return this.attendanceLogService.createAll(createAttendanceLogDtoArray);\n  }\n\n  @Get()\n  async findAll(){\n    return this.attendanceLogService.findAll();\n  }\n\n  @Get('byDate/:Date')\n  async findbyDate(@Param('Date') date: Date){\n    return this.attendanceLogService.findByDate(date);\n  }\n\n  @Get('student/:studentid')\n  async findOne(@Param('studentid') studentid: string,){\n    return this.attendanceLogService.getAttendanceLogByStudentId(studentid);\n  }\n\n  @Get('byusername/:username')\n  async findByUsername(@Param('username') username: string) {\n    return this.attendanceLogService.findByUsername(username);\n  }\n  \n  @Delete(':username/:date')\n  async remove(@Param('username') username: string, @Param('date') date: Date) {\n    return this.attendanceLogService.remove(username, date);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttendanceLogService.html":{"url":"injectables/AttendanceLogService.html","title":"injectable - AttendanceLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttendanceLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/attendance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAll\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByDate\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                getAttendanceLogByStudentId\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attendanceLogRepository: Repository, studentService: StudentService)\n                    \n                \n                        \n                            \n                                Defined in src/attendance/attendance.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attendanceLogRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAttendanceLogDto: CreateAttendanceLogDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAttendanceLogDto\n                                            \n                                                            CreateAttendanceLogDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createAttendanceLogDtoArray: CreateAttendanceLogDto[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAttendanceLogDtoArray\n                                            \n                                                            CreateAttendanceLogDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAttendanceLogByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAttendanceLogByStudentId(studentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(username: string, date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAttendanceLogDto } from './dto/create-attendance.dto';\nimport { AttendanceLog } from './entities/attendance.entity';\nimport { StudentService } from 'src/student/student.service';\n\n\n@Injectable()\nexport class AttendanceLogService {\n  constructor(\n    @InjectRepository(AttendanceLog)\n    private attendanceLogRepository: Repository,\n    private readonly studentService: StudentService,\n\n  ) {}\n\n  async create(createAttendanceLogDto: CreateAttendanceLogDto) {\n    const attendanceLog = this.attendanceLogRepository.create(createAttendanceLogDto);\n    return this.attendanceLogRepository.save(attendanceLog);\n  }\n\n  async createAll(createAttendanceLogDtoArray: CreateAttendanceLogDto[]){\n    const createdAttendanceLogs = [];\n    for (const dto of createAttendanceLogDtoArray) {\n      const attendanceLog = this.attendanceLogRepository.create(dto);\n      const createdAttendanceLog = await this.attendanceLogRepository.save(attendanceLog);\n      createdAttendanceLogs.push(createdAttendanceLog);\n    }\n    return createdAttendanceLogs;\n  }\n\n  async getAttendanceLogByStudentId(studentId: string) {\n    // Retrieve student with class and user information\n    const student = await this.studentService.findOne(studentId);\n    if (!student) {\n      // Handle student not found\n      return null;\n    }\n\n    // Retrieve username from the student's user entity\n    const { user } = student;\n    const username = user ? user.username : null;\n\n    // Query attendance log records based on the retrieved username\n    return this.attendanceLogRepository\n    .createQueryBuilder('attendanceLog')\n    .where('attendanceLog.username = :username', { username })\n    .orderBy('attendanceLog.date', 'DESC')\n    .getMany();\n  }\n\n  async findByUsername(username: string) {\n    return this.attendanceLogRepository\n      .createQueryBuilder('attendanceLog')\n      .where('attendanceLog.username = :username', { username })\n      .getMany();\n  }\n\n\n  async findAll() {\n    return this.attendanceLogRepository.find();\n  }\n\n  async findByDate(date: Date){\n    return this.attendanceLogRepository.find({ where: { date: date } });\n  }\n  // async findOne(username: string, date: Date): Promise {\n  //   return this.attendanceLogRepository.findOne({ username, date });\n  // }\n\n\n  async remove(username: string, date: Date): Promise {\n    await this.attendanceLogRepository.delete({ username, date });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AttendanceModule.html":{"url":"modules/AttendanceModule.html","title":"module - AttendanceModule","body":"\n                   \n\n\n\n\n    Modules\n    AttendanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AttendanceModule\n\n\n\ncluster_AttendanceModule_providers\n\n\n\ncluster_AttendanceModule_exports\n\n\n\ncluster_AttendanceModule_imports\n\n\n\n\nStudentModule\n\nStudentModule\n\n\n\nAttendanceModule\n\nAttendanceModule\n\nAttendanceModule -->\n\nStudentModule->AttendanceModule\n\n\n\n\n\nAttendanceLogService \n\nAttendanceLogService \n\nAttendanceLogService  -->\n\nAttendanceModule->AttendanceLogService \n\n\n\n\n\nAttendanceLogService\n\nAttendanceLogService\n\nAttendanceModule -->\n\nAttendanceLogService->AttendanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/attendance/attendance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AttendanceLogService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AttendanceLogController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StudentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AttendanceLogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AttendanceLogController } from './attendance.controller';\nimport { AttendanceLogService } from './attendance.service';\nimport { AttendanceLog } from './entities/attendance.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { StudentModule } from 'src/student/student.module';\n\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AttendanceLog]),StudentModule],\n  controllers: [AttendanceLogController],\n  providers: [AttendanceLogService],\n  exports: [AttendanceLogService]\n})\nexport class AttendanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/controllers/authentication.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _createToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    _createToken(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('/authentication')@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Req\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpException, HttpStatus, Inject, Post, Request, UseGuards } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport * as bcrypt from \"bcrypt\";\n\nimport { ApiBody, ApiTags } from \"@nestjs/swagger\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\nimport { Req } from \"../../../core/http/request/request\";\nimport { UserDetailResponse } from \"../response/user-detail.response\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@ApiTags(\"Authentication\")\n@Controller()\nexport class AuthenticationController {\n  constructor(\n    private jwtService: JwtService,\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage,\n    @InjectRepository(User)\n    private readonly userRepository: Repository\n  ) {\n  }\n  private _createToken({ data }): any {\n    const expiresIn = '15d';\n    const secret = \"secretkey\";\n    const user = { data };\n    const accessToken = this.jwtService.sign(user);\n    return {\n      secret,\n      expiresIn,\n      accessToken,\n    };\n  }\n\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"/authentication\")\n  @ApiBody({\n    schema: {\n      type: \"object\",\n      properties: {\n        username: {\n          type: \"string\"\n        },\n        password: {\n          type: \"string\"\n        }\n      }\n    }\n  })\n  async login(@Request() req: Req) {\n    console.log(req.user)\n    const [user, token] = await Promise.all([\n      await this.userRepository.findOne({ where: { id: req.user.id } }),\n      this.tokenStorage.generateToken(req.user)\n    ]);\n    return {\n      user: new UserDetailResponse({\n        ...user\n      }),\n      accessToken: token,\n      refreshToken: token, // Todo: will implement later\n      tokenType: \"bearer\"\n    };\n  }\n  // async login(@Request() req: Req) {\n  //   console.log('req.user:', req.user);\n  //    try {\n  //     if (!req.user || !req.user.username) {\n  //       throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n  //     }\n  \n  //     const [user, token] = await Promise.all([\n  //       await this.userRepository.findOne({ where: { id: req.user.id } }),\n  //       this.tokenStorage.generateToken(req.user)\n  //     ]);\n  \n  //     if (!user) {\n  //       throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n  //     }\n  \n  //     return {\n  //       user: new UserDetailResponse({\n  //         ...user\n  //       }),\n  //       accessToken: token,\n  //       refreshToken: token, // Todo: will implement later\n  //       tokenType: \"bearer\"\n  //     };\n  //   } catch (error) {\n  //     throw new HttpException('Authentication failed', HttpStatus.UNAUTHORIZED);\n  //   }\n  // }\n\n//   @Post(\"/me\")\n//   @ApiBody({\n//     schema: {\n//       type: \"object\",\n//       properties: {\n//         username: {\n//           type: \"string\"\n//         },\n//         password: {\n//           type: \"string\"\n//         }\n//       }\n//     }\n//   })\n//   async loginUser(req) {\n//     const user = await this.userRepository.findOne({ where: { username: req.username } });\n//     const token = await this.tokenStorage.generateToken({\n//       data: {\n//         id: user.id,\n//         username: user.username,\n//         password: user.password\n//       }\n//     });\n\n\n\n//     if (!user) {\n//       throw new HttpException(\"User not found\", HttpStatus.UNAUTHORIZED);\n//     }\n\n\n//     const areEqual = await comparePasswords(user.password, req.password);\n\n//     if (!areEqual) {\n//       throw new HttpException(\n//         \"Username or password is incorrect\",\n//         HttpStatus.UNAUTHORIZED\n//       );\n//     } else {\n//       return {\n//         user: new UserDetailResponse({\n//           ...user\n//         }),\n//         accessToken: token,\n//         refreshToken: token, // Todo: will implement later\n//         tokenType: \"bearer\"\n//       };\n//     }\n//   }\n// }\n\n}\nexport const comparePasswords = async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nCoreModule->AuthenticationModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nAuthenticationModule->BcryptService \n\n\n\n\n\nJwtStorage \n\nJwtStorage \n\nJwtStorage  -->\n\nAuthenticationModule->JwtStorage \n\n\n\n\n\nDatabaseStrategy\n\nDatabaseStrategy\n\nAuthenticationModule -->\n\nDatabaseStrategy->AuthenticationModule\n\n\n\n\n\nJwtStorage\n\nJwtStorage\n\nAuthenticationModule -->\n\nJwtStorage->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseStrategy\n                        \n                        \n                            JwtStorage\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BcryptService\n                        \n                        \n                            JwtStorage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { User } from \"../user/entities/user.entity\";\nimport { NestJwtStrategy } from \"./passport/strategy/jwt.strategy\";\nimport { AuthenticationController } from \"./http/controllers/authentication.controller\";\nimport { BcryptService } from \"./services/bcrypt.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TokenStorageProvider } from \"./providers/token-storage.provider\";\nimport { DatabaseStrategy } from \"./passport/strategy/database.strategy\";\nimport { CoreModule } from \"../core/core.module\";\nimport { JwtStorage } from \"./storage/jwt.storage\";\nimport { CqrsModule } from \"@nestjs/cqrs\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Module({\n  imports: [CqrsModule, TypeOrmModule.forFeature([User]), CoreModule, PassportModule.register({ defaultStrategy: \"jwt\" })],\n  providers: [DatabaseStrategy,JwtService, NestJwtStrategy, TokenStorageProvider, BcryptService, JwtStorage],\n  controllers: [AuthenticationController],\n  exports: [BcryptService, JwtStorage]\n})\nexport class AuthenticationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BcryptService.html":{"url":"classes/BcryptService.html","title":"class - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/services/bcrypt.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                SALT_ROUNDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                            \n                                    Async\n                                hashUserPassword\n                            \n                            \n                                verifyCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        SALT_ROUNDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in src/authentication/services/bcrypt.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n            \n                \nhashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashUserPassword(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCredentials\n                        \n                    \n                \n            \n            \n                \nverifyCredentials(user: User, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { User } from '../../user/entities/user.entity';\n\nexport class BcryptService {\n  private static readonly SALT_ROUNDS: number = 7;\n\n  verifyCredentials(user: User, password: string): Promise {\n    return bcrypt.compare(password, user.password);\n  }\n\n  hashPassword(password: string): Promise {\n    return bcrypt.hash(password, BcryptService.SALT_ROUNDS);\n  }\n\n  async hashUserPassword(user: User): Promise {\n    return {\n      ...user,\n      password: await this.hashPassword(user.password),\n    } as User;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Class.html":{"url":"entities/Class.html","title":"entity - Class","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Class\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/entities/class.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                className\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/class/entities/class.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/class/entities/class.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { Student } from 'src/student/entities/student.entity';\n\n@Entity()\nexport class Class{\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @Column()\n  className: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassController.html":{"url":"controllers/ClassController.html","title":"controller - ClassController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/class.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createClassDto: CreateClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createClassDto\n                                            \n                                                            CreateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, createClassDto: CreateClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createClassDto\n                                            \n                                                            CreateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ClassService } from './class.service';\nimport { CreateClassDto } from './dto/create-class.dto';\nimport { UpdateClassDto } from './dto/update-class.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('class')\n@ApiTags('Class')\nexport class ClassController {\n  constructor(private readonly classService: ClassService) {}\n\n  @Post()\n  create(@Body() createClassDto: CreateClassDto) {\n    return this.classService.create(createClassDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.classService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.classService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() createClassDto: CreateClassDto) {\n    return this.classService.update(id, createClassDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.classService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassModule.html":{"url":"modules/ClassModule.html","title":"module - ClassModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassModule\n\n\n\ncluster_ClassModule_exports\n\n\n\ncluster_ClassModule_providers\n\n\n\n\nClassService \n\nClassService \n\n\n\nClassModule\n\nClassModule\n\nClassService  -->\n\nClassModule->ClassService \n\n\n\n\n\nClassService\n\nClassService\n\nClassModule -->\n\nClassService->ClassModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/class/class.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClassService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Class } from './entities/class.entity';\nimport { ClassController } from './class.controller';\nimport { ClassService } from './class.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Class])],\n  controllers: [ClassController],\n  providers: [ClassService],\n  exports: [ClassService]\n})\nexport class ClassModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassService.html":{"url":"injectables/ClassService.html","title":"injectable - ClassService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/class.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByClassName\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(classRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/class/class.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        classRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createClassDto: CreateClassDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createClassDto\n                                            \n                                                            CreateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByClassName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByClassName(className: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                className\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, createClassDto: CreateClassDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createClassDto\n                                            \n                                                            CreateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Class } from './entities/class.entity';\nimport { CreateClassDto } from './dto/create-class.dto';\n\n@Injectable()\nexport class ClassService {\n  constructor(\n    @InjectRepository(Class)\n    private classRepository: Repository,\n  ) {}\n\n  async create(createClassDto: CreateClassDto) {\n    return this.classRepository.save(createClassDto);\n  }\n\n  async findAll() {\n    return this.classRepository.find();\n  }\n\n  async findOne(id: string) {\n    return this.classRepository.findOne({ where: { id: id } });\n  }\n\n  async findOneByClassName(className:string){\n    return this.classRepository.findOne({ where: { className: className } });\n  }\n\n  async update(id: string, createClassDto: CreateClassDto) {\n    await this.findOne(id); // Check if user details exist\n    return this.classRepository.update(id, createClassDto);\n  }\n\n  async remove(id: string) {\n    await this.classRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/controller.ts/core.controllers.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                health\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        health\n                        \n                    \n                \n            \n            \n                \n                        \n                    health()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/health')\n                \n            \n\n                    \n                        \n                            Defined in src/core/http/controller.ts/core.controllers.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Core API')\n@Controller()\nexport class CoreController {\n  @Get('/health')\n  health() {\n    return {\n      message: 'All good!',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nResponseTransformInterceptor\n\nResponseTransformInterceptor\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nResponseTransformInterceptor->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResponseTransformInterceptor\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResponseTransformInterceptor } from './http/interceptors/response-transform.interceptor';\nimport { CoreController } from './http/controller.ts/core.controllers';\n\n@Module({\n  imports: [],\n  providers: [ResponseTransformInterceptor],\n  controllers: [CoreController],\n  exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAddressDto.html":{"url":"classes/CreateAddressDto.html","title":"class - CreateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/dto/create-address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/dto/create-address.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class CreateAddressDto {\n  \n  @IsString()\n  address: string;\n  \n  @IsString()\n  city: string;\n  \n  @IsString()\n  state: string;\n  \n  @IsString()\n  zipCode: string;\n  \n  @IsString()\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAttendanceLogDto.html":{"url":"classes/CreateAttendanceLogDto.html","title":"class - CreateAttendanceLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAttendanceLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/dto/create-attendance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                entrytime\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                exittime\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/create-attendance.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        entrytime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/create-attendance.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        exittime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/create-attendance.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attendance/dto/create-attendance.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDateString, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateAttendanceLogDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  date: string;\n\n  @IsOptional()\n  @IsDateString()\n  entrytime?: string;\n\n  @IsOptional()\n  @IsDateString()\n  exittime?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClassDto.html":{"url":"classes/CreateClassDto.html","title":"class - CreateClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/dto/create-class.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                className\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/class/dto/create-class.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class CreateClassDto {\n    @IsString()\n    className: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFinalAttendanceDto.html":{"url":"classes/CreateFinalAttendanceDto.html","title":"class - CreateFinalAttendanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFinalAttendanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/final_attendance/dto/create-final_attendance.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFinalAttendanceDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMarkDto.html":{"url":"classes/CreateMarkDto.html","title":"class - CreateMarkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMarkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/dto/create-mark.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                academicYear\n                            \n                            \n                                    \n                                    \n                                classId\n                            \n                            \n                                    \n                                marksObtained\n                            \n                            \n                                    \n                                student_id\n                            \n                            \n                                    \n                                subjectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        academicYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/dto/create-mark.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/dto/create-mark.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        marksObtained\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/dto/create-mark.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        student_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/dto/create-mark.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/dto/create-mark.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsEnum, IsString } from 'class-validator';\nimport { ResultEnum } from 'src/common/enums/result.enum';\n\n\nexport class CreateMarkDto {\n  @IsNotEmpty()\n  student_id: string;\n\n  @IsString()\n  subjectName: string;\n\n  @IsString()\n  @IsNotEmpty()\n  classId: string;\n\n  @IsInt()\n  academicYear: number;\n\n  @IsInt()\n  marksObtained: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStudentDto.html":{"url":"classes/CreateStudentDto.html","title":"class - CreateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dto/create-student.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                class\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                guardianName\n                            \n                            \n                                guardianPhone\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                rollNo\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardianName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardianPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Class } from \"src/class/entities/class.entity\";\nimport { Role } from \"src/user/types\";\n\nexport class CreateStudentDto {\n  firstName: string;\n  lastName: string;\n  gender: string;\n  dateOfBirth: Date;\n  rollNo: string;\n  class: string;\n  guardianName: string;\n  guardianPhone: string;\n  address: string;\n  username: string;\n  password: string;\n  readonly role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubjectDto.html":{"url":"classes/CreateSubjectDto.html","title":"class - CreateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/dto/create-subject.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                fullMarks\n                            \n                            \n                                    \n                                passMarks\n                            \n                            \n                                    \n                                subjectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/dto/create-subject.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullMarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/dto/create-subject.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passMarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/dto/create-subject.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/dto/create-subject.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber } from \"class-validator\";\n\nexport class CreateSubjectDto {\n    @IsString()\n    subjectName: string;\n\n    @IsString()\n    class: string; // Assuming class is also a string\n\n    @IsNumber()\n    fullMarks: number;\n\n    @IsNumber()\n    passMarks: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/dto/create-teacher.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                experience\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                joiningDate\n                            \n                            \n                                lastName\n                            \n                            \n                                mobile\n                            \n                            \n                                password\n                            \n                            \n                                qualification\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                state\n                            \n                            \n                                subjects\n                            \n                            \n                                username\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joiningDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"src/user/types\";\n\nexport class CreateTeacherDto {\n  firstName: string;\n  lastName: string;\n  gender: string;\n  dateOfBirth: Date;\n  mobile: string;\n  joiningDate: Date;\n  qualification: string;\n  experience: number;\n  email: string;\n  username: string;\n  password: string;\n  readonly role: Role;\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  country: string;\n  subjects: {subjectName: string; classId: string}[]\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/create-user.command.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../types\";\n\nexport class CreateUserCommand {\n  constructor(\n    readonly data: {\n      readonly username: string;\n      readonly password: string;\n      readonly role: Role;\n    },\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../types\";\n\nexport class CreateUserDto {\n    username: string;\n    password: string;\n    role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserException.html":{"url":"classes/CreateUserException.html","title":"class - CreateUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/exceptions/create-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/exceptions/create-user.exception.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserException extends Error {\n  constructor(message = 'Could not create user.') {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserExceptionFilter.html":{"url":"classes/CreateUserExceptionFilter.html","title":"class - CreateUserExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/exception-filters/create-user.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: CreateUserException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/exception-filters/create-user.exception-filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            CreateUserException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { CreateUserException } from '../../exceptions/create-user.exception';\nimport { IErrorBody } from '../../../core/http/response/types';\n\n@Catch(CreateUserException)\nexport class CreateUserExceptionFilter implements ExceptionFilter {\n  catch(exception: CreateUserException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      title: 'Could not create user',\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      detail: exception.message,\n    } as IErrorBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserHandler.html":{"url":"classes/CreateUserHandler.html","title":"class - CreateUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/handlers/create-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcrypt: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/handlers/create-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcrypt\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/commands/handlers/create-user.handler.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateUserCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entities/user.entity';\nimport { BcryptService } from '../../../authentication/services/bcrypt.service';\nimport { DuplicateUserException } from '../../exceptions/duplicate-user.exception';\nimport { CreateUserCommand } from '../create-user.command';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly bcrypt: BcryptService,\n  ) {}\n\n  async execute(command: CreateUserCommand): Promise {\n    if (await this.userRepository.findOne({ where: { username: command.data.username } })) {\n      throw new DuplicateUserException('Username already exists');\n    }\n\n    // if (command.data.phone && (await this.userRepository.findOne({ where: { phone: command.data.phone } }))) {\n    //   throw new DuplicateUserException('Phone number already exists');\n    // }\n\n    const user = await this.userRepository.insert({ ...command.data, password: await this.bcrypt.hashPassword(command.data.password) });\n    console.log(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRequest.html":{"url":"classes/CreateUserRequest.html","title":"class - CreateUserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/requests/create-user.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty({enum: Role})@IsEnum(Role, {message: 'Invalid role supplied'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from '../../types';\n\nexport class  CreateUserRequest {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty()\n  readonly password: string;\n\n  @IsNotEmpty()\n  @ApiProperty({ enum: Role })\n  @IsEnum(Role, {\n    message: 'Invalid role supplied',\n  })\n  readonly role: Role;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseStrategy.html":{"url":"injectables/DatabaseStrategy.html","title":"injectable - DatabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/database.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcryptService: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/passport/strategy/database.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptService\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/passport/strategy/database.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { User } from '../../../user/entities/user.entity';\nimport { BcryptService } from '../../services/bcrypt.service';\n\n\n\n@Injectable()\nexport class DatabaseStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly bcryptService: BcryptService,\n  ) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.userRepository\n      .createQueryBuilder('user')\n      .where('user.username = :username', {\n        username,\n      })\n      .select(['user.id', 'user.username', 'user.password'])\n      .getOne();\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid username or password supplied');\n    }\n\n    if (await this.bcryptService.verifyCredentials(user, password)) {\n      return user;\n    }\n\n    throw new UnauthorizedException('Invalid username or password supplied');\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUserException.html":{"url":"classes/DuplicateUserException.html","title":"class - DuplicateUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/exceptions/duplicate-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/exceptions/duplicate-user.exception.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DuplicateUserException extends Error {\n  constructor(message = 'User already exists') {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUserExceptionFilter.html":{"url":"classes/DuplicateUserExceptionFilter.html","title":"class - DuplicateUserExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUserExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/exception-filters/duplicate-user.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: DuplicateUserException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/exception-filters/duplicate-user.exception-filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            DuplicateUserException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { DuplicateUserException } from '../../exceptions/duplicate-user.exception';\nimport { IErrorBody } from '../../../core/http/response/types';\n\n@Catch(DuplicateUserException)\nexport class DuplicateUserExceptionFilter implements ExceptionFilter {\n  catch(exception: DuplicateUserException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      title: 'Duplicate user',\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      detail: exception.message,\n    } as IErrorBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionInterceptor.html":{"url":"injectables/ExceptionInterceptor.html","title":"injectable - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/exception.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/exception.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadGatewayException,\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(catchError((err) => throwError(() => new BadGatewayException())));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserByIdCommand.html":{"url":"classes/FetchUserByIdCommand.html","title":"class - FetchUserByIdCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserByIdCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/fetch-user-by-id.command.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/fetch-user-by-id.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FetchUserByIdCommand{\n  constructor(readonly userId: string) {\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserByIdHandler.html":{"url":"classes/FetchUserByIdHandler.html","title":"class - FetchUserByIdHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserByIdHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/handlers/fetch-user-by-id.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: FetchUserByIdCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/commands/handlers/fetch-user-by-id.command.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            FetchUserByIdCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from \"@nestjs/cqrs\";\nimport { FetchUserByIdCommand } from \"../fetch-user-by-id.command\";\n\n@CommandHandler(FetchUserByIdCommand)\nclass FetchUserByIdHandler implements ICommandHandler{\n  async execute(command: FetchUserByIdCommand): Promise {\n    return null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FinalAttendance.html":{"url":"entities/FinalAttendance.html","title":"entity - FinalAttendance","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FinalAttendance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/final_attendance/entities/final_attendance.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attendance\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                remark\n                            \n                            \n                                    \n                                    \n                                student\n                            \n                            \n                                    \n                                totalHours\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attendance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttendanceEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AttendanceEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/final_attendance/entities/final_attendance.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/final_attendance/entities/final_attendance.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/final_attendance/entities/final_attendance.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remark\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/final_attendance/entities/final_attendance.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/final_attendance/entities/final_attendance.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/final_attendance/entities/final_attendance.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // final-attendance.entity.ts\nimport { AttendanceEnum } from 'src/common/enums/attendance.enum';\nimport { Student } from 'src/student/entities/student.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, JoinColumn, OneToOne, ManyToOne, ManyToMany } from 'typeorm';\n\n@Entity()\nexport class FinalAttendance {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'date' })\n  date: Date;\n\n  @Column({\n    type: 'enum',\n    enum: AttendanceEnum,\n    default: AttendanceEnum.ABSENT,\n  })\n  attendance: AttendanceEnum;\n\n  @Column({ nullable: true })\n  totalHours: number;\n\n  @Column({ nullable: true })\n  remark: string;\n\n  @ManyToOne(() => Student)\n  @JoinColumn()\n  student: Student;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FinalAttendanceController.html":{"url":"controllers/FinalAttendanceController.html","title":"controller - FinalAttendanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FinalAttendanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/final_attendance/final_attendance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                final-attendance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                aggregateAttendanceData\n                            \n                            \n                                    \n                                    Async\n                                aggregateAttendanceDataManually\n                            \n                            \n                                    \n                                    Async\n                                getAttendanceByDateAndClass\n                            \n                            \n                                    \n                                    Async\n                                getFinalAttendanceByStudentId\n                            \n                            \n                                    \n                                    Async\n                                getTopAttendeesByClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        aggregateAttendanceData\n                        \n                    \n                \n            \n            \n                \n                        \n                    aggregateAttendanceData(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('aggregate/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        aggregateAttendanceDataManually\n                        \n                    \n                \n            \n            \n                \n                        \n                    aggregateAttendanceDataManually()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('aggregate')\n                \n            \n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAttendanceByDateAndClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAttendanceByDateAndClass()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('AttendanceByDateAndClass')\n                \n            \n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFinalAttendanceByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFinalAttendanceByStudentId(studentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('student/:studentId')\n                \n            \n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTopAttendeesByClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTopAttendeesByClass()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('top-attendance')\n                \n            \n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post } from '@nestjs/common';\nimport { FinalAttendanceService } from './final_attendance.service';\n\n@Controller('final-attendance')\nexport class FinalAttendanceController {\n  constructor(private readonly finalAttendanceService: FinalAttendanceService) {}\n\n  @Get('aggregate')\n  async aggregateAttendanceDataManually(){\n    await this.finalAttendanceService.aggregateAttendanceData();\n    return 'Attendance aggregation triggered successfully!';\n  }\n\n  @Post('aggregate/:username')\n  async aggregateAttendanceData(@Param('username') username: string) {\n    try {\n      await this.finalAttendanceService.aggregateAttendance(username);\n      return { success: true, message: 'Attendance data aggregated successfully.' };\n    } catch (error) {\n      return { success: false, message: 'Failed to aggregate attendance data.', error };\n    }\n  }\n  @Get('top-attendance')\n  async getTopAttendeesByClass(){\n    return await this.finalAttendanceService.getTopAttendeesByClass(); \n  }\n\n  @Get('AttendanceByDateAndClass')\n  async getAttendanceByDateAndClass(){\n    return await this.finalAttendanceService.getTotalAttendanceByClassAndDate();\n  }\n\n  @Get('student/:studentId')\n  async getFinalAttendanceByStudentId(@Param('studentId') studentId: string) {\n    return this.finalAttendanceService.getFinalAttendanceByStudentId(studentId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FinalAttendanceModule.html":{"url":"modules/FinalAttendanceModule.html","title":"module - FinalAttendanceModule","body":"\n                   \n\n\n\n\n    Modules\n    FinalAttendanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FinalAttendanceModule\n\n\n\ncluster_FinalAttendanceModule_providers\n\n\n\ncluster_FinalAttendanceModule_imports\n\n\n\ncluster_FinalAttendanceModule_exports\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nFinalAttendanceModule\n\nFinalAttendanceModule\n\nFinalAttendanceModule -->\n\nAttendanceModule->FinalAttendanceModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nFinalAttendanceModule -->\n\nStudentModule->FinalAttendanceModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nFinalAttendanceModule -->\n\nUserModule->FinalAttendanceModule\n\n\n\n\n\nFinalAttendanceService \n\nFinalAttendanceService \n\nFinalAttendanceService  -->\n\nFinalAttendanceModule->FinalAttendanceService \n\n\n\n\n\nFinalAttendanceService\n\nFinalAttendanceService\n\nFinalAttendanceModule -->\n\nFinalAttendanceService->FinalAttendanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/final_attendance/final_attendance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FinalAttendanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FinalAttendanceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttendanceModule\n                        \n                        \n                            StudentModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FinalAttendanceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FinalAttendanceService } from './final_attendance.service';\nimport { FinalAttendanceController } from './final_attendance.controller';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { UserModule } from 'src/user/user.module';\nimport { AttendanceModule } from 'src/attendance/attendance.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FinalAttendance } from './entities/final_attendance.entity';\nimport { Student } from 'src/student/entities/student.entity';\nimport { StudentModule } from 'src/student/student.module';\n\n@Module({\n  imports: [ScheduleModule.forRoot(), TypeOrmModule.forFeature([FinalAttendance]), AttendanceModule, UserModule, StudentModule],\n  controllers: [FinalAttendanceController],\n  providers: [FinalAttendanceService],\n  exports: [FinalAttendanceService],\n})\nexport class FinalAttendanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FinalAttendanceService.html":{"url":"injectables/FinalAttendanceService.html","title":"injectable - FinalAttendanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FinalAttendanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/final_attendance/final_attendance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                aggregateAttendance\n                            \n                            \n                                    \n                                    Async\n                                aggregateAttendanceData\n                            \n                            \n                                    Async\n                                getFinalAttendanceByStudentId\n                            \n                            \n                                    Async\n                                getTopAttendeesByClass\n                            \n                            \n                                    Async\n                                getTotalAttendanceByClassAndDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(finalAttendanceRepository: Repository, attendancelogService: AttendanceLogService, userService: UserService, studentService: StudentService)\n                    \n                \n                        \n                            \n                                Defined in src/final_attendance/final_attendance.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        finalAttendanceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attendancelogService\n                                                  \n                                                        \n                                                                        AttendanceLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        aggregateAttendance\n                        \n                    \n                \n            \n            \n                \n                        \n                    aggregateAttendance(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        aggregateAttendanceData\n                        \n                    \n                \n            \n            \n                \n                        \n                    aggregateAttendanceData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 0 * * *')\n                \n            \n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFinalAttendanceByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFinalAttendanceByStudentId(studentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.service.ts:310\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTopAttendeesByClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTopAttendeesByClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.service.ts:208\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalAttendanceByClassAndDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalAttendanceByClassAndDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/final_attendance/final_attendance.service.ts:251\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { LessThan, MoreThanOrEqual, Repository } from 'typeorm';\nimport { Cron } from '@nestjs/schedule';\nimport * as moment from 'moment';\nimport { AttendanceLog } from 'src/attendance/entities/attendance.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { FinalAttendance } from './entities/final_attendance.entity';\nimport { AttendanceEnum } from 'src/common/enums/attendance.enum';\nimport { Role } from 'src/user/types';\nimport { AttendanceLogService } from 'src/attendance/attendance.service';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { Student } from 'src/student/entities/student.entity';\nimport { StudentService } from 'src/student/student.service';\n\n@Injectable()\nexport class FinalAttendanceService {\n  constructor(\n    @InjectRepository(FinalAttendance)\n    private readonly finalAttendanceRepository: Repository,\n    private readonly attendancelogService: AttendanceLogService,\n    private readonly userService: UserService,\n    private readonly studentService: StudentService,\n\n  ) {} \n\n  @Cron('0 0 * * *') // Runs at midnight every day\n//   async aggregateAttendanceData() {\n//     const today = moment().startOf('day');\n//     const tomorrow = moment(today).add(1, 'day');\n//     const testdate =new Date('2024-02-05')\n\n//     if(testdate.getDay() !== 6){\n//     // Retrieve all attendance logs for the current day\n//     // const attendanceLogs = await this.attendancelogService.findByDate(today.toDate(),);\n//     const attendanceLogs = await this.attendancelogService.findByDate(testdate);\n\n//     // Process attendance logs and calculate total hours spent\n//     for (const log of attendanceLogs) {\n//       // Find the user based on the username\n//       const user = await this.userService.findOneByUsername(log.username)\n    \n//       if (user) {\n//         // const totalHours = moment(log.exittime).diff(moment(log.entrytime), 'hours', true);\n//         const totalHours = Math.round(moment(log.exittime).diff(moment(log.entrytime), 'hours', true));\n//         const attendance = totalHours >= 5 ? AttendanceEnum.PRESENT : AttendanceEnum.ABSENT;\n//         const remark = totalHours = 5 ? AttendanceEnum.PRESENT : AttendanceEnum.ABSENT;\n          const remark = totalHours = 5 ? AttendanceEnum.PRESENT : AttendanceEnum.ABSENT;\n    const remark = totalHours  {\n    const className = record.classname;\n    console.log('className',record)\n    if (!groupedResults[className]) {\n      groupedResults[className] = [];\n    }\n    groupedResults[className].push({\n      studentId: record.studentid,\n      firstName: record.firstname,\n      lastName: record.lastname,\n      presentCount: record.presentcount,\n      absentCount: record.absentcount\n    });\n  });\n\n  return groupedResults;\n}\n\nasync getTotalAttendanceByClassAndDate() {\n  const dates = await this.finalAttendanceRepository\n    .createQueryBuilder('finalAttendance')\n    .select('DISTINCT finalAttendance.date', 'date')\n    .orderBy('finalAttendance.date', 'ASC')\n    .getRawMany();\n\n  const totalAttendance = [];\n\n  for (const dateRecord of dates) {\n    const date = dateRecord.date;\n\n    // Count total attendees and absentees for the current date\n    const totalAttendanceByDate = await this.finalAttendanceRepository\n      .createQueryBuilder('finalAttendance')\n      .select([\n        'finalAttendance.date AS \"date\"',\n        'COUNT(CASE WHEN finalAttendance.attendance = :present THEN 1 END) AS \"totalAttendees\"',\n        'COUNT(CASE WHEN finalAttendance.attendance = :absent THEN 1 END) AS \"totalAbsentees\"',\n      ])\n      .where('finalAttendance.date = :date', { date: date })\n      .groupBy('finalAttendance.date')\n      .setParameters({ present: 'PRESENT', absent: 'ABSENT', date: date })\n      .getRawOne();\n\n    // Calculate total attendees and absentees for each class on the current date\n    const attendanceByDateAndClass = await this.finalAttendanceRepository\n      .createQueryBuilder('finalAttendance')\n      .leftJoin('finalAttendance.student', 'student')\n      .leftJoin('student.class', 'classEntity')\n      .select([\n        'classEntity.className AS \"className\"',\n        'COUNT(CASE WHEN finalAttendance.attendance = :present THEN 1 END) AS \"presentCount\"',\n        'COUNT(CASE WHEN finalAttendance.attendance = :absent THEN 1 END) AS \"absentCount\"',\n      ])\n      .where('finalAttendance.date = :date', { date: date })\n      .groupBy('classEntity.className')\n      .orderBy('classEntity.className', 'ASC')\n      .setParameters({ present: 'PRESENT', absent: 'ABSENT', date: date })\n      .getRawMany();\n\n    totalAttendance.push({\n      date: new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toISOString().substring(0, 10),\n      totalAttendees: totalAttendanceByDate.totalAttendees || 0,\n      totalAbsentees: totalAttendanceByDate.totalAbsentees || 0,\n      attendanceByClass: attendanceByDateAndClass.reduce((acc, curr) => {\n        const className = curr.className;\n        acc[className] = {\n          presentCount: parseInt(curr.presentCount),\n          absentCount: parseInt(curr.absentCount),\n        };\n        return acc;\n      }, {}),\n    });\n  }\n\n  return totalAttendance;\n}\n\nasync getFinalAttendanceByStudentId(studentId: string) {\n  return this.finalAttendanceRepository\n    .createQueryBuilder('finalAttendance')\n    .leftJoinAndSelect('finalAttendance.student', 'student')\n    .where('student.id = :studentId', { studentId })\n    .orderBy('finalAttendance.date', 'DESC') // Sorting by date in descending order\n    .getMany();\n}\n\n\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Backend Health status retrieved'})@ResponseMessage('Backend Health status retrieved')@HealthCheck()@ResponseTransformInterceptorIgnore()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  MongooseHealthIndicator,\n  TypeOrmHealthIndicator,\n  DiskHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\nimport { ResponseTransformInterceptorIgnore } from '../core/http/interceptors/response-transform.interceptor';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\n\n@ApiTags('Health Check')\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private mongoDBHealth: MongooseHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Backend Health status retrieved' })\n  @ResponseMessage(\"Backend Health status retrieved\")\n  @HealthCheck()\n  @ResponseTransformInterceptorIgnore()\n  check() {\n    // return this.health.check([() => this.http.pingCheck('base-OKR', 'http://localhost:3002')]);\n    return this.health.check([\n      () => this.mongoDBHealth.pingCheck('database'),\n      // the process should not use more than 300MB memory\n      () =>\n        this.memoryHealthIndicator.checkHeap('memory heap', 300 * 1024 * 1024),\n      // The process should not have more than 300MB RSS memory allocated\n      () =>\n        this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorBody.html":{"url":"interfaces/IErrorBody.html","title":"interface - IErrorBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validationErrors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationErrors:         ValidationErrors\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidationErrors\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemsBody.html":{"url":"interfaces/ItemsBody.html","title":"interface - ItemsBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemsBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStorage.html":{"url":"injectables/JwtStorage.html","title":"injectable - JwtStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/jwt.storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                jwtService\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TOKEN_EXPIRY\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TOKEN_TYPE\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateToken\n                            \n                            \n                                    Public\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/storage/jwt.storage.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/storage/jwt.storage.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/storage/jwt.storage.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        jwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtService\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TOKEN_EXPIRY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '7 days'\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TOKEN_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authentication'\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { TokenStorage } from './token.storage';\n\ninterface TokenBody {\n  readonly type: string;\n  readonly sub: string;\n}\n\n@Injectable()\nexport class JwtStorage implements TokenStorage {\n  private static readonly TOKEN_EXPIRY = '7 days';\n  private static readonly TOKEN_TYPE = 'authentication';\n\n  private readonly jwtService: JwtService;\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  constructor(\n    @Inject(JwtService)\n    jwtService: JwtService,\n    @InjectRepository(User)\n    userRepository: Repository,\n  ) {\n    this.jwtService = jwtService;\n    this.userRepository = userRepository;\n  }\n\n  public async generateToken(user: User): Promise {\n    return this.jwtService.signAsync(\n      {\n        type: JwtStorage.TOKEN_TYPE,\n        sub: user.id,\n      } as TokenBody,\n      {\n        expiresIn: JwtStorage.TOKEN_EXPIRY,\n        secret: 'secretkey'\n      },\n    );\n  }\n\n  public async validateToken(token: string): Promise {\n    const tokenBody: TokenBody = await this.jwtService.verifyAsync(token);\n    if (tokenBody.type !== JwtStorage.TOKEN_TYPE) {\n      throw new Error('Invalid token');\n    }\n\n    return this.userRepository.findOneOrFail({ where: { id: tokenBody.sub } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Strategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/passport/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/passport/strategy/jwt.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from \"passport-strategy\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { Request } from \"express\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\n\n@Injectable()\nexport class JwtStrategy extends Strategy {\n  constructor(\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage\n  ) { \n    super();\n    this.tokenStorage = tokenStorage;\n  }\n\n  public async authenticate(req: Request): Promise {\n    const token: string | null = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n\n    if (!token) {\n      // @ts-ignore\n      return this.fail(401);\n    }\n\n    try {\n      const user: User = await this.tokenStorage.validateToken(token);\n      // @ts-ignore\n      this.success(user);\n\n    } catch {\n      // @ts-ignore\n      this.fail(401);\n    }\n  }\n}\n\nexport class NestJwtStrategy extends PassportStrategy(JwtStrategy, \"jwt\") {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Marks.html":{"url":"entities/Marks.html","title":"entity - Marks","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Marks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/entities/mark.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                academicYear\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                marksObtained\n                            \n                            \n                                    \n                                result\n                            \n                            \n                                    \n                                    \n                                student\n                            \n                            \n                                    \n                                    \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        academicYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/entities/mark.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/entities/mark.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        marksObtained\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/entities/mark.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResultEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ResultEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/entities/mark.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Student\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/entities/mark.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/marks/entities/mark.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        // marks.entity.ts\n\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn } from 'typeorm';\nimport { Student } from 'src/student/entities/student.entity';\nimport { Subject } from 'src/subject/entities/subject.entity';\nimport { ResultEnum } from 'src/common/enums/result.enum';\n\n@Entity()\nexport class Marks {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => Student)\n  @JoinColumn()\n  student: Student;\n\n  @ManyToOne(() => Subject)\n  @JoinColumn()\n  subject: Subject;\n\n  @Column()\n  academicYear: number;\n\n  @Column()\n  marksObtained: number;\n\n  @Column({\n    type: 'enum',\n    enum: ResultEnum,\n    default: ResultEnum.FAIL,\n  })\n  result: ResultEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MarksController.html":{"url":"controllers/MarksController.html","title":"controller - MarksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MarksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/marks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                marks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    Async\n                                createAll\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findMarksByStudentId\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getMarksByClassId\n                            \n                            \n                                    \n                                    Async\n                                getPassPercentageBySubject\n                            \n                            \n                                    \n                                    Async\n                                getPercentageByStudentId\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    \n                                    Async\n                                updateMarksById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMarkDto: CreateMarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createMarkDtos: CreateMarkDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('allmarks')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDtos\n                                            \n                                                            CreateMarkDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findMarksByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMarksByStudentId(studentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('student/:studentId')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMarksByClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMarksByClassId(classId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('class/:classId')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPassPercentageBySubject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPassPercentageBySubject()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pass-percentage-by-subject')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPercentageByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPercentageByStudentId(studentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('percentage/:studentId')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(createMarkDto: CreateMarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateMarksById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMarksById(id: string, updateMarkDto: CreateMarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // mark.controller.ts\n\nimport { Controller, Get, Post, Body, Param, Delete, Query, NotFoundException, InternalServerErrorException, Patch } from '@nestjs/common';\nimport { MarksService } from './marks.service';\nimport { CreateMarkDto } from './dto/create-mark.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('marks')\n@ApiTags('Marks')\nexport class MarksController {\n  constructor(private readonly marksService: MarksService) {}\n\n  @Post()\n  create(@Body() createMarkDto: CreateMarkDto) {\n    return this.marksService.create(createMarkDto);\n  }\n  @Patch()\n  async update(@Body() createMarkDto: CreateMarkDto) {\n    try {\n      const updatedMark = await this.marksService.updateMarksByStudentId(createMarkDto);\n      return { success: true, data: updatedMark };\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  }\n\n  @Post('allmarks')\n  async createAll(@Body() createMarkDtos: CreateMarkDto[]) {\n    try {\n      const createdMarks = await this.marksService.createAll(createMarkDtos);\n      return { statusCode: 201, message: 'Marks created successfully', data: createdMarks };\n    } catch (error) {\n      return { statusCode: 400, message: 'Failed to create marks', error: error.message };\n    }\n  }\n  @Get()\n  findAll() {\n    return this.marksService.findAll();\n  }\n\n  @Get('student/:studentId')\n  async findMarksByStudentId(@Param('studentId') studentId: string) {\n    try {\n      return await this.marksService.findMarksByStudentId(studentId);\n    } catch (error) {\n      if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      }\n      throw new InternalServerErrorException('Something went wrong');\n    }\n  }\n\n  @Get('class/:classId')\n  async getMarksByClassId(@Param('classId') classId: string) {\n    return this.marksService.findMarksByClassId(classId);\n  }\n\n  @Patch(':id')\n  async updateMarksById(@Param('id') id: string, @Body() updateMarkDto: CreateMarkDto) {\n    try {\n      const updatedMark = await this.marksService.update(id, updateMarkDto);\n      if (!updatedMark) {\n        throw new NotFoundException('Mark not found');\n      }\n      return { success: true, data: updatedMark };\n    } catch (error) {\n      return { success: false, message: error.message };\n    }\n  }\n\n  @Get('percentage/:studentId')\n  async getPercentageByStudentId(@Param('studentId') studentId: string){\n    return this.marksService.getPercentageByStudentId(studentId);\n  }\n\n  @Get('pass-percentage-by-subject')\n  async getPassPercentageBySubject() {\n    return this.marksService.passPercentageBySubject();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.marksService.findOne(id);\n  }\n\n\n\n  @Delete(':id')\n  remove(@Param('id') id: string){\n    return this.marksService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarksModule.html":{"url":"modules/MarksModule.html","title":"module - MarksModule","body":"\n                   \n\n\n\n\n    Modules\n    MarksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarksModule\n\n\n\ncluster_MarksModule_imports\n\n\n\ncluster_MarksModule_exports\n\n\n\ncluster_MarksModule_providers\n\n\n\n\nStudentModule\n\nStudentModule\n\n\n\nMarksModule\n\nMarksModule\n\nMarksModule -->\n\nStudentModule->MarksModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nMarksModule -->\n\nSubjectModule->MarksModule\n\n\n\n\n\nMarksService \n\nMarksService \n\nMarksService  -->\n\nMarksModule->MarksService \n\n\n\n\n\nMarksService\n\nMarksService\n\nMarksModule -->\n\nMarksService->MarksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/marks/marks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MarksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MarksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StudentModule\n                        \n                        \n                            SubjectModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MarksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MarksService } from './marks.service';\nimport { MarksController } from './marks.controller';\nimport { SubjectModule } from 'src/subject/subject.module';\nimport { Marks } from './entities/mark.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from 'src/user/user.module';\nimport { StudentModule } from 'src/student/student.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Marks]),SubjectModule,StudentModule],\n  controllers: [MarksController],\n  providers: [MarksService],\n  exports: [MarksService]  \n})\nexport class MarksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarksService.html":{"url":"injectables/MarksService.html","title":"injectable - MarksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/marks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAll\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findExistingMark\n                            \n                            \n                                    Async\n                                findMarksByClassId\n                            \n                            \n                                    Async\n                                findMarksByStudentId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getPercentageByStudentId\n                            \n                            \n                                    Async\n                                passPercentageBySubject\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMarksByStudentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(marksRepository: Repository, subjectService: SubjectService, studentService: StudentService)\n                    \n                \n                        \n                            \n                                Defined in src/marks/marks.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        marksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subjectService\n                                                  \n                                                        \n                                                                        SubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMarkDto: CreateMarkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createMarkDtos: CreateMarkDto[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDtos\n                                            \n                                                            CreateMarkDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:303\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findExistingMark\n                        \n                    \n                \n            \n            \n                \n                        \n                    findExistingMark(studentId: string, subjectId: string, academicYear: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subjectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                academicYear\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMarksByClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMarksByClassId(classId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMarksByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMarksByStudentId(studentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:307\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPercentageByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPercentageByStudentId(studentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                studentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        passPercentageBySubject\n                        \n                    \n                \n            \n            \n                \n                        \n                    passPercentageBySubject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:283\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:311\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, data: CreateMarkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMarksByStudentId\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMarksByStudentId(createMarkDto: CreateMarkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { CreateMarkDto } from './dto/create-mark.dto';\nimport { SubjectService } from 'src/subject/subject.service';\nimport { StudentService } from 'src/student/student.service';\nimport { Marks } from './entities/mark.entity';\nimport { ResultEnum } from 'src/common/enums/result.enum';\n\n\n@Injectable()\nexport class MarksService {\n  constructor(\n    @InjectRepository(Marks)\n    private marksRepository: Repository,\n    private subjectService: SubjectService,\n    private studentService: StudentService\n  ) {}\n\n  async create(createMarkDto: CreateMarkDto){\n    const { student_id, subjectName, classId, academicYear, marksObtained } = createMarkDto;\n\n    // Find student\n    const student = await this.studentService.findOne(student_id);\n    if (!student) {\n      throw new Error('Student not found');\n    }\n\n    // Find subject\n    const subject = await this.subjectService.findBySubjectNameAndClassId(subjectName, classId);\n    if (!subject) {\n      throw new Error('Subject not found');\n    }\n\n    // Check if marks obtained is greater than pass marks\n    const result = marksObtained >= subject.passMarks ? ResultEnum.PASS : ResultEnum.FAIL;\n\n    // Check if the mark already exists\n    const existingMark = await this.findExistingMark(student_id, subject.id, academicYear);\n    console.log('existingMark',existingMark)\n    if (existingMark) {\n      return { message: 'Record already exists' };\n    }\n  \n    const mark = this.marksRepository.create({\n      student,\n      subject,\n      academicYear,\n      marksObtained,\n      result\n    });\n\n    return this.marksRepository.save(mark);\n}\n\n  async createAll(createMarkDtos: CreateMarkDto[]) {\n    const response = [];\n  \n    for (const createMarkDto of createMarkDtos) {\n      const { student_id, subjectName, classId, academicYear, marksObtained } = createMarkDto;\n  \n      const student = await this.studentService.findOne(student_id);\n      if (!student) {\n        throw new Error(`Student with ID ${student_id} not found`);\n      }\n  \n      const subject = await this.subjectService.findBySubjectNameAndClassId(subjectName, classId);\n      if (!subject) {\n        throw new Error(`Subject '${subjectName}' not found for class ${classId}`);\n      }\n  \n      const existingMark = await this.findExistingMark(student_id, subject.id, academicYear);\n      console.log('existingmark',existingMark)\n  \n      let result: ResultEnum;\n      if (existingMark) {\n        existingMark.marksObtained = marksObtained;\n        result = marksObtained >= subject.passMarks ? ResultEnum.PASS : ResultEnum.FAIL;\n        existingMark.result = result;\n        await this.marksRepository.save(existingMark);\n        response.push({ message: 'Record updated', data: existingMark });\n      } else {\n        result = marksObtained >= subject.passMarks ? ResultEnum.PASS : ResultEnum.FAIL;\n        const mark = this.marksRepository.create({\n          student,\n          subject,\n          academicYear,\n          marksObtained,\n          result,\n        });\n        await this.marksRepository.save(mark);\n        response.push({ message: 'Record created', data: mark });\n      }\n    }\n  \n    return response;\n  }\n  \n  async findMarksByStudentId(studentId: string) {\n    const marks = await this.marksRepository.createQueryBuilder(\"mark\")\n      .leftJoin(\"mark.subject\", \"subject\")\n      .leftJoin(\"mark.student\", \"student\")\n      .leftJoin(\"student.class\", \"class\")\n      .select([\n        \"student.id as studentId\",\n        \"student.firstName as firstname\",\n        \"student.lastName as lastname\",\n        \"mark.academicYear as academicyear\",\n        \"subject.subjectName as subjectname\",\n        \"mark.marksObtained as marksobtained\",\n        \"subject.fullMarks as fullmarks\",\n        \"subject.passMarks as passmarks\",\n        \"mark.result as result\",\n        \"class.className as classname\"\n      ])\n      .where(\"student.id = :studentId\", { studentId })\n      .orderBy(\"mark.academicYear\", \"DESC\")\n      .getRawMany();\n    console.log('marks',marks)\n    // Group marks by student\n    const marksByStudent = {\n      studentid:'',\n      firstname: '',\n      lastname:'',\n      classname:'',\n      academicYears: {}\n    };\n\n    marks.forEach(mark => {\n      const { studentid, firstname,lastname,classname, academicyear, subjectname, marksobtained, fullmarks, passmarks,result } = mark;\n      marksByStudent.studentid = studentid;\n      marksByStudent.firstname = firstname;\n      marksByStudent.lastname = lastname;\n      marksByStudent.classname = classname;\n\n      if (!marksByStudent.academicYears[academicyear]) {\n        marksByStudent.academicYears[academicyear] = [];\n      }\n      marksByStudent.academicYears[academicyear].push({ subjectname, marksobtained, fullmarks, passmarks,result });\n    });\n  \n    return marksByStudent;\n  }\n\n  async findMarksByClassId(classId: string) {\n    const marks = await this.marksRepository.createQueryBuilder(\"mark\")\n      .leftJoin(\"mark.subject\", \"subject\")\n      .leftJoin(\"mark.student\", \"student\")\n      .leftJoin(\"student.class\", \"class\")\n      .select([\n        \"student.id as studentId\",\n        \"student.firstName as studentName\",\n        \"class.className as className\",\n        \"mark.academicYear as academicyear\",\n        \"subject.subjectName as subjectname\",\n        \"mark.marksObtained as marksobtained\",\n        \"mark.result as result\",\n        \"subject.fullMarks as fullmarks\",\n        \"subject.passMarks as passmarks\"\n      ])\n      .where(\"class.id = :classId\", { classId })\n      .orderBy(\"student.id\")\n      .addOrderBy(\"mark.academicYear\")\n      .getRawMany();\n  console.log('marks',marks)\n    // Group marks by student\n    const marksByStudent = {};\n    marks.forEach(mark => {\n      const { studentid, studentname,classname,academicyear, subjectname, marksobtained, fullmarks, passmarks,result  } = mark;\n      if (!marksByStudent[studentid]) {\n        marksByStudent[studentid] = { studentid, studentname,classname, academicYears: {} };\n      }\n      if (!marksByStudent[studentid].academicYears[academicyear]) {\n        marksByStudent[studentid].academicYears[academicyear] = [];\n      }\n      marksByStudent[studentid].academicYears[academicyear].push({subjectname, marksobtained, fullmarks, passmarks,result });\n    });\n  \n    return marksByStudent;\n  }\n  \n  async updateMarksByStudentId(createMarkDto: CreateMarkDto) {\n    const { student_id, subjectName, classId, academicYear, marksObtained } = createMarkDto;\n\n    // Find student\n    const student = await this.studentService.findOne(student_id);\n    if (!student) {\n      throw new Error('Student not found');\n    }\n\n    // Find subject\n    const subject = await this.subjectService.findBySubjectNameAndClassId(subjectName, classId);\n    if (!subject) {\n      throw new Error('Subject not found');\n    }\n\n    // Check if marks obtained is greater than pass marks\n    const result = marksObtained >= subject.passMarks ? ResultEnum.PASS : ResultEnum.FAIL;\n\n    // Find the existing mark\n    const existingMark = await this.findExistingMark(student_id, subject.id, academicYear);\n    if (!existingMark) {\n      throw new Error('Record not found');\n    }\n\n    // Update marks obtained\n    existingMark.marksObtained = marksObtained;\n    existingMark.result = result;\n\n    return this.marksRepository.save(existingMark);\n  }\n\n  async findExistingMark(studentId: string, subjectId: string, academicYear: number) {\n    const existingMark = await this.marksRepository.createQueryBuilder(\"mark\")\n      .leftJoin(\"mark.student\", \"student\")\n      .leftJoin(\"mark.subject\", \"subject\")\n      .select(\"mark.id\", \"id\")\n      .where(\"student.id = :studentId\", { studentId })\n      .andWhere(\"subject.id = :subjectId\", { subjectId })\n      .andWhere(\"mark.academicYear = :academicYear\", { academicYear })\n      .getRawOne();\n\n    return existingMark;\n  }\n\n  async update(id: string, data: CreateMarkDto) {\n    const { student_id, subjectName, classId, academicYear, marksObtained } = data;\n\n    // Find student\n    const student = await this.studentService.findOne(student_id);\n    if (!student) {\n      throw new NotFoundException(`Student with ID ${student_id} not found`);\n    }\n\n    // Find subject\n    const subject = await this.subjectService.findBySubjectNameAndClassId(subjectName, classId);\n    if (!subject) {\n      throw new NotFoundException(`Subject '${subjectName}' not found for class ${classId}`);\n    }\n\n    // Check if marks obtained is greater than pass marks\n    const result = marksObtained >= subject.passMarks ? ResultEnum.PASS : ResultEnum.FAIL;\n\n    // Find the mark to update\n    const mark = await this.marksRepository.findOne({ where: { id: id } });\n    if (!mark) {\n      throw new NotFoundException(`Mark with ID ${id} not found`);\n    }\n\n    // Update mark properties\n    mark.student = student;\n    mark.subject = subject;\n    mark.academicYear = academicYear;\n    mark.marksObtained = marksObtained;\n    mark.result = result;\n\n    return this.marksRepository.save(mark);\n  }\n\n  async getPercentageByStudentId(studentId: string){\n    const marksByYearQuery = this.marksRepository.createQueryBuilder('marks')\n      .innerJoin('marks.subject', 'subject')\n      .select('marks.academicYear', 'academicYear')\n      .addSelect('SUM(marks.marksObtained)', 'totalMarks')\n      .addSelect('SUM(subject.fullMarks)', 'totalFullMarks')\n      .where('marks.student = :studentId', { studentId })\n      .groupBy('marks.academicYear')\n      .orderBy('marks.academicYear', 'ASC');\n\n    const marksByYear = await marksByYearQuery.getRawMany();\n\n    const percentages = marksByYear.map(row => ({\n      academicYear: parseInt(row.academicYear),\n      percentage: (row.totalMarks / row.totalFullMarks) * 100,\n    }));\n\n    return percentages;\n  }\n\n  async passPercentageBySubject(): Promise {\n    const passPercentageResults = await this.marksRepository\n      .createQueryBuilder('marks')\n      .select([\n        'marks.subjectId',\n        'subject.subjectName',\n        'ARRAY_AGG(DISTINCT marks.academicYear) as academicYears',\n        'ARRAY_AGG(COUNT(*)) as totalStudents',\n        'ARRAY_AGG(CASE WHEN marks.result = \\'PASS\\' THEN 1 ELSE 0 END) as passedStudents',\n        'ARRAY_AGG(CASE WHEN marks.result = \\'PASS\\' THEN 1 ELSE 0 END) / COUNT(*) * 100 as passPercentage',\n      ])\n      .leftJoin('marks.subject', 'subject')\n      .groupBy('marks.subjectId, subject.subjectName')\n      .orderBy('marks.subjectId')\n      .getRawMany();\n\n    return passPercentageResults;\n  }\n\n\n  async findAll(){\n    return this.marksRepository.find();\n  }\n\n  async findOne(id: string){\n    return this.marksRepository.findOne({ where: { id: id } });\n  }\n\n  async remove(id: string){\n    await this.marksRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestJwtStrategy.html":{"url":"classes/NestJwtStrategy.html","title":"class - NestJwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestJwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(JwtStrategy, \"jwt\")\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Strategy } from \"passport-strategy\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { Request } from \"express\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\n\n@Injectable()\nexport class JwtStrategy extends Strategy {\n  constructor(\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage\n  ) { \n    super();\n    this.tokenStorage = tokenStorage;\n  }\n\n  public async authenticate(req: Request): Promise {\n    const token: string | null = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n\n    if (!token) {\n      // @ts-ignore\n      return this.fail(401);\n    }\n\n    try {\n      const user: User = await this.tokenStorage.validateToken(token);\n      // @ts-ignore\n      this.success(user);\n\n    } catch {\n      // @ts-ignore\n      this.fail(401);\n    }\n  }\n}\n\nexport class NestJwtStrategy extends PassportStrategy(JwtStrategy, \"jwt\") {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationMetaInterface.html":{"url":"interfaces/PaginationMetaInterface.html","title":"interface - PaginationMetaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationMetaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstPageUrl\n                                        \n                                \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            itemsPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastPageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nextPageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            previousPageUrl\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previousPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previousPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Req.html":{"url":"interfaces/Req.html","title":"interface - Req","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Req\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/request/request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpressRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request as ExpressRequest } from 'express';\n\nexport interface Req extends ExpressRequest {\n  readonly user: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceBody.html":{"url":"interfaces/ResourceBody.html","title":"interface - ResourceBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseTransformInterceptor.html":{"url":"injectables/ResponseTransformInterceptor.html","title":"injectable - ResponseTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/response-transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/response-transform.interceptor.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ISuccessBody } from '../response/types';\nimport { ResponseMessageKey } from '../../decorators/response.decorator';\nimport { Reflector } from '@nestjs/core';\n\nconst IgnoredPropertyName = Symbol('IgnoredPropertyName');\n\nexport function ResponseTransformInterceptorIgnore() {\n  return function (\n    target,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    descriptor.value[IgnoredPropertyName] = true;\n  };\n}\n\n@Injectable()\nexport class ResponseTransformInterceptor\n  implements NestInterceptor | null>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | null> {\n    const responseMessage =\n      new Reflector().get(ResponseMessageKey, context.getHandler()) ??\n      '';\n    const isIgnored = context.getHandler()[IgnoredPropertyName];\n    if (!!isIgnored) {\n      return next.handle().pipe(map((data) => data));\n    }\n\n    return next.handle().pipe(\n      map((data: ISuccessBody | undefined) => {\n        if (data === undefined) {\n          return null;\n        }\n\n        if (data.hasOwnProperty('items')) {\n          return data;\n        }\n\n        return {\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          reqId: context.switchToHttp().getRequest().reqId,\n          message: responseMessage ?? '',\n          data,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Student.html":{"url":"entities/Student.html","title":"entity - Student","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/entities/student.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                guardianName\n                            \n                            \n                                    \n                                guardianPhone\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                rollNo\n                            \n                            \n                                    \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Class\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guardianName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guardianPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rollNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true, eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, OneToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { User } from \"src/user/entities/user.entity\";\nimport { Class } from \"src/class/entities/class.entity\";\n\n@Entity()\nexport class Student {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  gender: string;\n\n  @Column()\n  dateOfBirth: Date;\n\n  @Column()\n  rollNo: string;\n\n  @ManyToOne(() => Class)\n  class: Class;\n\n  @Column()\n  guardianName: string;\n\n  @Column()\n  guardianPhone: string;\n\n  @Column()\n  address: string;\n\n  @OneToOne(() => User, { cascade: true, eager: true })\n  @JoinColumn()\n  user: User;\n\n  @CreateDateColumn()\n  readonly createdAt: Date;\n\n  @UpdateDateColumn()\n  readonly updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                countStudentsByClass\n                            \n                            \n                                    \n                                countTotalStudents\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                createAll\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findByClassId\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findOneByUsername\n                            \n                            \n                                    \n                                    Async\n                                getGenderCountByClass\n                            \n                            \n                                    \n                                    Async\n                                getTotalGenderCount\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        countStudentsByClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    countStudentsByClass()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('countByClass')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        countTotalStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    countTotalStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('totalstudents')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createStudentDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Student created successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStudentDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createStudentDto: CreateStudentDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('allstudents')@ResponseMessage('Student created successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStudentDto\n                                            \n                                                            CreateStudentDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findByClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByClassId(classId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byClass/:classId')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byUsername/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getGenderCountByClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderCountByClass()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('gender-by-class')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTotalGenderCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalGenderCount()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('total-gender-count')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateStudentDto: CreateStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStudentDto\n                                            \n                                                            CreateStudentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport { CreateStudentDto } from './dto/create-student.dto';\nimport { UpdateStudentDto } from './dto/update-student.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\nimport { ReturnDocument } from 'typeorm';\n\n@Controller('student')\n@ApiTags('Student')\nexport class StudentController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @Post()\n  @ResponseMessage('Student created successfully')\n  create(@Body() createStudentDto: any) {\n    return this.studentService.create(createStudentDto);\n  }\n  \n  @Post('allstudents')\n  @ResponseMessage('Student created successfully')\n  createAll(@Body() createStudentDto: CreateStudentDto[]) {\n    console.log(createStudentDto)\n    return this.studentService.createAll(createStudentDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.studentService.findAll();\n  }\n\n  @Get('totalstudents')\n  countTotalStudents(){\n    return this.studentService.countTotalStudents();\n  }\n\n  @Get('countByClass')\n  async countStudentsByClass() {\n    return this.studentService.countStudentsByClass();\n\n  }\n\n  @Get('byClass/:classId')\n  async findByClassId(@Param('classId') classId: string) {\n    return this.studentService.findByClassId(classId);\n  }\n\n  @Get('gender-by-class')\n  async getGenderCountByClass() {\n    return this.studentService.getGenderCountByClass();\n  }\n\n  @Get('total-gender-count')\n  async getTotalGenderCount() {\n    return this.studentService.getTotalGenderCount();\n  }\n\n  // @Get('top-attendance-byclass')\n  // async getTopAttendeesByClass() {\n  //   return this.studentService.getTopAttendeesByClass();\n  // }\n  @Get('byUsername/:username')\n  findOneByUsername(@Param('username') username: string) {\n    return this.studentService.findOneByUsername(username);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.studentService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateStudentDto: CreateStudentDto) {\n    return this.studentService.update(id, updateStudentDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.studentService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\ncluster_StudentModule_imports\n\n\n\n\nClassModule\n\nClassModule\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nClassModule->StudentModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nStudentModule -->\n\nUserModule->StudentModule\n\n\n\n\n\nStudentService \n\nStudentService \n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClassModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StudentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport { StudentController } from './student.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Student } from './entities/student.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserModule } from 'src/user/user.module';\nimport { ClassModule } from 'src/class/class.module';\nimport { FinalAttendance } from 'src/final_attendance/entities/final_attendance.entity';\nimport { FinalAttendanceModule } from 'src/final_attendance/final_attendance.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Student, User]), UserModule,ClassModule],\n  controllers: [StudentController],\n  providers: [StudentService],\n  exports: [StudentService],\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countStudentsByClass\n                            \n                            \n                                    Async\n                                countTotalStudents\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAll\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByClassId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                            \n                                    Async\n                                getGenderCountByClass\n                            \n                            \n                                    Async\n                                getTotalGenderCount\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentRepository: Repository, userService: UserService, classService: ClassService)\n                    \n                \n                        \n                            \n                                Defined in src/student/student.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classService\n                                                  \n                                                        \n                                                                        ClassService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countStudentsByClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    countStudentsByClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countTotalStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    countTotalStudents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createStudentDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStudentDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createStudentDtoArray: CreateStudentDto[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStudentDtoArray\n                                            \n                                                            CreateStudentDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByClassId(classId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGenderCountByClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGenderCountByClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalGenderCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalGenderCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, data: CreateStudentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateStudentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Student } from './entities/student.entity'; // Make sure to import the correct entity\nimport { UserService } from 'src/user/http/services/user.service';\nimport { Role } from 'src/user/types';\nimport { CreateStudentDto } from './dto/create-student.dto';\nimport { Class } from 'src/class/entities/class.entity';\nimport { ClassService } from 'src/class/class.service';\nimport { FinalAttendanceService } from 'src/final_attendance/final_attendance.service';\n\n@Injectable()\nexport class StudentService {\n  constructor(\n    @InjectRepository(Student)\n    private studentRepository: Repository,\n    private readonly userService: UserService,\n    private readonly classService: ClassService,\n    // private readonly finalAttendanceService: FinalAttendanceService,\n\n  ) {}\n\n  async create(createStudentDto: any) {\n    console.log()\n    const user = await this.userService.create({\n      username: createStudentDto.username,\n      password: createStudentDto.password,\n      role: Role.student,\n    });\n    const classEntity = await this.classService.findOneByClassName(createStudentDto.class);\n\n    // Create student with the user ID\n    const student = this.studentRepository.create({\n      firstName: createStudentDto.firstName,\n      lastName: createStudentDto.lastName,\n      gender: createStudentDto.gender,\n      dateOfBirth: createStudentDto.dateOfBirth,\n      rollNo: createStudentDto.rollNo,\n      class: classEntity,\n      guardianName: createStudentDto.guardianName,\n      guardianPhone: createStudentDto.guardianPhone,\n      address: createStudentDto.address,\n      user: user.raw[0], // Assign the user entity\n    });\n\n    return this.studentRepository.save(student);\n  }\n\n  async createAll(createStudentDtoArray: CreateStudentDto[]) {\n    const createdStudents = [];\n  \n    for (const createStudentDto of createStudentDtoArray) {\n      const user = await this.userService.create({\n        username: createStudentDto.username,\n        password: createStudentDto.password,\n        role: Role.student,\n      });\n      const classEntity = await this.classService.findOneByClassName(createStudentDto.class);\n  \n      // Create student with the user ID\n      const student = this.studentRepository.create({\n        firstName: createStudentDto.firstName,\n        lastName: createStudentDto.lastName,\n        gender: createStudentDto.gender,\n        dateOfBirth: createStudentDto.dateOfBirth,\n        rollNo: createStudentDto.rollNo,\n        class: classEntity,\n        guardianName: createStudentDto.guardianName,\n        guardianPhone: createStudentDto.guardianPhone,\n        address: createStudentDto.address,\n        user: user.raw[0], // Assign the user entity\n      });\n  \n      createdStudents.push(student);\n    }\n  \n    return this.studentRepository.save(createdStudents);\n  }\n\n  async findAll() {\n    return this.studentRepository.createQueryBuilder(\"student\")\n      .leftJoinAndSelect('student.class', 'class')\n      .leftJoinAndSelect('student.user', 'user')\n      .getMany();\n  }\n  \n  async findOne(id: string) {\n    return this.studentRepository.createQueryBuilder('student')\n      .leftJoinAndSelect('student.class', 'class')\n      .leftJoinAndSelect('student.user', 'user')\n      .where('student.id = :id', { id })\n      .getOne();\n  }\n  \n\n  async countTotalStudents(){\n    return this.studentRepository.count();\n  }\n\n  async countStudentsByClass(){\n    const classCounts = await this.studentRepository\n    .createQueryBuilder('student')\n    .select('student.classId as classId, COUNT(*) as count')\n    .groupBy('student.classId')\n    .orderBy('student.classId')\n    .getRawMany();\n\n  // Log only the 'count' values\n  console.log(classCounts.map(count => count.count));\n\n  return classCounts;\n  }  \n\n  async findByClassId(classId: string) {\n    return this.studentRepository.createQueryBuilder('student')\n      .leftJoinAndSelect('student.class', 'class')\n      .leftJoinAndSelect('student.user', 'user')\n      .where('class.id = :classId', { classId })\n      .getMany();\n  }\n\n  async getGenderCountByClass(): Promise {\n    const result = await this.studentRepository\n      .createQueryBuilder('student')\n      .select('COUNT(student.id)', 'count')\n      .addSelect('student.gender', 'gender')\n      .addSelect('student.class', 'class')\n      .groupBy('student.gender')\n      .addGroupBy('student.class')\n      .orderBy('student.class')\n      .getRawMany();\n\n    return result;\n  }\n\n  async getTotalGenderCount(): Promise {\n    const result = await this.studentRepository\n      .createQueryBuilder('student')\n      .select('COUNT(student.id)', 'count')\n      .addSelect('student.gender', 'gender')\n      .groupBy('student.gender')\n      .getRawMany();\n\n    return result;\n  }\n\n  async findOneByUsername(username: string){\n    return this.studentRepository\n      .createQueryBuilder('student')\n      .leftJoinAndSelect('student.user', 'user')\n      .where('user.username = :username', { username })\n      .getOne();\n  }\n  \n  async update(id:string, data:CreateStudentDto) {\n    const { class: className, ...restData } = data;\n    const classEntity = await this.classService.findOneByClassName(className);\n    if (!classEntity) {\n      throw new NotFoundException(`Class '${className}' not found`);\n    }\n  \n    return this.studentRepository.createQueryBuilder(\"user\")\n      .update(Student)\n      .set({\n        ...restData,\n        class: classEntity\n      })\n      .where(\"user.id=:id\", { id: +id })\n      .execute();\n  }\n  \n  async remove(id: string) {\n    await this.studentRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subject.html":{"url":"entities/Subject.html","title":"entity - Subject","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/entities/subject.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                class\n                            \n                            \n                                    \n                                fullMarks\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                passMarks\n                            \n                            \n                                    \n                                subjectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Class\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/entities/subject.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullMarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/entities/subject.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/entities/subject.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passMarks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/entities/subject.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subject/entities/subject.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Class } from 'src/class/entities/class.entity';\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Subject {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @Column()\n  subjectName: string;\n\n  @Column({ type: 'int' })\n  fullMarks: number;\n\n  @Column({ type: 'int' })\n  passMarks: number;\n\n  @ManyToOne(() => Class)\n  class: Class;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubjectController.html":{"url":"controllers/SubjectController.html","title":"controller - SubjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subject\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                createAll\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByClassId\n                            \n                            \n                                    \n                                    Async\n                                findBySubjectNameAndClassId\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubjectDto: CreateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubjectDto\n                                            \n                                                            CreateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createSubjectDto: CreateSubjectDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('all-subjects')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubjectDto\n                                            \n                                                            CreateSubjectDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByClassId(classId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findByClassId/:classId')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findBySubjectNameAndClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBySubjectNameAndClassId(subjectName: string, classId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findBySubjectNameAndClassId')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subjectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSubjectDto: CreateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSubjectDto\n                                            \n                                                            CreateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubjectService } from './subject.service';\nimport { CreateSubjectDto } from './dto/create-subject.dto';\nimport { UpdateSubjectDto } from './dto/update-subject.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('subject')\n@ApiTags('Subject')\nexport class SubjectController {\n  constructor(private readonly subjectService: SubjectService) {}\n\n  @Post()\n  create(@Body() createSubjectDto: CreateSubjectDto) {\n    return this.subjectService.create(createSubjectDto);\n  }\n\n  @Post('all-subjects')\n  createAll(@Body() createSubjectDto: CreateSubjectDto[]) {\n    return this.subjectService.createAll(createSubjectDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.subjectService.findAll();\n  }\n\n  @Get('findByClassId/:classId')\n  findByClassId(@Param('classId') classId: string) {\n    return this.subjectService.findByClassId(classId);\n  }\n\n  @Get('findBySubjectNameAndClassId')\n  async findBySubjectNameAndClassId(\n    @Query('subjectName') subjectName: string,\n    @Query('classId') classId: string,\n  ) {\n    return this.subjectService.findBySubjectNameAndClassId(subjectName, classId);\n  }\n\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subjectService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateSubjectDto: CreateSubjectDto) {\n    return this.subjectService.update(id, updateSubjectDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.subjectService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubjectModule.html":{"url":"modules/SubjectModule.html","title":"module - SubjectModule","body":"\n                   \n\n\n\n\n    Modules\n    SubjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubjectModule\n\n\n\ncluster_SubjectModule_exports\n\n\n\ncluster_SubjectModule_providers\n\n\n\ncluster_SubjectModule_imports\n\n\n\n\nClassModule\n\nClassModule\n\n\n\nSubjectModule\n\nSubjectModule\n\nSubjectModule -->\n\nClassModule->SubjectModule\n\n\n\n\n\nSubjectService \n\nSubjectService \n\nSubjectService  -->\n\nSubjectModule->SubjectService \n\n\n\n\n\nSubjectService\n\nSubjectService\n\nSubjectModule -->\n\nSubjectService->SubjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subject/subject.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubjectController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ClassModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SubjectService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubjectService } from './subject.service';\nimport { SubjectController } from './subject.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ClassModule } from 'src/class/class.module';\nimport { Subject } from './entities/subject.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Subject]),ClassModule],\n  controllers: [SubjectController],\n  providers: [SubjectService],\n  exports: [SubjectService]\n})\nexport class SubjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectService.html":{"url":"injectables/SubjectService.html","title":"injectable - SubjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAll\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByClassId\n                            \n                            \n                                    Async\n                                findBySubjectNameAndClassId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subjectRepository: Repository, classService: ClassService)\n                    \n                \n                        \n                            \n                                Defined in src/subject/subject.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subjectRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classService\n                                                  \n                                                        \n                                                                        ClassService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubjectDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubjectDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createSubjectDtos: CreateSubjectDto[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubjectDtos\n                                            \n                                                            CreateSubjectDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByClassId(classId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findBySubjectNameAndClassId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBySubjectNameAndClassId(subjectName: string, classId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subjectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSubjectDto: CreateSubjectDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSubjectDto\n                                            \n                                                            CreateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Subject } from './entities/subject.entity';\nimport { CreateSubjectDto } from './dto/create-subject.dto';\nimport { UpdateSubjectDto } from './dto/update-subject.dto';\nimport { ClassService } from 'src/class/class.service';\n\n@Injectable()\nexport class SubjectService {\n  constructor(\n    @InjectRepository(Subject)\n    private subjectRepository: Repository,\n    private classService: ClassService \n  ) {}\n\n  async create(createSubjectDto: any) {\n    const classEntity = await this.classService.findOneByClassName(createSubjectDto.class);\n    if (!classEntity) {\n      throw new Error('Class not found');\n    }\n    const newSubject = this.subjectRepository.create({\n      subjectName: createSubjectDto.subjectName,\n      class: classEntity, // Associate the class entity with the subject\n      fullMarks: createSubjectDto.fullMarks,\n      passMarks: createSubjectDto.passMarks,\n    });\n\n    // Save the new subject entity\n    return this.subjectRepository.save(newSubject);\n  }\n\n  async createAll(createSubjectDtos: CreateSubjectDto[]) {\n    const subjects: Subject[] = [];\n    \n    for (const createSubjectDto of createSubjectDtos) {\n      const classEntity = await this.classService.findOneByClassName(createSubjectDto.class);\n      if (!classEntity) {\n        throw new Error(`Class not found for subject: ${createSubjectDto.subjectName}`);\n      }\n      \n      const newSubject = this.subjectRepository.create({\n        subjectName: createSubjectDto.subjectName,\n        class: classEntity,\n        fullMarks: createSubjectDto.fullMarks,\n        passMarks: createSubjectDto.passMarks,\n      });\n      \n      subjects.push(newSubject);\n    }\n\n    // Save all the new subject entities\n    return this.subjectRepository.save(subjects);\n  }\n\n  async findAll() {\n    return this.subjectRepository\n    .createQueryBuilder('subject')\n    .leftJoinAndSelect('subject.class', 'class')\n    .getMany();\n  }\n\n  async findByClassId(classId: string) {\n    return this.subjectRepository.find({ where: { class: { id: classId } } });\n  }\n\n  async findBySubjectNameAndClassId(subjectName: string, classId: string) {\n    return this.subjectRepository\n      .createQueryBuilder('subject')\n      .where('subject.subjectName = :subjectName', { subjectName })\n      .andWhere('subject.classId = :classId', { classId })\n      .leftJoinAndSelect('subject.class', 'class')\n      .getOne();\n  }\n\n  async findOne(id: string) {\n    return this.subjectRepository.findOne({ where: { id: id } });\n  }\n\n  async update(id: string, updateSubjectDto: CreateSubjectDto) {\n    const { class: className, ...restData } = updateSubjectDto;\n    const classEntity = await this.classService.findOneByClassName(className);\n    if (!classEntity) {\n      throw new Error('Class not found');\n    }\n  \n    await this.findOne(id); // Check if subject exists\n  \n    return this.subjectRepository.update(id, {\n      ...restData,\n      class: classEntity\n    });\n  }\n  \n\n  async remove(id: string) {\n    await this.subjectRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Teacher.html":{"url":"entities/Teacher.html","title":"entity - Teacher","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/entities/teacher.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                experience\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                joiningDate\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                mobile\n                            \n                            \n                                    \n                                qualification\n                            \n                            \n                                    \n                                    \n                                subjects\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true, eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joiningDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable({name: 'teacher_subject', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true, eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinColumn, JoinTable, ManyToMany, ManyToOne, OneToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Exclude } from 'class-transformer';\nimport { User } from \"src/user/entities/user.entity\";\nimport { Subject } from \"src/subject/entities/subject.entity\";\nimport { Address } from \"src/address/entities/address.entity\";\n\n@Entity()\nexport class Teacher {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  gender: string;\n\n  @Column()\n  dateOfBirth: Date;\n\n  @Column()\n  mobile: string;\n\n  @Column()\n  joiningDate: Date;\n\n  @Column()\n  qualification: string;\n\n  @Column()\n  experience: number;\n\n  @Column()\n  email: string;\n\n  @OneToOne(() => User, { cascade: true, eager: true })\n  @JoinColumn()\n  user: User;\n\n  @OneToOne(() => Address, { cascade: true, eager: true })\n  @JoinColumn()\n  address: Address;\n\n  @ManyToMany(() => Subject, { cascade: true })\n  @JoinTable({\n    name: 'teacher_subject', // Name of the join table\n    joinColumn: {\n      name: 'teacher_id', // Name of the column referencing the Teacher entity\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'subject_id', // Name of the column referencing the Subject entity\n      referencedColumnName: 'id',\n    },\n  })\n  subjects: Subject[]; // Corrected type to Subject[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teacher\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                createAll\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTeacherDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Teacher created successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createTeacherDto: CreateTeacherDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('allteachers')@ResponseMessage('Teachers created successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            CreateTeacherDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTeacherDto: UpdateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTeacherDto\n                                            \n                                                            UpdateTeacherDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { UpdateTeacherDto } from './dto/update-teacher.dto';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('teacher')\n@ApiTags('Teacher')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  @Post()\n  @ResponseMessage('Teacher created successfully')\n  create(@Body() createTeacherDto: any) {\n    console.log('Creating a teacher...', createTeacherDto); \n    return this.teacherService.create(createTeacherDto);\n  }\n\n  @Post('allteachers')\n  @ResponseMessage('Teachers created successfully')\n  createAll(@Body() createTeacherDto: CreateTeacherDto[]) {\n    console.log(createTeacherDto)\n    return this.teacherService.createAll(createTeacherDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.teacherService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.teacherService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTeacherDto: UpdateTeacherDto) {\n    return this.teacherService.update(+id, updateTeacherDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.teacherService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_TeacherModule_imports\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nAddressModule->TeacherModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nTeacherModule -->\n\nSubjectModule->TeacherModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nTeacherModule -->\n\nUserModule->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teacher/teacher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            SubjectModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Teacher } from './entities/teacher.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserModule } from 'src/user/user.module';\nimport { SubjectModule } from 'src/subject/subject.module';\nimport { AddressModule } from 'src/address/address.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Teacher,User]),UserModule,SubjectModule,AddressModule],\n  controllers: [TeacherController],\n  providers: [TeacherService],\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/teacher.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAll\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: Repository, userService: UserService, subjectService: SubjectService, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/teacher/teacher.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subjectService\n                                                  \n                                                        \n                                                                        SubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTeacherDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAll(createTeacherDtoArray: CreateTeacherDto[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDtoArray\n                                            \n                                                            CreateTeacherDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Teacher } from './entities/teacher.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { Role } from 'src/user/types';\nimport { SubjectService } from 'src/subject/subject.service';\nimport { AddressService } from 'src/address/address.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\n\n@Injectable()\nexport class TeacherService {\n  constructor(\n    @InjectRepository(Teacher)\n    private teacherRepository: Repository,\n    private readonly userService: UserService,\n    private readonly subjectService: SubjectService,\n    private readonly addressService: AddressService,\n    \n\n  ) {}\n\n  async create(createTeacherDto: any) {\n    console.log('Inside create method...', createTeacherDto);\n    const user = await this.userService.create({\n      username: createTeacherDto.username,\n      password: createTeacherDto.password,\n      role: Role.teacher,\n      \n    });\n    \n    const address = await this.addressService.create({\n      address: createTeacherDto.address,\n      city: createTeacherDto.city,\n      state: createTeacherDto.state,\n      zipCode: createTeacherDto.zipCode,\n      country: createTeacherDto.country,\n    });\n    \n    // Create teacher with the user ID\n    const teacher = this.teacherRepository.create({\n      firstName: createTeacherDto.firstName,\n      lastName: createTeacherDto.lastName,\n      gender: createTeacherDto.gender,\n      dateOfBirth: createTeacherDto.dateOfBirth,\n      mobile: createTeacherDto.mobile,\n      joiningDate: createTeacherDto.joiningDate,\n      qualification: createTeacherDto.qualification,\n      experience: createTeacherDto.experience,\n      email: createTeacherDto.email,\n      user: user.raw[0], // Assign the user entity\n      address: address,\n      subjects:[]\n    });\n   \n    const savedTeacher = await this.teacherRepository.save(teacher);\n    console.log('savedteacher',savedTeacher.subjects)\n\n  // Add subjects to the teacher\n  for (const subjectInfo of createTeacherDto.subjects) {\n    const subject = await this.subjectService.findBySubjectNameAndClassId(subjectInfo.subjectName, subjectInfo.classId);\n    if (subject) {\n      savedTeacher.subjects.push(subject);\n    } else {\n      throw new NotFoundException(`Subject '${subjectInfo.subjectName}' for class '${subjectInfo.classId}' not found`);\n    }\n  }\n\n  // Save the updated teacher entity with associated subjects\n  await this.teacherRepository.save(savedTeacher);\n\n  return savedTeacher;\n  }\n  \n  async createAll(createTeacherDtoArray: CreateTeacherDto[]) {\n    const createdTeachers = [];\n  \n    for (const createTeacherDto of createTeacherDtoArray) {\n      const user = await this.userService.create({\n        username: createTeacherDto.username,\n        password: createTeacherDto.password,\n        role: Role.teacher,\n        \n      });\n      \n      const address = await this.addressService.create({\n        address: createTeacherDto.address,\n        city: createTeacherDto.city,\n        state: createTeacherDto.state,\n        zipCode: createTeacherDto.zipCode,\n        country: createTeacherDto.country,\n      });\n      // Create student with the user ID\n      const teacher = this.teacherRepository.create({\n        firstName: createTeacherDto.firstName,\n        lastName: createTeacherDto.lastName,\n        gender: createTeacherDto.gender,\n        dateOfBirth: createTeacherDto.dateOfBirth,\n        mobile: createTeacherDto.mobile,\n        joiningDate: createTeacherDto.joiningDate,\n        qualification: createTeacherDto.qualification,\n        experience: createTeacherDto.experience,\n        email: createTeacherDto.email,\n        user: user.raw[0], // Assign the user entity\n        address: address,\n        subjects:[]\n      });\n\n      for (const subjectInfo of createTeacherDto.subjects) {\n        const subject = await this.subjectService.findBySubjectNameAndClassId(subjectInfo.subjectName, subjectInfo.classId);\n        if (subject) {\n          teacher.subjects.push(subject);\n        } else {\n          throw new NotFoundException(`Subject '${subjectInfo.subjectName}' for class '${subjectInfo.classId}' not found`);\n        }\n      }\n\n  \n      createdTeachers.push(teacher);\n    }\n  \n    return this.teacherRepository.save(createdTeachers);\n  }\n\n  async findAll() {\n    return this.teacherRepository.createQueryBuilder(\"teacher\")\n      .leftJoinAndSelect(\"teacher.address\", \"address\")\n      .leftJoinAndSelect(\"teacher.user\", \"user\")\n      .getMany();\n  }\n\n  async findOne(id: string) {\n    return this.teacherRepository.createQueryBuilder(\"teacher\")\n      .leftJoinAndSelect(\"teacher.address\", \"address\")\n      .leftJoinAndSelect(\"teacher.user\", \"user\")\n      .where(\"teacher.id = :id\", { id: id })\n      .getOne();\n  }\n\n  async update(id, data) {\n    return this.teacherRepository.createQueryBuilder(\"user\")\n      .update(Teacher)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.teacherRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/timeout.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/timeout.interceptor.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport {\n  catchError,\n  Observable,\n  throwError,\n  timeout,\n  TimeoutError,\n} from 'rxjs';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(1000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => new Error());\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenBody.html":{"url":"interfaces/TokenBody.html","title":"interface - TokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/jwt.storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { TokenStorage } from './token.storage';\n\ninterface TokenBody {\n  readonly type: string;\n  readonly sub: string;\n}\n\n@Injectable()\nexport class JwtStorage implements TokenStorage {\n  private static readonly TOKEN_EXPIRY = '7 days';\n  private static readonly TOKEN_TYPE = 'authentication';\n\n  private readonly jwtService: JwtService;\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  constructor(\n    @Inject(JwtService)\n    jwtService: JwtService,\n    @InjectRepository(User)\n    userRepository: Repository,\n  ) {\n    this.jwtService = jwtService;\n    this.userRepository = userRepository;\n  }\n\n  public async generateToken(user: User): Promise {\n    return this.jwtService.signAsync(\n      {\n        type: JwtStorage.TOKEN_TYPE,\n        sub: user.id,\n      } as TokenBody,\n      {\n        expiresIn: JwtStorage.TOKEN_EXPIRY,\n        secret: 'secretkey'\n      },\n    );\n  }\n\n  public async validateToken(token: string): Promise {\n    const tokenBody: TokenBody = await this.jwtService.verifyAsync(token);\n    if (tokenBody.type !== JwtStorage.TOKEN_TYPE) {\n      throw new Error('Invalid token');\n    }\n\n    return this.userRepository.findOneOrFail({ where: { id: tokenBody.sub } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenGuard.html":{"url":"injectables/TokenGuard.html","title":"injectable - TokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class TokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenStorage.html":{"url":"interfaces/TokenStorage.html","title":"interface - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/token.storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            generateToken\n                                        \n                                \n                                \n                                        \n                                            validateToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../../user/entities/user.entity';\n\nexport interface TokenStorage {\n  readonly generateToken: (user: any) => Promise;\n  readonly validateToken: (token: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAddressDto.html":{"url":"classes/UpdateAddressDto.html","title":"class - UpdateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/dto/update-address.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAddressDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAddressDto } from './create-address.dto';\n\nexport class UpdateAddressDto extends PartialType(CreateAddressDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAttendanceDto.html":{"url":"classes/UpdateAttendanceDto.html","title":"class - UpdateAttendanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAttendanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/dto/update-attendance.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAttendanceLogDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAttendanceLogDto } from './create-attendance.dto';\n\nexport class UpdateAttendanceDto extends PartialType(CreateAttendanceLogDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClassDto.html":{"url":"classes/UpdateClassDto.html","title":"class - UpdateClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/dto/update-class.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateClassDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateClassDto } from './create-class.dto';\n\nexport class UpdateClassDto extends PartialType(CreateClassDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFinalAttendanceDto.html":{"url":"classes/UpdateFinalAttendanceDto.html","title":"class - UpdateFinalAttendanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFinalAttendanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/final_attendance/dto/update-final_attendance.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateFinalAttendanceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateFinalAttendanceDto } from './create-final_attendance.dto';\n\nexport class UpdateFinalAttendanceDto extends PartialType(CreateFinalAttendanceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMarkDto.html":{"url":"classes/UpdateMarkDto.html","title":"class - UpdateMarkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMarkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/dto/update-mark.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateMarkDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMarkDto } from './create-mark.dto';\n\nexport class UpdateMarkDto extends PartialType(CreateMarkDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStudentDto.html":{"url":"classes/UpdateStudentDto.html","title":"class - UpdateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dto/update-student.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateStudentDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateStudentDto } from './create-student.dto';\n\nexport class UpdateStudentDto extends PartialType(CreateStudentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubjectDto.html":{"url":"classes/UpdateSubjectDto.html","title":"class - UpdateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/dto/update-subject.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateSubjectDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSubjectDto } from './create-subject.dto';\n\nexport class UpdateSubjectDto extends PartialType(CreateSubjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/dto/update-teacher.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateTeacherDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Exclude } from 'class-transformer';\nimport { Role } from \"../types\";\n\n@Entity()\nexport class User {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column({\n    unique: true,\n    nullable: false,\n  })\n  username: string;\n\n  @Exclude()\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  readonly password: string;\n\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    default: Role.student,\n  })\n  role: Role;\n\n  @Exclude()\n  @CreateDateColumn()\n  readonly createdAt: Date;\n\n  @Exclude()\n  @UpdateDateColumn()\n  readonly updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findOneByUsername\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(body: CreateUserRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/user')@ResponseMessage('User created successfully')@ApiBody({type: CreateUserRequest, description: 'Create user body'})\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byUsername/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseFilters } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\nimport { UpdateUserDto } from '../../dto/update-user.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from 'src/user/commands/create-user.command';\nimport { CreateUserExceptionFilter } from '../exception-filters/create-user.exception-filter';\nimport { DuplicateUserExceptionFilter } from '../exception-filters/duplicate-user.exception-filter';\nimport { CreateUserRequest } from '../requests/create-user.request';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@Controller('user')\n@ApiTags('User')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly commandBus: CommandBus\n    ) {\n  }\n\n  // @UseFilters(new DuplicateUserExceptionFilter())\n  // @UseFilters(new CreateUserExceptionFilter())\n  // @Post(\"/user\")\n  // @ResponseMessage('User created successfully')\n  // async createUser(@Body() body: CreateUserRequest) {\n  //   // if (body.role !== Role.STAFF_ADMIN ) {\n  //   //   throw new CreateUserException(`You are not allowed to create ${body.role} user`);\n  //   // }\n\n  //   const userdata = await this.commandBus.execute(new CreateUserCommand(body));\n  //   return userdata;\n  // }\n  @Post(\"/user\")\n  @ResponseMessage('User created successfully')\n  @ApiBody({\n    type: CreateUserRequest,\n    description: 'Create user body'\n  })\n  async createUser(@Body() body: CreateUserRequest) {\n    return this.userService.create(body);\n  }\n\n  // @Post()\n  // create(@Body() createUserDto: any) {\n  //   return this.userService.create(createUserDto);\n  // }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get('byUsername/:username')\n  findOneByUsername(@Param('username') username: string) {\n    return this.userService.findOneByUsername(username);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetailResponse.html":{"url":"classes/UserDetailResponse.html","title":"class - UserDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/response/user-detail.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            User\n            \n\n            \n                Implements\n            \n            \n                            IUserResponse\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/http/response/user-detail.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/entities/user.entity';\n\nexport type IUserResponse = Omit;\n\nexport class UserDetailResponse extends User implements IUserResponse {\n  constructor(props?: Partial) {\n    super(props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './http/services/user.service';\nimport { UserController } from './http/controllers/user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { BcryptService } from 'src/authentication/services/bcrypt.service';\nimport { CreateUserHandler } from './commands/handlers/create-user.handler';\n\n@Module({\n  imports: [CqrsModule, TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [CreateUserHandler, BcryptService,UserService],\n  exports: [UserService],\n})\nexport class  UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                changePasswordForUser\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByUsername\n                            \n                            \n                                    Async\n                                findUnregisteredStudents\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcrypt: BcryptService, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/user/http/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcrypt\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(id: number, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePasswordForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePasswordForUser(id: number, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUnregisteredStudents\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUnregisteredStudents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entities/user.entity';\nimport { BcryptService } from 'src/authentication/services/bcrypt.service';\nimport { comparePasswords } from 'src/authentication/http/controllers/authentication.controller';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from 'src/user/commands/create-user.command';\nimport { CreateUserRequest } from '../requests/create-user.request';\nimport { Role } from 'src/user/types';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private readonly bcrypt: BcryptService,\n    private readonly commandBus: CommandBus\n  ) {}\n\n  // async create(createUserDto: any) {\n  //   const user = this.userRepository.create({\n  //     username: createUserDto.username,\n  //     password: createUserDto.password,\n  //     role: createUserDto.role,\n  //   });\n  //   return this.userRepository.save(user);\n  // }\n\n\n    async create(createUserDto: CreateUserRequest) {\n    // Use the command bus logic for user creation\n    const userdata = await this.commandBus.execute(new CreateUserCommand(createUserDto));\n    return userdata;\n  }\n  \n\n  async findAll() {\n    return this.userRepository.createQueryBuilder(\"user\").getMany();\n  }\n\n  async findOne(id: string) {\n    return this.userRepository.findOne({ where: { id: id } });\n  }\n  \n  async findOneByUsername(username: string) {\n    return this.userRepository.findOne({ where: { username: username } });\n  }\n\n  async findUnregisteredStudents(){\n    return this.userRepository.find({\n      where: { role: Role.student },\n    });\n  }\n\n  async changePassword(id: number, data) {\n    const user: any = await this.userRepository\n      .createQueryBuilder(\"user\")\n      .where(\"user.id=:id\", { id: id })\n      .addSelect(\"user.password\")\n      .getOne();\n    const areEqual= await comparePasswords(user.password, data.oldPassword);\n    if (!areEqual) {\n      throw new HttpException(\n        \"Username or password is incorrect\",\n        HttpStatus.NOT_ACCEPTABLE\n      );\n    } else {\n      return this.userRepository.createQueryBuilder(\"user\")\n        .update(User)\n        .where(\"user.id=:id\", { id: +id })\n        .set({\n          password: await this.bcrypt.hashPassword(data.password)\n        })\n        .execute();\n    }\n  }\n\n  async changePasswordForUser(id: number, data) {\n    return this.userRepository.createQueryBuilder(\"user\")\n      .update(User)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        password: await this.bcrypt.hashPassword(data.password)\n      })\n      .execute();\n  }\n\n\n  async update(id, data) {\n    return this.userRepository.createQueryBuilder(\"user\")\n      .update(User)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.userRepository.delete(id);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/address/address.controller.ts\n            \n            controller\n            AddressController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/address/dto/create-address.dto.ts\n            \n            class\n            CreateAddressDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/address/dto/update-address.dto.ts\n            \n            class\n            UpdateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/address/entities/address.entity.ts\n            \n            entity\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/attendance/attendance.controller.ts\n            \n            controller\n            AttendanceLogController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/attendance/attendance.service.ts\n            \n            injectable\n            AttendanceLogService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/attendance/dto/create-attendance.dto.ts\n            \n            class\n            CreateAttendanceLogDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/attendance/dto/update-attendance.dto.ts\n            \n            class\n            UpdateAttendanceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/attendance/entities/attendance.entity.ts\n            \n            entity\n            AttendanceLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/http/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/http/controllers/authentication.controller.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/http/response/user-detail.response.ts\n            \n            class\n            UserDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/http/token.guard.ts\n            \n            injectable\n            TokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/database.strategy.ts\n            \n            injectable\n            DatabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/jwt.strategy.ts\n            \n            class\n            NestJwtStrategy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/providers/token-storage.provider.ts\n            \n            variable\n            TokenStorageProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/services/bcrypt.service.ts\n            \n            class\n            BcryptService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/storage/jwt.storage.ts\n            \n            injectable\n            JwtStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/authentication/storage/jwt.storage.ts\n            \n            interface\n            TokenBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/storage/token.storage.ts\n            \n            interface\n            TokenStorage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/class/class.controller.ts\n            \n            controller\n            ClassController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/class/class.service.ts\n            \n            injectable\n            ClassService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/class/dto/create-class.dto.ts\n            \n            class\n            CreateClassDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/class/dto/update-class.dto.ts\n            \n            class\n            UpdateClassDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/class/entities/class.entity.ts\n            \n            entity\n            Class\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            DATABASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            dbconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.ts\n            \n            variable\n            DATABASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.ts\n            \n            variable\n            dbconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/globalLogger.ts\n            \n            variable\n            globalLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/ormconfig.ts\n            \n            variable\n            connectionSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/pinoLoggerConfig.ts\n            \n            variable\n            loggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/db.config.ts\n            \n            variable\n            DB_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/db.config.ts\n            \n            variable\n            DB_VARS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessageKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/controller.ts/core.controllers.ts\n            \n            controller\n            CoreController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/exception.interceptor.ts\n            \n            injectable\n            ExceptionInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            injectable\n            ResponseTransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            function\n            ResponseTransformInterceptorIgnore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            variable\n            IgnoredPropertyName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/request/request.ts\n            \n            interface\n            Req\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            IErrorBody\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            ItemsBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            PaginationMetaInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            ResourceBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/final_attendance/dto/create-final_attendance.dto.ts\n            \n            class\n            CreateFinalAttendanceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/final_attendance/dto/update-final_attendance.dto.ts\n            \n            class\n            UpdateFinalAttendanceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/final_attendance/entities/final_attendance.entity.ts\n            \n            entity\n            FinalAttendance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/final_attendance/final_attendance.controller.ts\n            \n            controller\n            FinalAttendanceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/final_attendance/final_attendance.service.ts\n            \n            injectable\n            FinalAttendanceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/dto/create-mark.dto.ts\n            \n            class\n            CreateMarkDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/marks/dto/update-mark.dto.ts\n            \n            class\n            UpdateMarkDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/entities/mark.entity.ts\n            \n            entity\n            Marks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/marks.controller.ts\n            \n            controller\n            MarksController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/marks/marks.service.ts\n            \n            injectable\n            MarksService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/student/dto/create-student.dto.ts\n            \n            class\n            CreateStudentDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/student/dto/update-student.dto.ts\n            \n            class\n            UpdateStudentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/entities/student.entity.ts\n            \n            entity\n            Student\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/student/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/subject/dto/create-subject.dto.ts\n            \n            class\n            CreateSubjectDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/subject/dto/update-subject.dto.ts\n            \n            class\n            UpdateSubjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/entities/subject.entity.ts\n            \n            entity\n            Subject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/subject.controller.ts\n            \n            controller\n            SubjectController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/subject/subject.service.ts\n            \n            injectable\n            SubjectService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/entities/teacher.entity.ts\n            \n            entity\n            Teacher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/commands/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/commands/fetch-user-by-id.command.ts\n            \n            class\n            FetchUserByIdCommand\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/commands/handlers/create-user.handler.ts\n            \n            class\n            CreateUserHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/commands/handlers/fetch-user-by-id.command.ts\n            \n            class\n            FetchUserByIdHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/exceptions/create-user.exception.ts\n            \n            class\n            CreateUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/exceptions/duplicate-user.exception.ts\n            \n            class\n            DuplicateUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/http/exception-filters/create-user.exception-filter.ts\n            \n            class\n            CreateUserExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/exception-filters/duplicate-user.exception-filter.ts\n            \n            class\n            DuplicateUserExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/requests/create-user.request.ts\n            \n            class\n            CreateUserRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/http/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            imageFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            pdfFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/password.generator.ts\n            \n            variable\n            passwordGenerator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.2.8\n        \n            @nestjs/schedule : ^4.0.1\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/terminus : ^10.2.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @nestjs/websockets : ^10.2.8\n        \n            @types/bcrypt : ^5.0.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            express-basic-auth : ^1.2.1\n        \n            fast-csv : ^5.0.0\n        \n            joi : ^17.11.0\n        \n            moment : ^2.29.4\n        \n            mysql2 : ^3.6.5\n        \n            nestjs-winston-logger : ^1.1.11\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.3\n        \n            postgresql : ^0.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AttendanceEnum   (src/.../attendance.enum.ts)\n                        \n                        \n                            ContactTypeEnum   (src/.../contact.enum.ts)\n                        \n                        \n                            GenderEnum   (src/.../gender.enum.ts)\n                        \n                        \n                            PriorityEnum   (src/.../priority.enum.ts)\n                        \n                        \n                            ResultEnum   (src/.../result.enum.ts)\n                        \n                        \n                            Role   (src/.../types.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            UserTypeEnum   (src/.../user-type.enum.ts)\n                        \n                        \n                            UserTypeEnum   (src/.../user-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enums/attendance.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AttendanceEnum\n                    \n                \n                        \n                            \n                                 PRESENT\n                            \n                        \n                        \n                            \n                                Value : PRESENT\n                            \n                        \n                        \n                            \n                                 ABSENT\n                            \n                        \n                        \n                            \n                                Value : ABSENT\n                            \n                        \n            \n        \n\n    src/utils/enums/contact.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactTypeEnum\n                    \n                \n                        \n                            \n                                 PRIMARY\n                            \n                        \n                        \n                            \n                                Value : PRIMARY\n                            \n                        \n                        \n                            \n                                 SECONDARY\n                            \n                        \n                        \n                            \n                                Value : SECONDARY\n                            \n                        \n            \n        \n\n    src/utils/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GenderEnum\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 OTHERS\n                            \n                        \n                        \n                            \n                                Value : OTHERS\n                            \n                        \n            \n        \n\n    src/common/enums/priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriorityEnum\n                    \n                \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : HIGH\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : MEDIUM\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : LOW\n                            \n                        \n            \n        \n\n    src/common/enums/result.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResultEnum\n                    \n                \n                        \n                            \n                                 PASS\n                            \n                        \n                        \n                            \n                                Value : PASS\n                            \n                        \n                        \n                            \n                                 FAIL\n                            \n                        \n                        \n                            \n                                Value : FAIL\n                            \n                        \n            \n        \n\n    src/user/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n            \n        \n\n    src/common/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/utils/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/common/enums/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n    src/utils/enums/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ResponseTransformInterceptorIgnore   (src/.../response-transform.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/http/interceptors/response-transform.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResponseTransformInterceptorIgnore\n                        \n                    \n                \n            \n            \n                \nResponseTransformInterceptorIgnore()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AttendanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClassModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FinalAttendanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_exports\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AttendanceModule\n\n\n\ncluster_AttendanceModule_exports\n\n\n\ncluster_AttendanceModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_ClassModule\n\n\n\ncluster_ClassModule_exports\n\n\n\ncluster_ClassModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FinalAttendanceModule\n\n\n\ncluster_FinalAttendanceModule_exports\n\n\n\ncluster_FinalAttendanceModule_providers\n\n\n\ncluster_MarksModule\n\n\n\ncluster_MarksModule_exports\n\n\n\ncluster_MarksModule_providers\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_exports\n\n\n\ncluster_StudentModule_providers\n\n\n\ncluster_SubjectModule\n\n\n\ncluster_SubjectModule_exports\n\n\n\ncluster_SubjectModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAddressService \n\nAddressService \n\n\n\nAddressModule\n\nAddressModule\n\nAddressService  -->\n\nAddressModule->AddressService \n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nAddressModule->TeacherModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nFinalAttendanceModule\n\nFinalAttendanceModule\n\nFinalAttendanceModule -->\n\nAttendanceModule->FinalAttendanceModule\n\n\n\nAppModule -->\n\nAttendanceModule->AppModule\n\n\n\n\n\nAttendanceLogService \n\nAttendanceLogService \n\nAttendanceLogService  -->\n\nAttendanceModule->AttendanceLogService \n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nAuthenticationModule->BcryptService \n\n\n\n\n\nJwtStorage \n\nJwtStorage \n\nJwtStorage  -->\n\nAuthenticationModule->JwtStorage \n\n\n\n\n\nClassModule\n\nClassModule\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nClassModule->StudentModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nSubjectModule -->\n\nClassModule->SubjectModule\n\n\n\nAppModule -->\n\nClassModule->AppModule\n\n\n\n\n\nClassService \n\nClassService \n\nClassService  -->\n\nClassModule->ClassService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthenticationModule -->\n\nCoreModule->AuthenticationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nFinalAttendanceModule->AppModule\n\n\n\n\n\nFinalAttendanceService \n\nFinalAttendanceService \n\nFinalAttendanceService  -->\n\nFinalAttendanceModule->FinalAttendanceService \n\n\n\n\n\nMarksModule\n\nMarksModule\n\nAppModule -->\n\nMarksModule->AppModule\n\n\n\n\n\nMarksService \n\nMarksService \n\nMarksService  -->\n\nMarksModule->MarksService \n\n\n\nAttendanceModule -->\n\nStudentModule->AttendanceModule\n\n\n\nFinalAttendanceModule -->\n\nStudentModule->FinalAttendanceModule\n\n\n\nMarksModule -->\n\nStudentModule->MarksModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nStudentService \n\nStudentService \n\nStudentService  -->\n\nStudentModule->StudentService \n\n\n\nMarksModule -->\n\nSubjectModule->MarksModule\n\n\n\nTeacherModule -->\n\nSubjectModule->TeacherModule\n\n\n\nAppModule -->\n\nSubjectModule->AppModule\n\n\n\n\n\nSubjectService \n\nSubjectService \n\nSubjectService  -->\n\nSubjectModule->SubjectService \n\n\n\nAppModule -->\n\nTeacherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nFinalAttendanceModule -->\n\nUserModule->FinalAttendanceModule\n\n\n\nStudentModule -->\n\nUserModule->StudentModule\n\n\n\nTeacherModule -->\n\nUserModule->TeacherModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAttendanceLogService\n\nAttendanceLogService\n\nAttendanceModule -->\n\nAttendanceLogService->AttendanceModule\n\n\n\n\n\nDatabaseStrategy\n\nDatabaseStrategy\n\nAuthenticationModule -->\n\nDatabaseStrategy->AuthenticationModule\n\n\n\n\n\nJwtStorage\n\nJwtStorage\n\nAuthenticationModule -->\n\nJwtStorage->AuthenticationModule\n\n\n\n\n\nClassService\n\nClassService\n\nClassModule -->\n\nClassService->ClassModule\n\n\n\n\n\nResponseTransformInterceptor\n\nResponseTransformInterceptor\n\nCoreModule -->\n\nResponseTransformInterceptor->CoreModule\n\n\n\n\n\nFinalAttendanceService\n\nFinalAttendanceService\n\nFinalAttendanceModule -->\n\nFinalAttendanceService->FinalAttendanceModule\n\n\n\n\n\nMarksService\n\nMarksService\n\nMarksModule -->\n\nMarksService->MarksModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\nSubjectService\n\nSubjectService\n\nSubjectModule -->\n\nSubjectService->SubjectModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ISuccessBody   (src/.../types.ts)\n                        \n                        \n                            IUserResponse   (src/.../user-detail.response.ts)\n                        \n                        \n                            ValidationErrors   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/http/response/types.ts\n    \n    \n        \n            \n                \n                    \n                    ISuccessBody\n                \n            \n            \n                \n                        ResourceBody | ItemsBody\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValidationErrors\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/authentication/http/response/user-detail.response.ts\n    \n    \n        \n            \n                \n                    \n                    IUserResponse\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            comparePasswords   (src/.../authentication.controller.ts)\n                        \n                        \n                            connectionSource   (src/.../ormconfig.ts)\n                        \n                        \n                            DATABASE_URL   (src/.../database.config.ts)\n                        \n                        \n                            DATABASE_URL   (src/.../database.ts)\n                        \n                        \n                            DB_CONFIG   (src/.../db.config.ts)\n                        \n                        \n                            DB_VARS   (src/.../db.config.ts)\n                        \n                        \n                            dbconfig   (src/.../database.config.ts)\n                        \n                        \n                            dbconfig   (src/.../database.ts)\n                        \n                        \n                            editFileName   (src/.../images.utils.ts)\n                        \n                        \n                            globalLogger   (src/.../globalLogger.ts)\n                        \n                        \n                            IgnoredPropertyName   (src/.../response-transform.interceptor.ts)\n                        \n                        \n                            imageFileFilter   (src/.../images.utils.ts)\n                        \n                        \n                            loggerConfig   (src/.../pinoLoggerConfig.ts)\n                        \n                        \n                            passwordGenerator   (src/.../password.generator.ts)\n                        \n                        \n                            pdfFileFilter   (src/.../images.utils.ts)\n                        \n                        \n                            ResponseMessage   (src/.../response.decorator.ts)\n                        \n                        \n                            ResponseMessageKey   (src/.../response.decorator.ts)\n                        \n                        \n                            TokenStorageProvider   (src/.../token-storage.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authentication/http/controllers/authentication.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  ...database,\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  migrationsRun: true,\n  migrations: [__dirname + '/../migrations/**/*.ts'],\n} as DataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbconfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port:\n    (process.env.DATABASE_PORT && parseInt(process.env.DATABASE_PORT, 10)) ||\n    3306,\n  database: process.env.DATABASE_NAME,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: process.env.DATABASE_SCHEMA_SYNC === 'true',\n  autoLoadEntities: true,\n  bigNumberStrings: false,\n  // logging: process.env.TYPEORM_QUERY_LOGGING === 'true',\n  // extra: {\n  //   max: (process.env.DB_CONNECTION_POOL_MAX && parseInt(process.env.DB_CONNECTION_POOL_MAX, 10)) || 5,\n  // },\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/config/database.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbconfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.DATABASE_HOST,\n  port:\n    (process.env.DATABASE_PORT && parseInt(process.env.DATABASE_PORT, 10)) ||\n    3306,\n  database: process.env.DATABASE_NAME,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: process.env.DATABASE_SCHEMA_SYNC === 'true',\n  autoLoadEntities: true,\n  bigNumberStrings: false,\n  // logging: process.env.TYPEORM_QUERY_LOGGING === 'true',\n  // extra: {\n  //   max: (process.env.DB_CONNECTION_POOL_MAX && parseInt(process.env.DB_CONNECTION_POOL_MAX, 10)) || 5,\n  // },\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/core/config/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `mongodb+srv://${DB_VARS.username}:${DB_VARS.password}@${DB_VARS.host}/?retryWrites=true&w=majority`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_VARS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  host: process.env.DB_HOST,\n  port: process.env.DB_PORT,\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/images.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  const name = file.originalname.split('.')[0];\n  const fileExtName = extname(file.originalname);\n  const randomName = Array(4)\n    .fill(null)\n    .map(() => Math.round(Math.random() * 16).toString(16))\n    .join('');\n  return callback(null, `${name}-${randomName}${fileExtName}`);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (!file.originalname.match(/\\.(SVG|svg|JPG|JPEG|PNG|jpg|jpeg|png|gif)$/)) {\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n  return callback(null, true);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (\n    !file.originalname.match(\n      /\\.(SVG|svg|JPG|JPEG|PNG|jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$/,\n    )\n  ) {\n    return callback(\n      new Error('Only image files and document files are allowed!'),\n      false,\n    );\n  }\n  return callback(null, true);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/globalLogger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NestjsWinstonLoggerService({\n  format: format.combine(\n    format.timestamp({ format: 'isoDateTime' }),\n    format.json(),\n    format.colorize({ all: true }),\n  ),\n  transports: [\n    new transports.File({\n      filename: 'Logs/error.log',\n      level: 'error',\n      maxsize: 20,\n      maxFiles: 14,\n    }),\n    // new transports.File({ filename: 'combined.log' }),\n    new transports.Console({\n      format: winston.format.simple(),\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/core/http/interceptors/response-transform.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IgnoredPropertyName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IgnoredPropertyName')\n                    \n                \n\n\n        \n    \n\n    src/config/pinoLoggerConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  pinoHttp: {\n    transport: {\n      target: 'pino-pretty',\n      options: {\n        colorize: true,\n        singleLine: true,\n        messageFormat:\n          '{req.headers.host} - {req.method} {req.url} {res.statusCode} - {responseTime} ms',\n      },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/password.generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const chars =\n    '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const passwordLength = 12;\n  let password = '';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/core/decorators/response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(ResponseMessageKey, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ResponseMessageKey'\n                    \n                \n\n\n        \n    \n\n    src/authentication/providers/token-storage.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TokenStorageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  provide: 'TokenStorage',\n  useClass: JwtStorage,\n} as Provider\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
