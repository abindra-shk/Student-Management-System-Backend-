var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.342,1,3.021]],["body/controllers/AppController.html",[0,2.166,1,4.877,2,1.727,3,0.166,4,0.149,5,0.133,6,4.657,7,0.726,8,1.738,9,6.693,10,2.112,11,0.012,12,0.921,13,5.325,14,1.386,15,1.156,16,0.535,17,0.952,18,4.67,19,4.657,20,0.183,21,0.173,22,3.22,23,1.303,24,1.344,25,5.325,26,0.009,27,0.009]],["title/modules/AppModule.html",[28,1.342,29,3.021]],["body/modules/AppModule.html",[1,3.75,2,1.372,3,0.086,4,0.078,5,0.069,11,0.012,16,0.63,17,0.495,18,4.177,19,2.423,20,0.095,21,0.09,26,0.006,27,0.006,28,1.665,29,5.984,30,1.227,31,1.276,32,1.385,33,1.385,34,1.276,35,2.566,36,1.385,37,2.423,38,2.423,39,2.423,40,4.445,41,4.445,42,4.445,43,4.177,44,4.445,45,4.445,46,4.445,47,4.445,48,3.948,49,2.115,50,1.385,51,1.385,52,2.771,53,2.429,54,2.771,55,1.773,56,1.182,57,2.771,58,2.771,59,2.423,60,2.423,61,2.771,62,2.423,63,1.676,64,2.771,65,2.771,66,2.771,67,2.771,68,2.771,69,2.771,70,2.771,71,2.194,72,2.771,73,2.771,74,0.577,75,3.701,76,3.09,77,4.232,78,3.701,79,4.232,80,1.874,81,3.701,82,1.805,83,4.232,84,3.701,85,4.232,86,2.559,87,4.232,88,3.701,89,3.678,90,3.701,91,2.771,92,2.771,93,2.423,94,2.771]],["title/injectables/AppService.html",[18,2.647,95,0.981]],["body/injectables/AppService.html",[3,0.175,4,0.157,5,0.14,7,0.763,8,1.792,9,6.81,11,0.012,12,0.968,14,1.456,15,1.192,16,0.448,17,1,18,4.407,20,0.192,21,0.182,24,1.411,26,0.01,27,0.01,95,1.634,96,2.3,97,4.892,98,5.594,99,5.594,100,5.594]],["title/classes/Attendance.html",[21,0.134,101,2.817]],["body/classes/Attendance.html",[3,0.197,4,0.177,5,0.158,11,0.011,20,0.217,21,0.205,26,0.01,27,0.01,101,5.046,102,1.644,103,5.526]],["title/controllers/AttendanceController.html",[0,1.342,104,3.021]],["body/controllers/AttendanceController.html",[0,1.104,2,1.104,3,0.106,4,0.096,5,0.085,7,0.464,8,1.284,10,2.68,11,0.012,12,1.169,14,1.758,15,1.312,16,0.51,17,0.609,20,0.117,21,0.111,22,2.059,23,0.833,24,1.704,26,0.007,27,0.007,74,0.868,101,2.319,104,3.603,105,2.978,106,1.955,107,1.55,108,2.818,109,2.185,110,2.185,111,2.185,112,2.978,113,4.507,114,3.331,115,3.406,116,1.606,117,1.557,118,1.509,119,3.406,120,1.508,121,2.984,122,3.406,123,2.438,124,1.508,125,2.984,126,3.406,127,1.508,128,5.067,129,2.984,130,3.406,131,2.984,132,2.059,133,2.059,134,2.059,135,3.714,136,2.978,137,1.702,138,3.908,139,1.702,140,3.406,141,2.059,142,3.406,143,3.406,144,2.059,145,3.406,146,2.059,147,3.406,148,2.059,149,3.406]],["title/modules/AttendanceModule.html",[28,1.342,40,2.817]],["body/modules/AttendanceModule.html",[2,2.108,3,0.159,4,0.143,5,0.127,11,0.012,16,0.573,17,0.912,20,0.175,21,0.166,26,0.009,27,0.009,28,2.32,30,2.259,31,2.349,32,2.55,33,2.55,34,2.349,35,3.576,36,2.55,40,5.417,49,3.249,50,2.55,51,2.55,104,5.225,135,5.091,136,4.462,150,4.462,151,4.462,152,5.102,153,5.102]],["title/injectables/AttendanceService.html",[95,0.981,135,2.647]],["body/injectables/AttendanceService.html",[3,0.113,4,0.102,5,0.091,7,0.495,8,1.344,11,0.012,12,1.198,14,1.927,15,1.198,16,0.482,17,0.649,20,0.125,21,0.118,24,1.747,26,0.007,27,0.007,74,0.894,95,1.225,96,1.492,101,4.715,107,1.622,108,2.902,109,2.287,110,2.287,111,2.287,112,4.517,113,4.431,116,1.653,117,1.603,118,1.554,120,2.287,123,2.491,124,2.287,127,2.287,128,5.042,135,3.305,137,1.813,138,4.09,139,1.813,154,3.173,155,3.629,156,3.629,157,3.166,158,3.629,159,3.629,160,3.629,161,5.056,162,2.65,163,1.492,164,2.65,165,2.65]],["title/controllers/AuthenticationController.html",[0,1.342,166,3.021]],["body/controllers/AuthenticationController.html",[0,1.033,2,0.628,3,0.06,4,0.054,5,0.048,7,0.264,8,0.829,10,1.264,11,0.012,12,0.702,14,1.056,15,0.813,16,0.54,17,0.346,20,0.11,21,0.063,23,0.78,24,1.311,26,0.004,27,0.004,56,0.826,74,0.805,80,2.3,82,2.005,114,1.112,116,1.024,117,0.993,118,0.963,123,1.404,163,2.535,166,2.327,167,1.535,168,2.572,169,4.058,170,2.731,171,3.187,172,3.187,173,1.938,174,1.938,175,1.938,176,4.087,177,1.938,178,2.523,179,1.938,180,2.17,181,3.187,182,1.938,183,1.938,184,2.787,185,1.415,186,1.32,187,1.415,188,1.938,189,1.695,190,1.172,191,2.17,192,4.058,193,1.535,194,0.929,195,1.768,196,1.012,197,2.218,198,1.535,199,1.938,200,3.433,201,1.938,202,1.938,203,1.112,204,1.742,205,0.892,206,2.963,207,1.32,208,1.938,209,0.769,210,1.535,211,1.24,212,1.24,213,2.119,214,2.804,215,2.523,216,1.938,217,2.523,218,1.535,219,5.195,220,1.938,221,1.938,222,1.938,223,3.187,224,2.787,225,1.14,226,3.187,227,1.938,228,4.087,229,2.839,230,3.187,231,3.214,232,3.187,233,3.187,234,4.058,235,4.058,236,4.058,237,4.058,238,4.058,239,4.058,240,1.938,241,3.187,242,1.535,243,1.938,244,3.141,245,1.938,246,1.938,247,5.195,248,1.938,249,3.187,250,1.32,251,1.32,252,1.938,253,1.938,254,1.938,255,1.938,256,1.938,257,1.535,258,1.695,259,1.535,260,1.938,261,2.787,262,1.695,263,1.938,264,1.695,265,1.415,266,2.787,267,1.695,268,1.695]],["title/modules/AuthenticationModule.html",[28,1.342,41,2.817]],["body/modules/AuthenticationModule.html",[2,1.668,3,0.113,4,0.101,5,0.09,11,0.012,16,0.644,17,0.645,20,0.124,21,0.117,26,0.007,27,0.007,28,1.944,30,1.597,31,1.661,32,1.803,33,1.803,34,1.661,35,2.996,36,2.996,41,5.429,43,4.596,49,2.57,50,1.803,51,1.803,53,2.952,55,2.308,56,1.538,60,3.155,166,4.377,190,2.181,195,0.91,196,1.883,206,2.634,207,2.456,269,3.155,270,3.155,271,3.155,272,3.607,273,4.131,274,4.821,275,4.704,276,3.607,277,3.607,278,3.502,279,3.607,280,3.607,281,3.155,282,4.073,283,3.607,284,3.607,285,3.607,286,3.607,287,4.498,288,2.181,289,3.155,290,3.607,291,3.607,292,2.634,293,3.607]],["title/classes/BcryptService.html",[21,0.134,273,2.262]],["body/classes/BcryptService.html",[3,0.12,4,0.108,5,0.096,7,0.523,8,1.397,11,0.012,12,1.162,14,1.613,15,1.268,16,0.43,20,0.132,21,0.125,23,1.516,24,1.564,26,0.008,27,0.008,74,0.916,82,3.015,102,0.998,116,1.564,117,1.516,118,1.47,157,2.208,168,2.853,170,2.744,191,3.656,195,2.015,196,2.002,225,1.921,229,1.765,259,3.036,273,2.936,294,3.353,295,4.908,296,6.197,297,5.37,298,5.37,299,5.37,300,2.8,301,2.8,302,3.921,303,3.834,304,5.37,305,3.834,306,4.005,307,5.37,308,3.834,309,5.37,310,3.834,311,3.834,312,3.834,313,3.834,314,3.834]],["title/controllers/ClassController.html",[0,1.342,315,3.021]],["body/controllers/ClassController.html",[0,1.104,2,1.104,3,0.106,4,0.096,5,0.085,7,0.464,8,1.284,10,2.68,11,0.012,12,1.169,14,1.758,15,1.312,16,0.51,17,0.609,20,0.117,21,0.16,22,2.059,23,0.833,24,1.704,26,0.007,27,0.007,74,0.868,106,1.955,107,1.55,108,2.818,109,2.185,110,2.185,111,2.185,114,3.331,116,1.606,117,1.557,118,1.509,120,1.508,121,2.984,123,2.438,124,1.508,125,2.984,127,1.508,129,2.984,131,2.984,132,2.059,133,2.059,134,2.059,137,1.702,139,1.702,141,2.059,144,2.059,146,2.059,148,2.059,315,3.603,316,2.978,317,2.978,318,4.507,319,3.406,320,3.406,321,3.406,322,3.406,323,5.067,324,3.406,325,3.714,326,2.978,327,3.908,328,3.406,329,3.406,330,3.406,331,3.406,332,3.406,333,3.406]],["title/entities/ClassEntity.html",[334,2.068,335,3.021]],["body/entities/ClassEntity.html",[3,0.161,4,0.144,5,0.128,7,0.702,10,2.593,11,0.012,12,1.131,15,1.131,16,0.524,20,0.177,21,0.167,26,0.009,27,0.009,74,0.891,86,3.112,123,2.486,157,2.687,205,2.369,225,2.339,334,3.267,335,4.773,336,4.5,337,5.245,338,5.245,339,5.145,340,5.245,341,5.145,342,5.145,343,2.953,344,5.145]],["title/modules/ClassModule.html",[28,1.342,42,2.817]],["body/modules/ClassModule.html",[2,2.043,3,0.152,4,0.136,5,0.121,11,0.012,16,0.614,17,0.868,20,0.167,21,0.158,26,0.009,27,0.009,28,2.267,30,2.151,31,2.237,32,2.428,33,2.428,34,2.237,35,3.494,36,2.428,42,5.348,49,3.148,50,2.428,51,2.428,53,2.789,55,3.109,56,2.072,315,5.105,325,5.025,326,4.249,335,3.547,345,4.249,346,4.249,347,4.858,348,4.858,349,4.858,350,4.858]],["title/injectables/ClassService.html",[95,0.981,325,2.647]],["body/injectables/ClassService.html",[3,0.113,4,0.102,5,0.091,7,0.495,8,1.344,11,0.012,12,1.198,14,1.927,15,1.198,16,0.482,17,0.649,20,0.125,21,0.234,24,1.747,26,0.007,27,0.007,74,0.894,95,1.225,96,1.492,107,1.622,108,2.902,109,2.287,110,2.287,111,2.287,116,1.653,117,1.603,118,1.554,120,2.287,123,2.491,124,2.287,127,2.287,137,1.813,139,1.813,157,3.166,161,5.056,162,2.65,163,1.492,164,2.65,165,2.65,317,4.517,318,4.431,323,5.042,325,3.305,327,4.09,351,3.173,352,3.629,353,3.629,354,3.629,355,3.629,356,3.629]],["title/controllers/CoreController.html",[0,1.342,357,3.021]],["body/controllers/CoreController.html",[0,2.142,2,1.697,3,0.163,4,0.147,5,0.131,7,0.714,8,1.719,10,2.076,11,0.012,12,0.906,14,1.362,15,0.906,16,0.529,17,0.935,20,0.18,21,0.17,24,1.32,26,0.009,27,0.009,193,4.145,194,2.508,357,4.825,358,4.577,359,6.651,360,6.607,361,5.234,362,4.228,363,5.234,364,5.234,365,5.234]],["title/modules/CoreModule.html",[28,1.342,43,2.647]],["body/modules/CoreModule.html",[2,2.08,3,0.156,4,0.14,5,0.125,11,0.012,16,0.568,17,0.893,20,0.172,21,0.162,26,0.009,27,0.009,28,2.298,30,2.213,31,2.301,32,2.498,33,2.498,34,2.301,35,3.541,36,3.206,43,5.063,49,3.206,50,2.498,51,2.498,53,2.869,357,5.174,366,4.371,367,4.371,368,5.388,369,4.998,370,4.998,371,4.371,372,4.998]],["title/classes/CreateAttendanceDto.html",[21,0.134,113,2.647]],["body/classes/CreateAttendanceDto.html",[3,0.196,4,0.176,5,0.157,11,0.011,20,0.216,21,0.204,26,0.01,27,0.01,102,1.636,113,4.728,373,5.498,374,4.978]],["title/classes/CreateClassDto.html",[21,0.134,318,2.647]],["body/classes/CreateClassDto.html",[3,0.196,4,0.176,5,0.157,11,0.011,20,0.216,21,0.204,26,0.01,27,0.01,102,1.636,318,4.728,375,5.498,376,4.978]],["title/classes/CreateMarkDto.html",[21,0.134,377,2.647]],["body/classes/CreateMarkDto.html",[3,0.196,4,0.176,5,0.157,11,0.011,20,0.216,21,0.204,26,0.01,27,0.01,102,1.636,377,4.728,378,5.498,379,4.978]],["title/classes/CreateStudentDto.html",[21,0.134,380,2.647]],["body/classes/CreateStudentDto.html",[3,0.117,4,0.105,5,0.093,7,0.51,11,0.012,12,1.389,15,1.449,16,0.3,20,0.129,21,0.122,23,1.496,26,0.007,27,0.007,74,1.095,80,2.708,82,2.608,102,0.973,225,1.888,337,4.465,380,3.377,381,7.075,382,2.962,383,4.842,384,3.913,385,3.913,386,3.913,387,4.842,388,4.842,389,3.913,390,3.795,391,4.842,392,3.74,393,3.74,394,3.593,395,3.74,396,3.74,397,3.74,398,3.74,399,3.74,400,3.74,401,3.74,402,3.74,403,3.74,404,3.74,405,2.731]],["title/classes/CreateSubjectDto.html",[21,0.134,406,2.647]],["body/classes/CreateSubjectDto.html",[3,0.196,4,0.176,5,0.157,11,0.011,20,0.216,21,0.204,26,0.01,27,0.01,102,1.636,406,4.728,407,5.498,408,4.978]],["title/classes/CreateTeacherDto.html",[21,0.134,409,2.647]],["body/classes/CreateTeacherDto.html",[3,0.117,4,0.105,5,0.093,7,0.51,11,0.012,12,1.389,15,1.426,16,0.3,20,0.129,21,0.122,23,1.496,26,0.007,27,0.007,74,1.095,80,2.708,82,2.608,102,0.973,157,2.169,225,1.888,384,3.913,385,3.913,386,3.913,389,3.913,390,3.795,394,4.522,405,2.731,409,3.377,410,7.075,411,2.962,412,4.465,413,4.842,414,4.842,415,4.842,416,4.842,417,3.74,418,3.74,419,3.74,420,3.74,421,3.74,422,3.74,423,3.74,424,3.74,425,3.74,426,3.74,427,3.74,428,3.74]],["title/classes/CreateUserCommand.html",[21,0.134,429,2.647]],["body/classes/CreateUserCommand.html",[3,0.165,4,0.148,5,0.132,11,0.012,12,0.913,15,1.15,16,0.423,20,0.182,21,0.172,23,1.866,26,0.009,27,0.009,74,0.991,80,2.338,82,2.251,102,1.374,116,1.332,117,1.291,118,1.252,209,2.635,213,3.468,390,3.795,429,4.251,430,4.851,431,4.617,432,5.279,433,5.81,434,5.279,435,3.595]],["title/classes/CreateUserDto.html",[21,0.134,436,2.647]],["body/classes/CreateUserDto.html",[3,0.163,4,0.147,5,0.131,7,0.714,11,0.012,12,1.253,15,1.316,16,0.419,20,0.18,21,0.17,26,0.009,27,0.009,74,0.988,80,3.206,82,3.088,102,1.362,225,2.364,390,4.181,435,3.564,436,4.228,437,6.651,438,4.145,439,5.234,440,5.234,441,5.234]],["title/classes/CreateUserException.html",[21,0.134,442,3.021]],["body/classes/CreateUserException.html",[3,0.174,4,0.156,5,0.139,11,0.012,12,0.964,15,1.188,20,0.192,21,0.181,26,0.01,27,0.01,74,0.759,102,1.449,107,1.749,116,1.405,117,1.362,118,1.321,195,1.405,209,2.209,251,4.676,362,3.563,442,5.015,443,6.006,444,4.41,445,2.929,446,6.006,447,4.87,448,4.87]],["title/classes/CreateUserExceptionFilter.html",[21,0.134,449,3.021]],["body/classes/CreateUserExceptionFilter.html",[3,0.138,4,0.124,5,0.111,7,0.605,8,1.544,11,0.012,12,0.767,14,1.154,16,0.572,17,0.793,20,0.152,21,0.144,26,0.008,27,0.008,63,2.681,74,0.605,76,4.881,102,1.154,107,1.392,116,1.119,117,1.085,118,1.052,185,3.238,195,1.119,214,2.53,250,4.552,442,5.212,449,4.331,450,4.697,451,4.697,452,4.552,453,3.511,454,3.097,455,5.846,456,5.188,457,6.242,458,3.878,459,3.511,460,5.188,461,4.434,462,3.405,463,3.878,464,4.434,465,3.878,466,3.878,467,3.878,468,3.878,469,2.837,470,2.681,471,3.878,472,2.837,473,3.878]],["title/classes/CreateUserHandler.html",[21,0.134,474,3.021]],["body/classes/CreateUserHandler.html",[3,0.111,4,0.1,5,0.089,7,0.486,8,1.327,11,0.012,12,0.883,14,0.928,16,0.59,20,0.123,21,0.116,23,1.248,24,0.899,26,0.007,27,0.007,56,1.52,74,0.696,80,1.579,82,1.52,102,0.928,107,1.119,116,1.287,117,1.248,118,1.21,157,1.466,163,2.097,168,2.348,170,2.637,191,4.055,195,1.502,203,2.046,204,3.553,205,1.641,209,2.023,211,2.281,212,3.264,214,1.52,229,2.992,231,4.039,244,3.084,273,3.553,288,2.156,306,2.788,429,4.159,452,2.427,454,2.663,474,3.724,475,5.208,476,3.118,477,5.208,478,3.473,479,2.823,480,3.565,481,4.46,482,3.565,483,2.823,484,3.118,485,2.823,486,3.565,487,2.427,488,3.118,489,2.823,490,3.565,491,3.565,492,3.565,493,4.46,494,4.46,495,5.1,496,3.565,497,3.565,498,3.565,499,3.565,500,3.565,501,3.565]],["title/classes/CreateUserRequest.html",[21,0.134,502,2.817]],["body/classes/CreateUserRequest.html",[3,0.132,4,0.118,5,0.105,7,0.575,10,2.585,11,0.012,12,1.128,15,1.21,16,0.522,20,0.145,21,0.186,23,1.948,26,0.008,27,0.008,74,0.889,80,2.886,82,2.78,102,1.098,194,2.022,225,2.052,362,3.671,390,4.158,435,2.873,502,3.906,503,6.117,504,3.69,505,5.736,506,4.219,507,4.219,508,4.219,509,5.736,510,5.017,511,4.219,512,4.219,513,4.219,514,4.219,515,6.994,516,4.219,517,6.518,518,3.69,519,6.994,520,3.69,521,4.219]],["title/injectables/DatabaseStrategy.html",[95,0.981,275,2.817]],["body/injectables/DatabaseStrategy.html",[3,0.107,4,0.097,5,0.086,7,0.47,8,1.295,11,0.012,12,0.861,14,0.896,15,1.224,16,0.584,17,0.616,20,0.118,21,0.112,23,1.217,24,0.869,26,0.007,27,0.007,56,1.469,74,0.679,80,3.005,82,3.016,95,1.18,96,1.416,116,1.255,117,1.217,118,1.18,163,2.401,168,2.291,170,2.587,190,2.083,195,1.614,196,1.798,203,1.977,204,3.497,205,1.586,209,1.973,211,2.204,212,3.184,214,1.469,229,2.291,244,3.532,258,3.012,259,2.727,273,3.986,275,3.388,281,3.012,306,2.72,412,2.515,445,2.122,479,2.727,510,4.351,522,3.012,523,4.975,524,4.975,525,3.444,526,4.975,527,3.444,528,3.444,529,2.727,530,2.515,531,3.012,532,2.727,533,2.727,534,2.515,535,3.444,536,3.444,537,3.444,538,3.012,539,4.975,540,3.444,541,3.444,542,3.444,543,3.444,544,3.444,545,3.444,546,3.012,547,3.012,548,3.444,549,3.444]],["title/classes/DuplicateUserException.html",[21,0.134,487,2.817]],["body/classes/DuplicateUserException.html",[3,0.173,4,0.156,5,0.138,11,0.012,12,0.959,15,1.185,20,0.191,21,0.18,26,0.01,27,0.01,74,0.756,102,1.442,116,1.399,117,1.356,118,1.315,195,1.399,209,2.199,251,4.663,362,3.547,444,4.39,445,2.921,446,5.989,447,4.848,448,4.848,487,4.663,493,4.848,494,4.848,550,5.989]],["title/classes/DuplicateUserExceptionFilter.html",[21,0.134,551,3.021]],["body/classes/DuplicateUserExceptionFilter.html",[3,0.138,4,0.124,5,0.111,7,0.605,8,1.544,11,0.012,12,0.767,14,1.154,16,0.572,17,0.793,20,0.152,21,0.144,26,0.008,27,0.008,63,2.681,74,0.605,76,4.881,102,1.154,116,1.119,117,1.085,118,1.052,185,3.238,195,1.119,214,2.53,250,4.552,450,4.697,452,4.552,453,3.511,454,3.097,455,5.846,456,5.188,457,6.242,458,3.878,459,3.511,460,5.188,462,3.405,463,3.878,465,3.878,466,3.878,467,3.878,468,3.878,469,2.837,470,2.681,471,3.878,472,2.837,473,3.878,487,4.86,488,3.878,551,4.331,552,4.697,553,4.434,554,4.434]],["title/injectables/ExceptionInterceptor.html",[95,0.981,555,3.276]],["body/injectables/ExceptionInterceptor.html",[3,0.151,4,0.136,5,0.121,7,0.66,8,1.635,11,0.012,12,0.837,14,1.259,16,0.504,17,0.865,20,0.166,21,0.157,24,1.221,26,0.009,27,0.009,74,0.66,95,1.49,96,1.989,116,1.221,117,1.184,118,1.148,163,1.989,454,2.526,555,4.976,556,4.232,557,4.976,558,4.976,559,5.849,560,5.849,561,5.849,562,4.839,563,3.832,564,5.526,565,6.284,566,4.976,567,4.232,568,5.495,569,3.533,570,4.839,571,4.839]],["title/classes/FetchUserByIdCommand.html",[21,0.134,572,3.021]],["body/classes/FetchUserByIdCommand.html",[3,0.178,4,0.16,5,0.142,11,0.011,12,0.986,15,1.302,20,0.196,21,0.185,26,0.01,27,0.01,74,0.777,102,1.483,116,1.438,117,1.394,118,1.352,195,1.758,209,2.26,572,5.086,573,6.092,574,4.513,575,5.699,576,5.699,577,6.966,578,5.699]],["title/classes/FetchUserByIdHandler.html",[21,0.134,579,3.276]],["body/classes/FetchUserByIdHandler.html",[3,0.157,4,0.141,5,0.125,7,0.684,8,1.674,11,0.012,12,0.868,14,1.306,16,0.515,21,0.163,24,1.266,26,0.009,27,0.009,74,0.684,102,1.306,116,1.266,117,1.228,118,1.19,170,3.144,195,1.791,288,3.035,306,3.517,454,3.359,477,6.209,478,4.38,481,5.626,483,3.974,484,4.389,572,5.468,574,3.974,579,5.094,580,5.626,581,5.018,582,5.018,583,5.018,584,5.018,585,3.664]],["title/controllers/HealthController.html",[0,1.342,586,3.021]],["body/controllers/HealthController.html",[0,1.209,2,1.209,3,0.116,4,0.105,5,0.093,7,0.509,8,1.37,10,1.479,11,0.012,12,0.645,14,0.97,16,0.561,17,0.666,20,0.128,21,0.121,24,1.328,26,0.007,27,0.007,106,2.14,168,3.054,193,2.953,194,1.787,209,1.479,359,6.35,371,3.261,470,4.011,547,6.118,586,3.845,587,3.261,588,3.728,589,5.265,590,3.728,591,3.728,592,3.728,593,5.265,594,5.265,595,5.265,596,5.265,597,3.728,598,3.728,599,6.104,600,2.953,601,3.845,602,3.728,603,5.265,604,2.539,605,3.261,606,3.728,607,3.728,608,3.728,609,3.728,610,2.953,611,5.265,612,3.728,613,5.265,614,3.728,615,3.728,616,3.728,617,3.728,618,5.265,619,3.261,620,4.605,621,5.265,622,5.265,623,3.728,624,3.728,625,5.265,626,6.632,627,5.265,628,3.728,629,3.728]],["title/modules/HealthModule.html",[28,1.342,630,3.276]],["body/modules/HealthModule.html",[2,2.208,3,0.171,4,0.154,5,0.137,11,0.012,16,0.62,17,0.982,20,0.189,21,0.178,26,0.01,27,0.01,28,2.208,30,2.433,53,3.153,586,5.405,600,4.35,630,5.393,631,5.493,632,6.81,633,6.81,634,4.804,635,5.493]],["title/interfaces/IErrorBody.html",[462,2.375,636,1.701]],["body/interfaces/IErrorBody.html",[3,0.114,4,0.102,5,0.091,7,0.496,11,0.012,15,1.439,20,0.248,23,2.035,26,0.007,27,0.007,74,1.106,118,1.797,157,3.114,213,1.9,225,1.852,462,2.971,469,4.198,470,3.968,472,4.198,636,2.697,637,2.089,638,2.329,639,4.791,640,5.158,641,2.329,642,2.657,643,2.657,644,2.657,645,2.657,646,2.657,647,2.657,648,2.657,649,2.657,650,2.657,651,3.13,652,3.779,653,3.13,654,2.657,655,2.329]],["title/interfaces/ItemsBody.html",[636,1.701,653,2.502]],["body/interfaces/ItemsBody.html",[3,0.13,4,0.117,5,0.104,7,0.57,11,0.012,15,1.404,20,0.259,23,2.067,26,0.008,27,0.008,74,1.026,157,3.092,213,2.18,225,2.038,462,2.397,469,2.672,470,2.525,472,2.672,636,2.863,637,2.397,638,2.672,639,3.049,640,4.414,641,2.672,642,3.049,643,3.049,644,3.049,645,3.049,646,3.049,647,3.049,648,3.049,649,3.049,650,3.049,651,3.445,652,5.085,653,3.921,654,5.085,655,2.672]],["title/injectables/JwtStorage.html",[95,0.981,274,2.502]],["body/injectables/JwtStorage.html",[3,0.085,4,0.076,5,0.068,7,0.37,8,1.084,10,1.077,11,0.012,12,1.167,14,1.084,15,1.167,16,0.519,17,0.485,20,0.093,21,0.088,23,1.882,24,1.051,26,0.006,27,0.006,56,1.158,74,0.973,95,0.988,96,1.116,116,1.279,117,1.241,118,1.203,123,0.94,163,1.116,168,3.461,170,2.868,186,1.849,195,1.548,196,1.418,197,2.278,203,1.558,204,3.54,205,1.25,206,5.489,207,1.849,209,1.653,211,3.245,212,4.315,214,1.158,215,2.15,217,2.15,218,2.15,225,1.491,228,2.667,229,1.25,244,1.642,257,2.15,274,2.52,295,5.129,300,3.043,301,3.043,302,3.043,306,3.11,454,1.418,534,1.983,636,1.116,656,2.15,657,4.435,658,4.435,659,4.729,660,3.644,661,3.644,662,2.715,663,4.167,664,3.644,665,2.715,666,3.644,667,2.715,668,2.715,669,3.644,670,2.715,671,3.644,672,2.715,673,2.374,674,4.154,675,3.644,676,2.374,677,2.374,678,2.374,679,3.644,680,2.374,681,2.374,682,2.374,683,2.374,684,2.374,685,2.374]],["title/injectables/JwtStrategy.html",[95,0.981,686,3.021]],["body/injectables/JwtStrategy.html",[3,0.114,4,0.102,5,0.091,7,0.496,8,1.347,11,0.012,12,0.896,14,0.947,15,0.63,16,0.594,17,0.651,20,0.178,21,0.168,23,0.89,24,0.918,26,0.007,27,0.007,63,2.201,74,0.706,95,1.228,96,1.496,116,1.306,117,1.266,118,1.228,168,1.676,170,2.668,176,2.329,186,2.478,187,4.791,190,2.201,195,1.52,196,1.9,197,4.051,198,2.882,209,2.053,210,2.882,214,2.207,228,3.312,229,1.676,242,2.882,250,2.478,278,2.478,292,3.779,306,2.83,445,2.569,529,5.196,530,3.779,532,2.882,533,2.882,585,2.657,659,4.398,686,3.779,687,2.882,688,5.176,689,3.639,690,3.639,691,4.527,692,3.639,693,3.183,694,3.183,695,3.183,696,5.268,697,5.268,698,4.527,699,3.183,700,3.183,701,3.183]],["title/classes/Mark.html",[21,0.134,702,3.021]],["body/classes/Mark.html",[3,0.197,4,0.177,5,0.158,11,0.011,20,0.217,21,0.205,26,0.01,27,0.01,102,1.644,702,5.411,703,5.526]],["title/controllers/MarksController.html",[0,1.342,704,3.021]],["body/controllers/MarksController.html",[0,1.104,2,1.104,3,0.106,4,0.096,5,0.085,7,0.464,8,1.284,10,2.68,11,0.012,12,1.169,14,1.758,15,1.312,16,0.51,17,0.609,20,0.117,21,0.111,22,2.059,23,0.833,24,1.704,26,0.007,27,0.007,74,0.868,106,1.955,107,1.55,108,2.818,109,2.185,110,2.185,111,2.185,114,3.331,116,1.606,117,1.557,118,1.509,120,1.508,121,2.984,123,2.438,124,1.508,125,2.984,127,1.508,129,2.984,131,2.984,132,2.059,133,2.059,134,2.059,137,1.702,139,1.702,141,2.059,144,2.059,146,2.059,148,2.059,377,4.507,704,3.603,705,2.978,706,2.978,707,2.978,708,3.406,709,3.406,710,3.406,711,3.406,712,5.067,713,3.406,714,3.714,715,2.978,716,3.908,717,3.406,718,3.406,719,3.406,720,3.406,721,3.406,722,3.406]],["title/modules/MarksModule.html",[28,1.342,44,2.817]],["body/modules/MarksModule.html",[2,2.108,3,0.159,4,0.143,5,0.127,11,0.012,16,0.573,17,0.912,20,0.175,21,0.166,26,0.009,27,0.009,28,2.32,30,2.259,31,2.349,32,2.55,33,2.55,34,2.349,35,3.576,36,2.55,44,5.417,49,3.249,50,2.55,51,2.55,704,5.225,714,5.091,715,4.462,723,4.462,724,4.462,725,5.102,726,5.102]],["title/injectables/MarksService.html",[95,0.981,714,2.647]],["body/injectables/MarksService.html",[3,0.113,4,0.102,5,0.091,7,0.495,8,1.344,11,0.012,12,1.198,14,1.927,15,1.198,16,0.482,17,0.649,20,0.125,21,0.118,24,1.747,26,0.007,27,0.007,74,0.894,95,1.225,96,1.492,107,1.622,108,2.902,109,2.287,110,2.287,111,2.287,116,1.653,117,1.603,118,1.554,120,2.287,123,2.491,124,2.287,127,2.287,137,1.813,139,1.813,157,3.166,161,5.056,162,2.65,163,1.492,164,2.65,165,2.65,377,4.431,702,4.784,706,3.173,707,4.517,712,5.042,714,3.305,716,4.09,727,3.173,728,3.629,729,3.629,730,3.629,731,3.629,732,3.629]],["title/classes/NestJwtStrategy.html",[21,0.134,278,2.817]],["body/classes/NestJwtStrategy.html",[3,0.126,4,0.114,5,0.101,11,0.012,15,0.701,16,0.612,17,0.724,20,0.192,21,0.181,23,0.991,24,1.022,26,0.008,27,0.008,63,2.45,95,1.323,102,1.054,168,1.865,170,1.794,186,2.758,187,4.074,190,2.45,195,1.61,196,2.115,197,3.759,198,3.208,209,1.607,210,3.208,214,2.379,228,3.57,229,1.865,242,3.208,250,2.758,278,3.799,292,4.66,306,2.214,445,2.721,529,5.053,530,4.074,532,3.208,533,3.208,585,2.958,659,2.958,686,2.958,687,3.208,691,3.543,693,3.543,694,3.543,695,3.543,696,5.581,697,5.581,698,4.879,699,3.543,700,3.543,701,4.879]],["title/interfaces/PaginationMetaInterface.html",[636,1.701,641,2.647]],["body/interfaces/PaginationMetaInterface.html",[3,0.107,4,0.096,5,0.085,7,0.467,11,0.012,15,1.429,20,0.243,23,2.02,26,0.007,27,0.007,74,1.095,118,1.768,157,3.345,213,1.788,225,1.773,462,1.966,469,2.191,470,2.071,472,2.191,636,2.623,637,1.966,638,2.191,639,2.501,640,3.964,641,3.171,642,4.659,643,4.659,644,4.659,645,4.659,646,4.659,647,4.659,648,4.659,649,4.659,650,4.659,651,2.997,652,3.618,653,2.997,654,2.501,655,2.191]],["title/interfaces/Req.html",[176,2.647,636,1.701]],["body/interfaces/Req.html",[3,0.178,4,0.16,5,0.142,7,0.777,11,0.012,16,0.457,20,0.196,23,1.394,26,0.01,27,0.01,63,3.446,74,0.777,176,4.457,187,4.161,195,1.977,225,2.492,445,2.971,636,2.343,637,3.271,733,4.984,734,7.524]],["title/interfaces/ResourceBody.html",[636,1.701,651,2.502]],["body/interfaces/ResourceBody.html",[3,0.13,4,0.117,5,0.104,7,0.57,11,0.012,15,1.404,20,0.259,23,2.067,26,0.008,27,0.008,74,1.026,157,3.092,213,3.636,225,2.038,462,2.397,469,2.672,470,2.525,472,2.672,636,2.863,637,2.397,638,2.672,639,3.049,640,4.414,641,2.672,642,3.049,643,3.049,644,3.049,645,3.049,646,3.049,647,3.049,648,3.049,649,3.049,650,3.049,651,3.921,652,5.085,653,3.445,654,3.049,655,2.672]],["title/injectables/ResponseTransformInterceptor.html",[95,0.981,368,2.817]],["body/injectables/ResponseTransformInterceptor.html",[3,0.111,4,0.099,5,0.088,7,0.483,8,1.322,11,0.012,12,0.613,14,0.922,15,0.613,16,0.572,17,0.634,20,0.175,21,0.115,24,1.802,26,0.007,27,0.007,74,0.483,89,2.268,95,1.205,96,1.457,116,0.894,117,0.867,118,0.841,163,1.457,178,4.022,213,3.385,214,2.531,362,2.268,368,3.458,454,1.85,557,4.701,558,2.807,559,5.134,560,4.701,561,5.134,563,4.022,564,4.701,566,4.022,569,2.588,585,4.334,601,2.588,604,3.458,655,3.25,735,3.709,736,2.588,737,3.544,738,3.1,739,3.544,740,3.544,741,2.807,742,3.544,743,3.544,744,3.1,745,2.807,746,3.1,747,4.022,748,3.1,749,3.544,750,3.544,751,3.544,752,3.544,753,3.544,754,3.544,755,5.079,756,3.544,757,3.544,758,3.1,759,3.544,760,3.544,761,3.544,762,3.544,763,3.544,764,3.544]],["title/entities/Student.html",[334,2.068,343,2.375]],["body/entities/Student.html",[3,0.092,4,0.083,5,0.073,7,0.402,10,3.071,11,0.012,12,1.34,15,1.392,16,0.355,20,0.101,21,0.096,23,1.786,26,0.006,27,0.006,74,1.056,86,1.781,89,3.411,123,1.845,195,1.75,205,1.356,225,1.586,334,2.215,337,3.892,338,5.906,340,3.892,343,2.544,383,4.221,384,3.411,385,3.411,386,3.411,387,4.221,388,4.221,389,3.411,391,4.221,394,4.551,765,2.575,766,4.661,767,4.661,768,2.945,769,2.945,770,4.221,771,2.945,772,2.945,773,2.945,774,2.945,775,2.945,776,2.945,777,2.945,778,2.945,779,2.945,780,4.221,781,2.945,782,2.575,783,3.876,784,3.876,785,2.575,786,2.945,787,3.876,788,3.876,789,2.15,790,2.15,791,2.15,792,3.237,793,2.332]],["title/controllers/StudentController.html",[0,1.342,794,3.021]],["body/controllers/StudentController.html",[0,1.114,2,1.114,3,0.107,4,0.096,5,0.086,7,0.468,8,1.292,10,2.688,11,0.012,12,1.173,14,1.764,15,1.315,16,0.512,17,0.614,20,0.118,21,0.112,22,2.077,23,0.84,24,1.71,26,0.007,27,0.007,74,0.871,106,1.971,107,1.559,108,2.829,109,2.199,110,2.199,111,2.199,114,3.347,116,1.612,117,1.563,118,1.515,120,1.521,121,3.003,123,2.445,124,1.521,125,3.003,127,1.521,129,3.003,131,3.003,132,2.077,133,2.077,134,2.077,137,1.716,139,1.716,141,2.077,144,2.077,146,2.077,148,2.077,343,1.971,380,3.732,794,3.625,795,3.003,796,3.003,797,3.434,798,3.434,799,3.434,800,3.434,801,5.446,802,3.434,803,3.732,804,3.003,805,3.932,806,3.434,807,3.434,808,3.434,809,3.434,810,3.434,811,3.434]],["title/modules/StudentModule.html",[28,1.342,45,2.817]],["body/modules/StudentModule.html",[2,1.914,3,0.137,4,0.123,5,0.11,11,0.012,16,0.636,17,0.787,20,0.151,21,0.143,26,0.008,27,0.008,28,2.16,30,1.949,31,2.027,32,2.2,33,2.2,34,2.027,35,3.329,36,2.2,45,5.401,48,4.62,49,2.95,50,2.2,51,2.2,53,3.388,55,2.817,56,1.877,195,1.489,343,2.527,789,3.214,794,4.863,803,4.889,804,3.85,812,3.85,813,3.85,814,4.402,815,4.402,816,4.402,817,3.85,818,2.298,819,3.214,820,3.85,821,4.402]],["title/injectables/StudentService.html",[95,0.981,803,2.647]],["body/injectables/StudentService.html",[3,0.086,4,0.078,5,0.069,7,0.378,8,1.101,11,0.012,12,1.13,14,1.611,15,0.889,16,0.561,17,0.495,20,0.095,21,0.09,23,0.678,24,1.45,26,0.006,27,0.006,56,1.182,74,0.784,80,1.227,82,1.182,95,1.004,96,1.139,107,1.613,108,2.546,109,1.874,110,1.874,111,1.874,116,1.562,117,1.515,118,1.469,120,1.874,123,2.351,124,1.874,127,1.874,137,1.385,157,2.111,168,1.948,170,3.453,180,3.914,195,1.45,203,1.59,204,3.143,205,1.276,209,1.679,213,3.001,214,1.805,229,1.948,334,2.115,337,2.023,343,2.948,380,2.708,383,2.194,384,1.773,385,1.773,386,1.773,387,2.194,388,2.194,389,1.773,390,2.21,391,2.194,405,2.023,478,1.887,796,3.701,803,2.708,805,2.194,817,2.423,818,3.546,819,2.023,822,2.423,823,2.771,824,2.771,825,4.232,826,2.771,827,2.771,828,2.771,829,2.771,830,2.771,831,2.423,832,2.771,833,2.771,834,2.771,835,2.771,836,2.423,837,2.771,838,2.771,839,2.423,840,2.771,841,2.771,842,2.771,843,2.771,844,2.771,845,2.771,846,2.771,847,2.771,848,2.771,849,2.771,850,2.423,851,2.423,852,2.771,853,2.771,854,2.771,855,2.194,856,2.771,857,2.771,858,2.194,859,2.194,860,2.771]],["title/classes/Subject.html",[21,0.134,861,2.817]],["body/classes/Subject.html",[3,0.197,4,0.177,5,0.158,11,0.011,20,0.217,21,0.205,26,0.01,27,0.01,102,1.644,861,5.046,862,5.526]],["title/controllers/SubjectController.html",[0,1.342,863,3.021]],["body/controllers/SubjectController.html",[0,1.104,2,1.104,3,0.106,4,0.096,5,0.085,7,0.464,8,1.284,10,2.68,11,0.012,12,1.169,14,1.758,15,1.312,16,0.51,17,0.609,20,0.117,21,0.111,22,2.059,23,0.833,24,1.704,26,0.007,27,0.007,74,0.868,106,1.955,107,1.55,108,2.818,109,2.185,110,2.185,111,2.185,114,3.331,116,1.606,117,1.557,118,1.509,120,1.508,121,2.984,123,2.438,124,1.508,125,2.984,127,1.508,129,2.984,131,2.984,132,2.059,133,2.059,134,2.059,137,1.702,139,1.702,141,2.059,144,2.059,146,2.059,148,2.059,406,4.507,861,2.319,863,3.603,864,2.978,865,2.978,866,3.406,867,3.406,868,3.406,869,3.406,870,5.067,871,3.406,872,3.714,873,2.978,874,3.908,875,3.406,876,3.406,877,3.406,878,3.406,879,3.406,880,3.406]],["title/modules/SubjectModule.html",[28,1.342,46,2.817]],["body/modules/SubjectModule.html",[2,2.108,3,0.159,4,0.143,5,0.127,11,0.012,16,0.573,17,0.912,20,0.175,21,0.166,26,0.009,27,0.009,28,2.32,30,2.259,31,2.349,32,2.55,33,2.55,34,2.349,35,3.576,36,2.55,46,5.417,49,3.249,50,2.55,51,2.55,863,5.225,872,5.091,873,4.462,881,4.462,882,4.462,883,5.102,884,5.102]],["title/injectables/SubjectService.html",[95,0.981,872,2.647]],["body/injectables/SubjectService.html",[3,0.113,4,0.102,5,0.091,7,0.495,8,1.344,11,0.012,12,1.198,14,1.927,15,1.198,16,0.482,17,0.649,20,0.125,21,0.118,24,1.747,26,0.007,27,0.007,74,0.894,95,1.225,96,1.492,107,1.622,108,2.902,109,2.287,110,2.287,111,2.287,116,1.653,117,1.603,118,1.554,120,2.287,123,2.491,124,2.287,127,2.287,137,1.813,139,1.813,157,3.166,161,5.056,162,2.65,163,1.492,164,2.65,165,2.65,406,4.431,861,4.715,865,4.517,870,5.042,872,3.305,874,4.09,885,3.173,886,3.629,887,3.629,888,3.629,889,3.629,890,3.629]],["title/entities/Teacher.html",[334,2.068,891,2.502]],["body/entities/Teacher.html",[3,0.098,4,0.088,5,0.078,7,0.427,10,3.04,11,0.012,12,1.326,15,1.368,16,0.443,20,0.108,21,0.151,23,1.353,26,0.006,27,0.006,74,1.045,86,1.895,89,3.54,123,1.914,157,1.909,195,1.786,205,1.443,225,1.661,334,2.321,338,5.958,340,4.039,384,3.54,385,3.54,386,3.54,389,3.54,394,4.165,412,4.039,413,4.381,414,4.381,415,4.381,416,4.381,770,2.482,780,2.482,782,2.741,783,4.061,784,4.061,785,2.741,787,4.061,788,4.061,789,2.288,790,2.288,791,2.288,792,3.391,793,2.482,891,2.808,892,2.741,893,3.134,894,3.134,895,3.134,896,3.134,897,3.134,898,3.134,899,3.134,900,3.134,901,3.134,902,3.134,903,3.134,904,2.741,905,2.741,906,2.482]],["title/controllers/TeacherController.html",[0,1.342,907,3.021]],["body/controllers/TeacherController.html",[0,1.114,2,1.114,3,0.107,4,0.096,5,0.086,7,0.468,8,1.292,10,2.688,11,0.012,12,1.173,14,1.764,15,1.315,16,0.512,17,0.614,20,0.118,21,0.112,22,2.077,23,0.84,24,1.71,26,0.007,27,0.007,74,0.871,106,1.971,107,1.559,108,2.829,109,2.199,110,2.199,111,2.199,114,3.347,116,1.612,117,1.563,118,1.515,120,1.521,121,3.003,123,2.445,124,1.521,125,3.003,127,1.521,129,3.003,131,3.003,132,2.077,133,2.077,134,2.077,137,1.716,139,1.716,141,2.077,144,2.077,146,2.077,148,2.077,409,3.732,891,2.077,907,3.625,908,3.003,909,3.003,910,3.434,911,3.434,912,3.434,913,3.434,914,5.446,915,3.434,916,3.732,917,3.003,918,4.342,919,3.434,920,3.434,921,3.434,922,3.434,923,3.434,924,3.434]],["title/modules/TeacherModule.html",[28,1.342,47,2.817]],["body/modules/TeacherModule.html",[2,1.923,3,0.138,4,0.124,5,0.111,11,0.012,16,0.637,17,0.793,20,0.152,21,0.144,26,0.008,27,0.008,28,2.168,30,1.964,31,2.041,32,2.216,33,2.216,34,2.041,35,3.341,36,2.216,47,5.41,48,4.499,49,2.965,50,2.216,51,2.216,53,3.405,55,2.837,56,1.891,195,1.119,789,3.238,818,2.315,819,3.238,820,3.878,891,2.681,907,4.881,916,4.899,917,3.878,925,3.878,926,4.434,927,3.878,928,4.434,929,4.434,930,3.878,931,4.434]],["title/injectables/TeacherService.html",[95,0.981,916,2.647]],["body/injectables/TeacherService.html",[3,0.088,4,0.08,5,0.071,7,0.387,8,1.121,11,0.012,12,1.14,14,1.628,15,0.901,16,0.528,17,0.507,20,0.098,21,0.092,23,0.694,24,1.468,26,0.006,27,0.006,56,1.209,74,0.793,80,1.255,82,1.209,95,1.022,96,1.166,107,1.636,108,2.576,109,1.907,110,1.907,111,1.907,116,1.578,117,1.53,118,1.484,120,1.907,123,2.369,124,1.907,127,1.907,157,2.141,168,1.983,170,3.468,180,3.961,195,1.468,203,1.627,204,3.18,205,1.305,209,1.708,213,3.037,214,1.837,229,1.983,334,1.417,384,1.814,385,1.814,386,1.814,389,1.814,390,2.249,405,2.07,409,1.814,412,2.07,413,2.245,414,2.245,415,2.245,416,2.245,478,1.93,818,3.574,819,2.07,831,2.479,836,2.479,850,2.479,851,2.479,855,2.245,858,2.245,859,2.245,891,3.15,909,3.767,916,2.756,930,2.479,932,2.479,933,2.835,934,2.835,935,4.307,936,2.835,937,2.835,938,2.835,939,2.835,940,2.835,941,2.835,942,2.835,943,2.835,944,2.835,945,2.835,946,2.835,947,2.835,948,2.835,949,2.835,950,2.835,951,2.835,952,2.835,953,2.835,954,2.835,955,2.835,956,2.835,957,2.835,958,2.835,959,2.835,960,2.835,961,2.835,962,2.835]],["title/injectables/TimeoutInterceptor.html",[95,0.981,963,3.276]],["body/injectables/TimeoutInterceptor.html",[3,0.142,4,0.128,5,0.114,7,0.621,8,1.57,11,0.012,12,0.787,14,1.184,16,0.484,17,0.813,20,0.156,21,0.148,24,1.708,26,0.008,27,0.008,74,0.621,95,1.431,96,1.87,116,1.148,117,1.113,118,1.079,163,2.481,251,3.098,454,2.375,557,4.779,558,4.779,559,5.711,560,5.362,561,5.711,563,3.603,564,5.362,566,4.779,567,3.979,568,5.922,569,3.322,758,3.979,963,4.779,964,3.979,965,4.55,966,6.035,967,4.55,968,6.035,969,4.55,970,4.55,971,4.55,972,4.55]],["title/interfaces/TokenBody.html",[636,1.701,674,3.021]],["body/interfaces/TokenBody.html",[3,0.11,4,0.099,5,0.088,7,0.482,11,0.012,15,1.271,16,0.572,17,0.632,20,0.122,21,0.115,23,1.745,24,1.279,26,0.007,27,0.007,56,1.507,74,1.002,95,1.202,123,1.223,163,1.453,168,2.981,170,2.244,186,2.406,195,1.279,196,1.845,197,2.771,203,2.028,204,3.24,205,1.627,206,5.209,207,2.406,209,1.402,211,3.243,212,3.792,214,1.507,215,2.799,217,2.799,218,2.799,225,1.813,228,2.261,229,1.627,244,2.137,257,2.799,274,2.137,295,4.014,302,2.58,306,2.771,454,1.845,534,2.58,636,1.453,637,2.028,656,2.799,657,3.091,658,3.091,659,3.701,664,3.091,666,3.091,669,3.091,671,3.091,673,3.091,674,5.005,675,5.994,676,3.091,677,3.091,678,3.091,679,4.433,680,3.091,681,3.091,682,3.091,683,3.091,684,3.091,685,3.091]],["title/injectables/TokenGuard.html",[95,0.981,973,3.276]],["body/injectables/TokenGuard.html",[3,0.183,4,0.164,5,0.146,11,0.012,16,0.568,17,1.048,20,0.202,21,0.191,26,0.01,27,0.01,95,1.681,96,2.41,189,5.128,190,3.546,445,3.023,973,5.613,974,5.128,975,7.087]],["title/interfaces/TokenStorage.html",[197,2.262,636,1.701]],["body/interfaces/TokenStorage.html",[3,0.168,4,0.151,5,0.134,7,0.733,11,0.012,15,0.93,16,0.43,20,0.185,23,1.643,26,0.009,27,0.009,74,0.916,195,1.695,196,2.805,197,3.672,225,2.403,228,3.438,306,3.672,636,2.208,637,3.084,660,6.714,661,6.714,747,6.079,976,4.698]],["title/classes/UpdateAttendanceDto.html",[21,0.134,128,2.817]],["body/classes/UpdateAttendanceDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,113,3.734,128,4.812,138,4.621,194,2.797,374,4.621,445,3.014,977,5.103,978,7.067,979,3.529]],["title/classes/UpdateClassDto.html",[21,0.134,323,2.817]],["body/classes/UpdateClassDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,194,2.797,318,3.734,323,4.812,327,4.621,376,4.621,445,3.014,979,3.529,980,5.103,981,7.067]],["title/classes/UpdateMarkDto.html",[21,0.134,712,2.817]],["body/classes/UpdateMarkDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,194,2.797,377,3.734,379,4.621,445,3.014,712,4.812,716,4.621,979,3.529,982,5.103,983,7.067]],["title/classes/UpdateStudentDto.html",[21,0.134,801,3.021]],["body/classes/UpdateStudentDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,194,2.797,380,3.734,382,4.621,445,3.014,801,5.16,805,4.621,979,3.529,984,5.103,985,7.067]],["title/classes/UpdateSubjectDto.html",[21,0.134,870,2.817]],["body/classes/UpdateSubjectDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,194,2.797,406,3.734,408,4.621,445,3.014,870,4.812,874,4.621,979,3.529,986,5.103,987,7.067]],["title/classes/UpdateTeacherDto.html",[21,0.134,914,3.021]],["body/classes/UpdateTeacherDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,194,2.797,409,3.734,411,4.621,445,3.014,914,5.16,918,5.103,979,3.529,988,5.103,989,7.067]],["title/classes/UpdateUserDto.html",[21,0.134,990,3.021]],["body/classes/UpdateUserDto.html",[3,0.182,4,0.164,5,0.146,11,0.012,16,0.566,20,0.201,21,0.19,26,0.01,27,0.01,102,1.518,107,1.832,194,2.797,436,3.734,438,4.621,445,3.014,979,3.529,990,5.16,991,5.103,992,7.067,993,5.103]],["title/entities/User.html",[195,1.044,334,2.068]],["body/entities/User.html",[3,0.109,4,0.098,5,0.087,7,0.476,10,2.818,11,0.012,12,1.23,15,1.23,16,0.472,20,0.12,21,0.163,23,1.939,26,0.007,27,0.007,74,0.999,80,2.607,82,2.511,86,2.113,89,4.121,123,2.038,178,2.766,195,1.268,205,1.608,225,1.798,300,3.67,334,2.512,338,4.702,340,4.299,390,3.912,394,4.385,435,2.379,520,5.632,766,5.149,767,5.149,770,3.981,780,3.981,790,2.551,791,2.551,792,3.67,793,2.766,839,3.055,904,3.055,905,5.632,906,2.766,994,3.055,995,3.493,996,3.493,997,3.493,998,3.493,999,5.027,1000,5.632,1001,3.493,1002,3.493,1003,3.493,1004,3.493,1005,3.493,1006,3.493,1007,5.888,1008,3.493,1009,3.493]],["title/controllers/UserController.html",[0,1.342,1010,3.021]],["body/controllers/UserController.html",[0,0.846,2,0.846,3,0.081,4,0.073,5,0.065,7,0.356,8,1.052,10,2.391,11,0.012,12,1.043,14,1.568,15,1.22,16,0.565,17,0.467,20,0.09,21,0.085,23,0.989,24,1.677,26,0.006,27,0.006,74,0.76,106,1.498,107,0.82,108,2.467,109,1.79,110,1.79,111,1.79,114,2.321,116,1.406,117,1.363,118,1.321,120,1.156,121,2.445,123,2.206,124,1.156,125,2.445,127,1.156,129,2.445,131,3.645,132,1.579,133,1.579,134,1.579,139,1.305,141,1.579,144,1.579,146,1.579,148,1.579,163,1.073,168,1.861,170,2.467,180,1.777,195,1.02,209,1.035,214,1.113,229,1.202,244,1.579,288,1.579,429,1.67,430,1.906,436,1.67,449,2.952,451,2.067,452,2.753,459,3.201,489,2.067,502,4.104,551,2.952,552,2.067,604,1.777,605,2.283,818,2.583,990,5.016,993,2.283,1010,2.952,1011,2.283,1012,4.043,1013,2.61,1014,2.61,1015,4.948,1016,4.948,1017,2.61,1018,2.61,1019,2.61,1020,2.61,1021,2.61,1022,2.61,1023,2.61,1024,4.327,1025,4.043,1026,2.283,1027,2.283,1028,2.61,1029,4.043,1030,4.043,1031,4.043,1032,4.043,1033,4.043,1034,2.61,1035,2.61,1036,2.283,1037,3.536,1038,2.283,1039,2.61,1040,2.61,1041,2.61,1042,2.61,1043,2.61,1044,2.61,1045,2.61]],["title/classes/UserDetailResponse.html",[21,0.134,200,3.021]],["body/classes/UserDetailResponse.html",[3,0.164,4,0.147,5,0.131,11,0.012,12,0.91,16,0.421,20,0.228,21,0.171,26,0.009,27,0.009,74,0.904,102,1.368,116,1.326,117,1.286,118,1.247,195,1.83,196,2.744,200,4.838,209,2.085,445,2.825,454,3.459,790,4.838,791,5.298,792,3.838,1046,5.247,1047,4.162,1048,6.345,1049,5.256,1050,5.256,1051,4.597,1052,5.256]],["title/modules/UserModule.html",[28,1.342,48,2.502]],["body/modules/UserModule.html",[2,1.9,3,0.136,4,0.122,5,0.109,11,0.012,16,0.634,17,0.778,20,0.15,21,0.142,26,0.008,27,0.008,28,2.148,30,1.928,31,2.005,32,2.176,33,2.176,34,2.005,35,3.31,36,3.31,48,4.707,49,2.929,50,2.176,51,2.176,53,2.5,55,2.786,56,1.857,195,1.099,273,2.381,287,5.125,288,2.633,289,3.808,474,4.279,485,3.449,818,4.267,1010,4.837,1053,3.808,1054,3.808,1055,3.808,1056,4.355,1057,4.355,1058,4.355,1059,3.808,1060,4.355,1061,4.355,1062,4.355]],["title/injectables/UserService.html",[95,0.981,818,2.16]],["body/injectables/UserService.html",[3,0.068,4,0.061,5,0.054,7,0.297,8,0.911,11,0.012,12,1.116,14,1.613,15,0.76,16,0.533,17,0.389,20,0.075,21,0.071,23,0.857,24,1.564,26,0.005,27,0.005,56,0.928,74,0.804,80,1.551,82,2.148,95,0.831,96,0.895,107,1.1,108,2.23,109,1.551,110,1.551,111,1.551,116,1.564,117,1.516,118,1.47,120,1.551,123,2.536,124,1.551,127,1.551,157,2.736,163,0.895,168,2.023,170,3.475,180,4.015,184,3.063,185,1.589,191,2.992,195,1.271,203,1.249,204,2.753,205,1.002,209,1.389,211,1.393,212,2.241,213,3.566,214,2.148,229,2.715,231,1.724,244,1.316,261,3.063,262,1.904,264,1.904,265,1.589,273,2.753,288,1.316,390,1.137,429,1.393,430,1.589,436,1.393,478,2.992,479,1.724,483,1.724,485,1.724,489,1.724,502,3.429,534,1.589,538,1.904,619,1.904,818,1.829,855,1.724,858,3.988,859,3.48,1024,5.421,1026,1.904,1027,1.904,1037,3.063,1038,1.904,1059,1.904,1063,1.904,1064,3.502,1065,3.502,1066,2.177,1067,3.502,1068,2.177,1069,3.502,1070,2.177,1071,4.395,1072,2.177,1073,2.177,1074,2.177,1075,2.177,1076,2.177,1077,2.177,1078,2.177,1079,2.177,1080,2.177,1081,2.177,1082,2.177,1083,2.177,1084,2.177,1085,2.177,1086,2.177,1087,2.177,1088,2.177,1089,2.177,1090,2.177,1091,2.177,1092,4.395,1093,4.395,1094,3.502,1095,2.177]],["title/coverage.html",[1096,4.483]],["body/coverage.html",[0,2.068,1,1.2,5,0.041,6,1.437,11,0.012,18,1.051,21,0.252,26,0.004,27,0.004,34,0.756,71,2.199,74,0.224,95,1.638,97,1.437,101,1.119,103,1.437,104,1.2,105,1.437,113,1.051,128,1.119,135,1.051,154,1.437,163,0.675,166,1.2,167,2.199,176,1.051,195,0.91,197,0.898,200,1.2,265,1.2,273,0.898,274,0.993,275,1.119,278,1.119,282,1.301,294,1.437,315,1.2,316,1.437,318,1.051,323,1.119,325,1.051,334,2.118,335,1.2,336,1.437,343,0.943,351,1.437,357,1.2,358,1.437,368,1.119,373,1.437,374,2.199,375,1.437,376,2.199,377,1.051,378,1.437,379,2.199,380,1.051,381,1.437,382,2.199,406,1.051,407,1.437,408,2.199,409,1.051,410,1.437,411,2.199,429,1.051,430,1.2,431,1.437,436,1.051,437,1.437,438,2.199,442,1.2,443,1.437,444,2.199,449,1.2,450,2.199,451,1.301,452,1.89,453,2.199,462,0.943,474,1.2,475,1.437,476,1.437,487,1.119,502,1.119,503,1.437,504,1.437,522,1.437,550,1.437,551,1.2,552,1.301,555,1.301,556,1.437,572,1.2,573,1.437,574,2.199,579,1.301,580,1.437,586,1.2,587,1.437,601,1.2,604,1.119,636,2.251,638,2.712,641,1.051,651,0.993,653,0.993,656,2.199,674,1.2,686,1.2,687,2.199,702,1.2,703,1.437,704,1.2,705,1.437,712,1.119,714,1.051,727,1.437,733,1.437,735,2.633,736,2.633,741,1.301,745,1.301,747,2.199,765,1.437,794,1.2,795,1.437,801,1.2,803,1.051,818,0.858,822,1.437,861,1.119,862,1.437,863,1.2,864,1.437,870,1.119,872,1.051,885,1.437,891,0.993,892,1.437,907,1.2,908,1.437,914,1.2,916,1.051,932,1.437,963,1.301,964,1.437,973,1.301,974,1.437,976,1.437,977,1.437,980,1.437,982,1.437,984,1.437,986,1.437,988,1.437,990,1.2,991,1.437,994,1.437,1010,1.2,1011,1.437,1046,1.301,1047,1.301,1063,1.437,1096,1.301,1097,1.643,1098,1.643,1099,1.643,1100,7.449,1101,7.181,1102,6.377,1103,8.061,1104,3.606,1105,7.181,1106,4.738,1107,1.437,1108,1.437,1109,1.643,1110,1.643,1111,2.428,1112,2.428,1113,2.428,1114,1.437,1115,1.437,1116,1.437,1117,1.437,1118,1.437,1119,1.437,1120,2.428,1121,1.437,1122,1.437,1123,2.428,1124,3.606,1125,1.643,1126,1.437,1127,2.776,1128,1.643,1129,3.153,1130,1.437,1131,1.437,1132,1.437,1133,1.437,1134,1.437,1135,1.643,1136,1.643]],["title/dependencies.html",[31,2.293,1137,3.016]],["body/dependencies.html",[11,0.012,17,0.746,21,0.185,26,0.008,27,0.008,31,1.922,56,1.781,59,3.652,62,4.982,63,3.445,190,2.525,191,2.843,194,2.001,205,1.922,207,2.843,288,2.525,292,3.049,435,2.843,518,3.652,530,4.734,531,3.652,569,3.049,600,3.307,634,3.652,744,3.652,906,3.307,1138,4.176,1139,4.176,1140,4.176,1141,6.483,1142,4.176,1143,4.176,1144,4.176,1145,4.176,1146,4.176,1147,4.176,1148,5.696,1149,4.176,1150,4.176,1151,4.176,1152,4.176,1153,4.176,1154,4.176,1155,4.176,1156,4.176,1157,4.176,1158,4.176,1159,4.176,1160,4.176,1161,4.176,1162,4.176,1163,4.176,1164,4.176,1165,4.176,1166,4.176,1167,4.176,1168,4.176,1169,4.176,1170,4.176,1171,4.176,1172,4.176,1173,4.176,1174,4.176,1175,4.176,1176,4.176,1177,3.652,1178,4.176,1179,4.176,1180,4.176,1181,4.176,1182,4.176]],["title/miscellaneous/enumerations.html",[1183,1.979,1184,4.355]],["body/miscellaneous/enumerations.html",[7,0.53,11,0.012,26,0.008,27,0.008,195,1.704,301,6.189,343,3.11,390,2.829,891,3.276,1183,2.229,1184,3.396,1185,5.418,1186,3.883,1187,5.418,1188,3.883,1189,5.418,1190,3.883,1191,3.396,1192,6.752,1193,5.418,1194,6.752,1195,4.738,1196,6.752,1197,3.883,1198,5.418,1199,5.418,1200,3.883,1201,5.418,1202,5.418,1203,5.418,1204,3.883,1205,5.418,1206,5.418,1207,5.418,1208,3.883,1209,7.356,1210,3.883,1211,6.752,1212,6.752,1213,6.752,1214,6.752,1215,3.883,1216,3.883,1217,3.883]],["title/miscellaneous/functions.html",[1183,1.979,1218,4.355]],["body/miscellaneous/functions.html",[7,0.84,11,0.01,26,0.01,27,0.01,34,3.582,601,5.681,735,4.498,736,5.33,1126,5.387,1183,3.536,1218,5.387,1219,6.159,1220,5.387]],["title/index.html",[7,0.47,1221,3.448,1222,3.448]],["body/index.html",[4,0.123,11,0.012,26,0.008,27,0.008,81,5.15,204,2.398,546,3.836,610,3.473,620,3.836,1096,3.473,1223,4.386,1224,4.386,1225,5.889,1226,4.386,1227,4.386,1228,4.386,1229,4.386,1230,4.386,1231,4.386,1232,6.648,1233,4.386,1234,4.386,1235,4.386,1236,6.648,1237,7.797,1238,4.386,1239,4.386,1240,4.386,1241,7.632,1242,4.386,1243,4.386,1244,5.889,1245,4.386,1246,4.386,1247,4.386,1248,4.386,1249,5.889,1250,4.386,1251,4.386,1252,4.386,1253,5.889,1254,5.889,1255,4.386,1256,4.386,1257,4.386,1258,4.386,1259,4.386,1260,3.836,1261,4.386,1262,4.386,1263,4.386,1264,3.836,1265,4.386,1266,4.386,1267,4.386,1268,4.386,1269,3.836,1270,4.386,1271,4.386,1272,4.386,1273,4.386,1274,4.386,1275,4.386,1276,3.836]],["title/modules.html",[30,2.507]],["body/modules.html",[11,0.009,26,0.009,27,0.009,29,3.741,30,2.269,40,3.489,41,3.489,42,3.489,43,3.279,44,3.489,45,3.489,46,3.489,47,3.489,48,3.098,630,4.057,1260,7.289,1277,8.334,1278,8.334,1279,8.387,1280,5.124,1281,5.124]],["title/overview.html",[1282,4.95]],["body/overview.html",[2,1.035,11,0.012,18,3.577,26,0.007,27,0.007,28,1.035,29,6.045,30,1.413,31,1.469,32,1.595,33,1.595,34,1.469,35,1.595,36,1.595,37,2.791,38,2.791,39,2.791,40,4.481,41,5.239,42,4.481,43,4.405,44,4.481,45,4.848,46,4.481,47,4.848,48,4.419,49,2.352,50,1.595,51,1.595,86,1.93,96,1.312,102,0.831,135,3.577,150,2.791,151,2.791,269,2.791,270,2.791,271,2.791,273,3.373,274,4.306,275,3.807,302,2.33,325,3.577,345,2.791,346,2.791,366,2.791,367,2.791,368,3.807,637,1.832,714,3.577,723,2.791,724,2.791,803,3.577,812,2.791,813,2.791,818,3.718,872,3.577,881,2.791,882,2.791,916,3.577,925,2.791,927,2.791,1053,2.791,1054,2.791,1055,2.791,1282,2.791,1283,4.706,1284,3.191,1285,3.191,1286,3.191]],["title/properties.html",[225,1.782,1137,3.016]],["body/properties.html",[11,0.012,26,0.01,27,0.01,225,2.249,610,4.978,1177,5.498,1269,5.498,1276,5.498,1287,6.287,1288,6.287]],["title/miscellaneous/typealiases.html",[1183,1.979,1289,4.98]],["body/miscellaneous/typealiases.html",[7,0.807,11,0.011,26,0.01,27,0.01,74,0.972,433,5.177,638,3.788,640,4.854,651,3.58,653,3.58,655,4.562,1046,4.688,1047,5.646,1048,6.235,1051,5.177,1183,3.398,1191,6.235,1195,5.177,1290,5.92]],["title/miscellaneous/variables.html",[1183,1.979,1291,4.355]],["body/miscellaneous/variables.html",[5,0.102,7,0.267,11,0.012,15,0.556,24,1.417,26,0.005,27,0.005,71,3.748,74,0.713,75,1.714,76,2.986,78,3.577,80,1.811,82,2.018,84,4.139,86,1.185,88,2.812,89,4.418,90,2.812,93,3.577,117,0.787,163,2.309,167,1.552,170,0.868,176,2.617,197,1.071,214,2.229,224,2.812,229,0.902,251,1.334,265,2.348,266,2.812,267,1.714,268,1.714,274,1.185,282,2.547,300,5.458,301,5.458,362,2.058,604,2.19,735,1.431,736,2.348,738,1.714,741,3.239,745,2.547,746,1.714,748,1.714,1000,4.139,1036,2.812,1100,1.714,1107,1.714,1108,2.812,1111,1.714,1112,4.139,1113,1.714,1114,1.714,1115,2.812,1116,1.714,1117,2.812,1118,1.714,1119,2.812,1120,1.714,1121,2.812,1122,2.812,1123,1.714,1129,1.714,1130,2.812,1131,2.812,1132,2.812,1133,1.714,1134,2.812,1183,1.125,1220,1.714,1264,1.714,1291,1.714,1292,1.96,1293,1.96,1294,3.216,1295,3.216,1296,3.216,1297,4.09,1298,1.96,1299,1.96,1300,1.96,1301,3.216,1302,1.96,1303,1.96,1304,3.216,1305,1.96,1306,1.96,1307,3.216,1308,1.96,1309,1.96,1310,1.96,1311,3.216,1312,3.216,1313,3.216,1314,3.216,1315,4.733,1316,3.216,1317,3.216,1318,3.216,1319,3.216,1320,3.216,1321,3.216,1322,3.216,1323,3.216,1324,3.216,1325,3.216,1326,3.216,1327,3.216,1328,3.216,1329,3.216,1330,1.96,1331,1.96,1332,1.96,1333,1.96,1334,1.96,1335,1.96,1336,1.96,1337,4.733,1338,1.96,1339,1.96,1340,1.96,1341,1.96,1342,1.96,1343,1.96,1344,1.96,1345,1.96,1346,4.09,1347,1.96,1348,1.96,1349,1.96,1350,3.216,1351,3.216,1352,1.96,1353,1.96,1354,1.96,1355,1.96,1356,4.09,1357,1.96,1358,1.96,1359,1.96,1360,1.96,1361,1.96,1362,1.96,1363,3.216,1364,3.216,1365,1.96,1366,1.96,1367,1.96,1368,1.96,1369,1.96,1370,1.96,1371,1.96,1372,1.96,1373,1.96,1374,1.96,1375,1.96,1376,1.96,1377,1.96,1378,1.96,1379,1.96,1380,1.96,1381,1.96,1382,1.96,1383,1.96,1384,1.96,1385,1.96,1386,1.96,1387,1.96,1388,1.96,1389,1.96,1390,1.96,1391,1.96,1392,1.96,1393,1.96,1394,1.96,1395,1.96]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1100,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1177,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()abcdefghijklmnopqrstuvwxyz",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["10.2.8",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":626,"title":{},"body":{"controllers/HealthController.html":{}}}],["11",{"_index":1283,"title":{},"body":{"overview.html":{}}}],["110.44.123.230",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["12",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1285,"title":{},"body":{"overview.html":{}}}],["15d",{"_index":216,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["16).tostring(16",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.1.1",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["17.11.0",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":1286,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["3.6.5",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":625,"title":{},"body":{"controllers/HealthController.html":{}}}],["300mb",{"_index":621,"title":{},"body":{"controllers/HealthController.html":{}}}],["3306",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1284,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":302,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"overview.html":{}}}],["7.1.16",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_createtoken",{"_index":169,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["_createtoken(undefined",{"_index":173,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["accept",{"_index":542,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["accesstoken",{"_index":219,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["action",{"_index":161,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/MarksService.html":{},"injectables/SubjectService.html":{}}}],["active",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["address",{"_index":383,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["adds",{"_index":162,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/MarksService.html":{},"injectables/SubjectService.html":{}}}],["addselect(\"user.password",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1290,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":628,"title":{},"body":{"controllers/HealthController.html":{}}}],["allowed",{"_index":1036,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":493,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{}}}],["amazing",{"_index":1261,"title":{},"body":{"index.html":{}}}],["api",{"_index":364,"title":{},"body":{"controllers/CoreController.html":{}}}],["apibody",{"_index":192,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["apiokresponse",{"_index":603,"title":{},"body":{"controllers/HealthController.html":{}}}],["apiproperty",{"_index":519,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["apitags",{"_index":193,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{}}}],["apitags(\"authentication",{"_index":208,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["apitags('core",{"_index":363,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('health",{"_index":606,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":1239,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1231,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["areequal",{"_index":261,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["argumentshost",{"_index":457,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["array(4",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":851,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["async",{"_index":170,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attendance",{"_index":101,"title":{"classes/Attendance.html":{}},"body":{"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"coverage.html":{}}}],["attendance.controller",{"_index":153,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["attendance.dto",{"_index":138,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"classes/UpdateAttendanceDto.html":{}}}],["attendance.dto.ts",{"_index":374,"title":{},"body":{"classes/CreateAttendanceDto.html":{},"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["attendance.service",{"_index":136,"title":{},"body":{"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{}}}],["attendance/attendance.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["attendancecontroller",{"_index":104,"title":{"controllers/AttendanceController.html":{}},"body":{"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"coverage.html":{}}}],["attendancemodule",{"_index":40,"title":{"modules/AttendanceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules.html":{},"overview.html":{}}}],["attendanceservice",{"_index":135,"title":{"injectables/AttendanceService.html":{}},"body":{"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"coverage.html":{},"overview.html":{}}}],["auth",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["authenticate",{"_index":688,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authenticate(req",{"_index":691,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["authentication",{"_index":671,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["authentication/authentication.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/services/bcrypt.service",{"_index":486,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["authenticationcontroller",{"_index":166,"title":{"controllers/AuthenticationController.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authenticationmodule",{"_index":41,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authguard",{"_index":189,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/TokenGuard.html":{}}}],["authguard('jwt",{"_index":975,"title":{},"body":{"injectables/TokenGuard.html":{}}}],["author",{"_index":1269,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1281,"title":{},"body":{"modules.html":{}}}],["await",{"_index":229,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":589,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":1262,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":565,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["basic",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["bcrypt",{"_index":191,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(currentpassword",{"_index":268,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(password",{"_index":311,"title":{},"body":{"classes/BcryptService.html":{}}}],["bcrypt.hash(password",{"_index":312,"title":{},"body":{"classes/BcryptService.html":{}}}],["bcryptservice",{"_index":273,"title":{"classes/BcryptService.html":{}},"body":{"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["bcryptservice,userservice",{"_index":1062,"title":{},"body":{"modules/UserModule.html":{}}}],["bcryptservice.salt_rounds",{"_index":313,"title":{},"body":{"classes/BcryptService.html":{}}}],["bearer",{"_index":239,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["before",{"_index":544,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["bignumberstrings",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":131,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["body.role",{"_index":1033,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1277,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1226,"title":{},"body":{"index.html":{}}}],["bus",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["callback",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(new",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":561,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["cascade",{"_index":783,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["catch",{"_index":250,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["catch(createuserexception",{"_index":464,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{}}}],["catch(duplicateuserexception",{"_index":553,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{}}}],["catch(exception",{"_index":456,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["catcherror",{"_index":567,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":970,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["changepassword",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(id",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordforuser",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordforuser(id",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["chars",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":547,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"controllers/HealthController.html":{}}}],["class",{"_index":21,"title":{"classes/Attendance.html":{},"classes/BcryptService.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"classes/Mark.html":{},"classes/NestJwtStrategy.html":{},"classes/Subject.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class.controller",{"_index":349,"title":{},"body":{"modules/ClassModule.html":{}}}],["class.dto",{"_index":327,"title":{},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/UpdateClassDto.html":{}}}],["class.dto.ts",{"_index":376,"title":{},"body":{"classes/CreateClassDto.html":{},"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["class.service",{"_index":326,"title":{},"body":{"controllers/ClassController.html":{},"modules/ClassModule.html":{}}}],["class/class.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["classcontroller",{"_index":315,"title":{"controllers/ClassController.html":{}},"body":{"controllers/ClassController.html":{},"modules/ClassModule.html":{},"coverage.html":{}}}],["classentity",{"_index":335,"title":{"entities/ClassEntity.html":{}},"body":{"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"coverage.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/Attendance.html":{},"classes/BcryptService.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"classes/Mark.html":{},"classes/NestJwtStrategy.html":{},"classes/Subject.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{},"overview.html":{}}}],["classmodule",{"_index":42,"title":{"modules/ClassModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClassModule.html":{},"modules.html":{},"overview.html":{}}}],["classname",{"_index":337,"title":{},"body":{"entities/ClassEntity.html":{},"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["classservice",{"_index":325,"title":{"injectables/ClassService.html":{}},"body":{"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_attendancemodule",{"_index":150,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_attendancemodule_providers",{"_index":151,"title":{},"body":{"modules/AttendanceModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":269,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":271,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_imports",{"_index":272,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":270,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_classmodule",{"_index":345,"title":{},"body":{"modules/ClassModule.html":{},"overview.html":{}}}],["cluster_classmodule_providers",{"_index":346,"title":{},"body":{"modules/ClassModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":367,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_marksmodule",{"_index":723,"title":{},"body":{"modules/MarksModule.html":{},"overview.html":{}}}],["cluster_marksmodule_providers",{"_index":724,"title":{},"body":{"modules/MarksModule.html":{},"overview.html":{}}}],["cluster_studentmodule",{"_index":812,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_imports",{"_index":814,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_providers",{"_index":813,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_subjectmodule",{"_index":881,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_subjectmodule_providers",{"_index":882,"title":{},"body":{"modules/SubjectModule.html":{},"overview.html":{}}}],["cluster_teachermodule",{"_index":925,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_teachermodule_imports",{"_index":926,"title":{},"body":{"modules/TeacherModule.html":{}}}],["cluster_teachermodule_providers",{"_index":927,"title":{},"body":{"modules/TeacherModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1053,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1054,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1055,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["colorize",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":338,"title":{},"body":{"entities/ClassEntity.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["column({type",{"_index":1002,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":1006,"title":{},"body":{"entities/User.html":{}}}],["combined.log",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":483,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/UserService.html":{}}}],["command.data",{"_index":499,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["command.data.phone",{"_index":495,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["command.data.username",{"_index":491,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["commandbus",{"_index":1024,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":484,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["commandhandler(createusercommand",{"_index":490,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["commandhandler(fetchuserbyidcommand",{"_index":584,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["commands/handlers/create",{"_index":1060,"title":{},"body":{"modules/UserModule.html":{}}}],["comparepasswords",{"_index":265,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepasswords(user.password",{"_index":262,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["config/database.config",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionsource",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log('req.user",{"_index":240,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["console.log(createteacherdto",{"_index":956,"title":{},"body":{"injectables/TeacherService.html":{}}}],["console.log(req.user",{"_index":227,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["console.log(user",{"_index":501,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["console.log(user.raw",{"_index":945,"title":{},"body":{"injectables/TeacherService.html":{}}}],["const",{"_index":214,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":209,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/FetchUserByIdCommand.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":432,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(jwtservice",{"_index":662,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["constructor(message",{"_index":446,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{}}}],["constructor(props",{"_index":790,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["constructor(readonly",{"_index":578,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["constructor(studentrepository",{"_index":823,"title":{},"body":{"injectables/StudentService.html":{}}}],["constructor(teacherrepository",{"_index":933,"title":{},"body":{"injectables/TeacherService.html":{}}}],["constructor(tokenstorage",{"_index":689,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userid",{"_index":575,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["constructor(userrepository",{"_index":479,"title":{},"body":{"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/UserService.html":{}}}],["contacttypeenum",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["context",{"_index":563,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["context.gethandler",{"_index":754,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.gethandler()[ignoredpropertyname",{"_index":756,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp().getrequest().reqid",{"_index":764,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":762,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AttendanceController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AttendanceController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/CoreController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('attendance",{"_index":140,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["controller('class",{"_index":328,"title":{},"body":{"controllers/ClassController.html":{}}}],["controller('health",{"_index":607,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('marks",{"_index":717,"title":{},"body":{"controllers/MarksController.html":{}}}],["controller('student",{"_index":806,"title":{},"body":{"controllers/StudentController.html":{}}}],["controller('subject",{"_index":875,"title":{},"body":{"controllers/SubjectController.html":{}}}],["controller('teacher",{"_index":919,"title":{},"body":{"controllers/TeacherController.html":{}}}],["controller('user",{"_index":1028,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["core/core.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["core/http/interceptors/response",{"_index":602,"title":{},"body":{"controllers/HealthController.html":{}}}],["core/http/request/request",{"_index":199,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["core/http/response/types",{"_index":463,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["corecontroller",{"_index":357,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["coremodule",{"_index":43,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":834,"title":{},"body":{"injectables/StudentService.html":{}}}],["coverage",{"_index":1096,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrsmodule",{"_index":287,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":107,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":141,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["create(createattendancedto",{"_index":112,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{}}}],["create(createclassdto",{"_index":317,"title":{},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{}}}],["create(createmarkdto",{"_index":707,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["create(createstudentdto",{"_index":796,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["create(createsubjectdto",{"_index":865,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{}}}],["create(createteacherdto",{"_index":909,"title":{},"body":{"controllers/TeacherController.html":{},"injectables/TeacherService.html":{}}}],["create(createuserdto",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["createattendancedto",{"_index":113,"title":{"classes/CreateAttendanceDto.html":{}},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"classes/CreateAttendanceDto.html":{},"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["createclassdto",{"_index":318,"title":{"classes/CreateClassDto.html":{}},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateClassDto.html":{},"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["created",{"_index":1015,"title":{},"body":{"controllers/UserController.html":{}}}],["createdat",{"_index":766,"title":{},"body":{"entities/Student.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":770,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["createmarkdto",{"_index":377,"title":{"classes/CreateMarkDto.html":{}},"body":{"classes/CreateMarkDto.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["createquerybuilder(\"user",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["createquerybuilder('user",{"_index":535,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["createstudentdto",{"_index":380,"title":{"classes/CreateStudentDto.html":{}},"body":{"classes/CreateStudentDto.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["createstudentdto.address",{"_index":849,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.classname",{"_index":846,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.dateofbirth",{"_index":844,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.firstname",{"_index":841,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.gender",{"_index":843,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.guardianname",{"_index":847,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.guardianphone",{"_index":848,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.lastname",{"_index":842,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.password",{"_index":838,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.rollno",{"_index":845,"title":{},"body":{"injectables/StudentService.html":{}}}],["createstudentdto.username",{"_index":837,"title":{},"body":{"injectables/StudentService.html":{}}}],["createsubjectdto",{"_index":406,"title":{"classes/CreateSubjectDto.html":{}},"body":{"classes/CreateSubjectDto.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["createteacherdto",{"_index":409,"title":{"classes/CreateTeacherDto.html":{}},"body":{"classes/CreateTeacherDto.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["createteacherdto.dateofbirth",{"_index":950,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.email",{"_index":955,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.experience",{"_index":954,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.firstname",{"_index":947,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.gender",{"_index":949,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.joiningdate",{"_index":952,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.lastname",{"_index":948,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.mobile",{"_index":951,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.password",{"_index":943,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.qualification",{"_index":953,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createteacherdto.username",{"_index":942,"title":{},"body":{"injectables/TeacherService.html":{}}}],["createuser",{"_index":1012,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":1032,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(body",{"_index":1013,"title":{},"body":{"controllers/UserController.html":{}}}],["createusercommand",{"_index":429,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusercommand(body",{"_index":1039,"title":{},"body":{"controllers/UserController.html":{}}}],["createusercommand(createuserdto",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":436,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.role",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.username",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserexception",{"_index":442,"title":{"classes/CreateUserException.html":{}},"body":{"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"coverage.html":{}}}],["createuserexception(`you",{"_index":1035,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserexceptionfilter",{"_index":449,"title":{"classes/CreateUserExceptionFilter.html":{}},"body":{"classes/CreateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createuserhandler",{"_index":474,"title":{"classes/CreateUserHandler.html":{}},"body":{"classes/CreateUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserrequest",{"_index":502,"title":{"classes/CreateUserRequest.html":{}},"body":{"classes/CreateUserRequest.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials",{"_index":246,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["ctx",{"_index":465,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":467,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["currentpage",{"_index":646,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["currentpassword",{"_index":267,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":213,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserCommand.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["data.hasownproperty('items",{"_index":760,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["data.oldpassword",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database_url",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasestrategy",{"_index":275,"title":{"injectables/DatabaseStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["databasestrategy,jwtservice",{"_index":293,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["datasource",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":394,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["dateofbirth",{"_index":384,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["days",{"_index":669,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["db_config",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db_vars",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AttendanceController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"controllers/CoreController.html":{},"classes/CreateUserRequest.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"controllers/MarksController.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["decorators/response.decorator",{"_index":742,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["default",{"_index":300,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":291,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":134,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":125,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":610,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":750,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["descriptor.value[ignoredpropertyname",{"_index":752,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["dest",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["detail",{"_index":472,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["detail.response",{"_index":202,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["detail.response.ts",{"_index":1047,"title":{},"body":{"classes/UserDetailResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail.response.ts:5",{"_index":1049,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["development",{"_index":1240,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":598,"title":{},"body":{"controllers/HealthController.html":{}}}],["document",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":137,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{}}}],["dto/update",{"_index":139,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["duplicate",{"_index":554,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{}}}],["duplicateuserexception",{"_index":487,"title":{"classes/DuplicateUserException.html":{}},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["duplicateuserexception('phone",{"_index":497,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["duplicateuserexception('username",{"_index":492,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["duplicateuserexceptionfilter",{"_index":551,"title":{"classes/DuplicateUserExceptionFilter.html":{}},"body":{"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["e2e",{"_index":1250,"title":{},"body":{"index.html":{}}}],["eager",{"_index":784,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["editfilename",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":1227,"title":{},"body":{"index.html":{}}}],["email",{"_index":412,"title":{},"body":{"classes/CreateTeacherDto.html":{},"injectables/DatabaseStrategy.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["entities",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"entities/ClassEntity.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/class.entity",{"_index":348,"title":{},"body":{"modules/ClassModule.html":{}}}],["entities/student.entity",{"_index":817,"title":{},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["entities/teacher.entity",{"_index":930,"title":{},"body":{"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["entities/user.entity",{"_index":485,"title":{},"body":{"classes/CreateUserHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":334,"title":{"entities/ClassEntity.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}},"body":{"entities/ClassEntity.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{ts,js",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["entity{.ts,.js",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":520,"title":{},"body":{"classes/CreateUserRequest.html":{},"entities/User.html":{}}}],["enumerations",{"_index":1184,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":971,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":251,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":683,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["error('only",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":1236,"title":{},"body":{"index.html":{}}}],["exception",{"_index":459,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{}}}],["exception.message",{"_index":473,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exceptionfilter",{"_index":455,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exceptioninterceptor",{"_index":555,"title":{"injectables/ExceptionInterceptor.html":{}},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["exceptions/create",{"_index":461,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{}}}],["exceptions/duplicate",{"_index":488,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["exclude",{"_index":905,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["exclude()@column({nullable",{"_index":998,"title":{},"body":{"entities/User.html":{}}}],["exclude()@createdatecolumn",{"_index":995,"title":{},"body":{"entities/User.html":{}}}],["exclude()@updatedatecolumn",{"_index":1004,"title":{},"body":{"entities/User.html":{}}}],["execute",{"_index":478,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["execute(command",{"_index":481,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["executioncontext",{"_index":559,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["exists",{"_index":494,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/DuplicateUserException.html":{}}}],["experience",{"_index":413,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["expiresin",{"_index":215,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"dependencies.html":{}}}],["expressrequest",{"_index":734,"title":{},"body":{"interfaces/Req.html":{}}}],["extends",{"_index":445,"title":{},"body":{"classes/CreateUserException.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"injectables/TokenGuard.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDetailResponse.html":{}}}],["extname(file.originalname",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extra",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":693,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(req",{"_index":695,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["failed",{"_index":253,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["false",{"_index":1000,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["female",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":582,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["fetchuserbyidcommand",{"_index":572,"title":{"classes/FetchUserByIdCommand.html":{}},"body":{"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["fetchuserbyidhandler",{"_index":579,"title":{"classes/FetchUserByIdHandler.html":{}},"body":{"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.originalname.match",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.match(/\\.(svg|svg|jpg|jpeg|png|jpg|jpeg|png|gif",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.originalname.split('.')[0",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileextname",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filename",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fill(null",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1025,"title":{},"body":{"controllers/UserController.html":{}}}],["filter.ts",{"_index":453,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["filter.ts:8",{"_index":458,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["filters/create",{"_index":451,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["filters/duplicate",{"_index":552,"title":{},"body":{"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["findall",{"_index":108,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":109,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":144,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":120,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["first",{"_index":548,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["firstname",{"_index":385,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["firstpageurl",{"_index":647,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["format",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.colorize",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.combine",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.json",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.timestamp",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":249,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["framework",{"_index":1225,"title":{},"body":{"index.html":{}}}],["function",{"_index":747,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["functions",{"_index":1218,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":386,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["genderenum",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generatetoken",{"_index":660,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenStorage.html":{}}}],["generatetoken(user",{"_index":664,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["get('/health",{"_index":360,"title":{},"body":{"controllers/CoreController.html":{}}}],["get(':id",{"_index":121,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["get()@apiokresponse({description",{"_index":588,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getone",{"_index":538,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":1221,"title":{"index.html":{}},"body":{}}],["globallogger",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["good",{"_index":365,"title":{},"body":{"controllers/CoreController.html":{}}}],["graph",{"_index":1280,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1257,"title":{},"body":{"index.html":{}}}],["guardianname",{"_index":387,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["guardianphone",{"_index":388,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["handle",{"_index":570,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["hapi/joi",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["hashpassword",{"_index":297,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashpassword(password",{"_index":304,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashuserpassword",{"_index":298,"title":{},"body":{"classes/BcryptService.html":{}}}],["hashuserpassword(user",{"_index":307,"title":{},"body":{"classes/BcryptService.html":{}}}],["health",{"_index":359,"title":{},"body":{"controllers/CoreController.html":{},"controllers/HealthController.html":{}}}],["health.controller",{"_index":635,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":595,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":593,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":586,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":630,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["heap",{"_index":624,"title":{},"body":{"controllers/HealthController.html":{}}}],["hello",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1266,"title":{},"body":{"index.html":{}}}],["high",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":466,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["http",{"_index":608,"title":{},"body":{"controllers/HealthController.html":{}}}],["http/controller.ts/core.controllers",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/controllers/authentication.controller",{"_index":280,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["http/controllers/user.controller",{"_index":1058,"title":{},"body":{"modules/UserModule.html":{}}}],["http/interceptors/response",{"_index":370,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/services/user.service",{"_index":1057,"title":{},"body":{"modules/UserModule.html":{}}}],["http://localhost:3002",{"_index":616,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpexception",{"_index":184,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["httpexception(\"user",{"_index":260,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('authentication",{"_index":252,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('invalid",{"_index":245,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpexception('user",{"_index":248,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httphealthindicator",{"_index":594,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":633,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://nestjs.com",{"_index":1273,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":185,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/UserService.html":{}}}],["httpstatus.not_acceptable",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.unauthorized",{"_index":247,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":471,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["icommandhandler",{"_index":477,"title":{},"body":{"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{}}}],["id",{"_index":123,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"injectables/ClassService.html":{},"injectables/JwtStorage.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id.command",{"_index":583,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["id.command.ts",{"_index":574,"title":{},"body":{"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["id.command.ts:1",{"_index":576,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["id.command.ts:6",{"_index":581,"title":{},"body":{"classes/FetchUserByIdHandler.html":{}}}],["id.tostring",{"_index":855,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["ierrorbody",{"_index":462,"title":{"interfaces/IErrorBody.html":{}},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{}}}],["ignore",{"_index":697,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["ignoredpropertyname",{"_index":745,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagefilefilter",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":236,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["implements",{"_index":454,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"classes/UserDetailResponse.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/StudentModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}}}],["inactive",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incorrect",{"_index":264,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/UserService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":186,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{}}}],["inject(\"tokenstorage",{"_index":210,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["inject(jwtservice",{"_index":676,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppService.html":{},"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TokenGuard.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":203,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["injectrepository(student",{"_index":835,"title":{},"body":{"injectables/StudentService.html":{}}}],["injectrepository(teacher",{"_index":941,"title":{},"body":{"injectables/TeacherService.html":{}}}],["injectrepository(user",{"_index":211,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":1235,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1238,"title":{},"body":{"index.html":{}}}],["instance",{"_index":639,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["instanceof",{"_index":972,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["intercept",{"_index":557,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":558,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interface",{"_index":636,"title":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["interfaces",{"_index":637,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"overview.html":{}}}],["invalid",{"_index":509,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["invitation",{"_index":543,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["isemail",{"_index":513,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isenum",{"_index":514,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isenum(role",{"_index":521,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isignored",{"_index":755,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["isnotempty",{"_index":515,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isnotempty()@apiproperty({enum",{"_index":507,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isnotempty()@isstring()@apiproperty",{"_index":505,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isodatetime",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptional",{"_index":516,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isstring",{"_index":517,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["isuccessbody",{"_index":655,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["itemcount",{"_index":642,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["items",{"_index":654,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["itemsbody",{"_index":653,"title":{"interfaces/ItemsBody.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["itemsperpage",{"_index":644,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["iuserresponse",{"_index":1048,"title":{},"body":{"classes/UserDetailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["joi",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1264,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":787,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["joiningdate",{"_index":414,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["jwt",{"_index":292,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"dependencies.html":{}}}],["jwtservice",{"_index":206,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstorage",{"_index":274,"title":{"injectables/JwtStorage.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jwtstorage.token_expiry",{"_index":680,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstorage.token_type",{"_index":679,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["jwtstrategy",{"_index":686,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":1270,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":389,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["lastpageurl",{"_index":648,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["later",{"_index":237,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":1276,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1254,"title":{},"body":{"index.html":{}}}],["literal",{"_index":433,"title":{},"body":{"classes/CreateUserCommand.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":531,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"dependencies.html":{}}}],["log",{"_index":545,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["logger",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["loggerconfig",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":171,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(@request",{"_index":226,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["login(req",{"_index":175,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["loginuser",{"_index":172,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["loginuser(req",{"_index":181,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["logs/error.log",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["make",{"_index":832,"title":{},"body":{"injectables/StudentService.html":{}}}],["male",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manytoone",{"_index":904,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{}}}],["map",{"_index":738,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["map((data",{"_index":759,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["mark",{"_index":702,"title":{"classes/Mark.html":{}},"body":{"classes/Mark.html":{},"injectables/MarksService.html":{},"coverage.html":{}}}],["mark.dto",{"_index":716,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/UpdateMarkDto.html":{}}}],["mark.dto.ts",{"_index":379,"title":{},"body":{"classes/CreateMarkDto.html":{},"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["marks",{"_index":706,"title":{},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{}}}],["marks.controller",{"_index":726,"title":{},"body":{"modules/MarksModule.html":{}}}],["marks.service",{"_index":715,"title":{},"body":{"controllers/MarksController.html":{},"modules/MarksModule.html":{}}}],["marks/marks.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["markscontroller",{"_index":704,"title":{"controllers/MarksController.html":{}},"body":{"controllers/MarksController.html":{},"modules/MarksModule.html":{},"coverage.html":{}}}],["marksmodule",{"_index":44,"title":{"modules/MarksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarksModule.html":{},"modules.html":{},"overview.html":{}}}],["marksservice",{"_index":714,"title":{"injectables/MarksService.html":{}},"body":{"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memory",{"_index":622,"title":{},"body":{"controllers/HealthController.html":{}}}],["memoryhealthindicator",{"_index":599,"title":{},"body":{"controllers/HealthController.html":{}}}],["message",{"_index":362,"title":{},"body":{"controllers/CoreController.html":{},"classes/CreateUserException.html":{},"classes/CreateUserRequest.html":{},"classes/DuplicateUserException.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["messageformat",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["migrations",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/**/*.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1183,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1253,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":415,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["mode",{"_index":1244,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["mongodb+srv://${db_vars.username}:${db_vars.password}@${db_vars.host}/?retrywrites=true&w=majority",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodbhealth",{"_index":609,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosehealthindicator",{"_index":596,"title":{},"body":{"controllers/HealthController.html":{}}}],["more",{"_index":620,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["ms",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1271,"title":{},"body":{"index.html":{}}}],["name",{"_index":117,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":1232,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1275,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":566,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":634,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"controllers/ClassController.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateUserExceptionFilter.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":744,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":288,"title":{},"body":{"modules/AuthenticationModule.html":{},"classes/CreateUserHandler.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":207,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":190,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/TokenGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":194,"title":{},"body":{"controllers/AuthenticationController.html":{},"controllers/CoreController.html":{},"classes/CreateUserRequest.html":{},"controllers/HealthController.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":600,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["nestjswinstonloggerservice",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjwtstrategy",{"_index":278,"title":{"classes/NestJwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["new",{"_index":163,"title":{},"body":{"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"injectables/ClassService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/JwtStorage.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/SubjectService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":560,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe",{"_index":758,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":757,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["nextpageurl",{"_index":649,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["node.js",{"_index":1224,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":831,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["null",{"_index":585,"title":{},"body":{"classes/FetchUserByIdHandler.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["nullable",{"_index":1007,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":157,"title":{},"body":{"injectables/AttendanceService.html":{},"classes/BcryptService.html":{},"entities/ClassEntity.html":{},"injectables/ClassService.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserHandler.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/StudentService.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":224,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":793,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["observable",{"_index":564,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["okr",{"_index":615,"title":{},"body":{"controllers/HealthController.html":{}}}],["omit",{"_index":1051,"title":{},"body":{"classes/UserDetailResponse.html":{},"miscellaneous/typealiases.html":{}}}],["onetomany",{"_index":342,"title":{},"body":{"entities/ClassEntity.html":{}}}],["onetoone",{"_index":788,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["onetoone(undefined",{"_index":782,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["open",{"_index":1255,"title":{},"body":{"index.html":{}}}],["optional",{"_index":118,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"interfaces/IErrorBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["others",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1282,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1137,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationmetainterface",{"_index":641,"title":{"interfaces/PaginationMetaInterface.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{}}}],["param",{"_index":133,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{}}}],["parseint(process.env.database_port",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.db_connection_pool_max",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":791,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["partialtype",{"_index":979,"title":{},"body":{"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createattendancedto",{"_index":978,"title":{},"body":{"classes/UpdateAttendanceDto.html":{}}}],["partialtype(createclassdto",{"_index":981,"title":{},"body":{"classes/UpdateClassDto.html":{}}}],["partialtype(createmarkdto",{"_index":983,"title":{},"body":{"classes/UpdateMarkDto.html":{}}}],["partialtype(createstudentdto",{"_index":985,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["partialtype(createsubjectdto",{"_index":987,"title":{},"body":{"classes/UpdateSubjectDto.html":{}}}],["partialtype(createteacherdto",{"_index":989,"title":{},"body":{"classes/UpdateTeacherDto.html":{}}}],["partialtype(createuserdto",{"_index":992,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":530,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"dependencies.html":{}}}],["passport/strategy/database.strategy",{"_index":285,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passport/strategy/jwt.strategy",{"_index":279,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule",{"_index":277,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule.register",{"_index":290,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":532,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["passportstrategy(jwtstrategy",{"_index":701,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":523,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["password",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwordgenerator",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordlength",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":132,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":129,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["pdffilefilter",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":496,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["pino",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pinohttp",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(catcherror((err",{"_index":571,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["please",{"_index":546,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"index.html":{}}}],["port",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":114,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/AuthenticationController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["post(\"/authentication",{"_index":222,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post(\"/me",{"_index":254,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post(\"/user",{"_index":1030,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/me')@apibody({schema",{"_index":182,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["post('/user')@responsemessage('user",{"_index":1014,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["postgresql",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["prefix",{"_index":106,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/HealthController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["pretty",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previouspageurl",{"_index":650,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["primary",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primarygeneratedcolumn",{"_index":340,"title":{},"body":{"entities/ClassEntity.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["priorityenum",{"_index":1189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":168,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process",{"_index":618,"title":{},"body":{"controllers/HealthController.html":{}}}],["process.env.database_host",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_schema_sync",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_connection_pool_max",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_database",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.typeorm_query_logging",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1246,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1223,"title":{},"body":{"index.html":{}}}],["project",{"_index":1256,"title":{},"body":{"index.html":{}}}],["promise",{"_index":306,"title":{},"body":{"classes/BcryptService.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}}}],["promise.all",{"_index":230,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["properties",{"_index":225,"title":{"properties.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"entities/ClassEntity.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"properties.html":{}}}],["propertydescriptor",{"_index":751,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["propertykey",{"_index":749,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["props",{"_index":792,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"classes/UserDetailResponse.html":{}}}],["provide",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/token",{"_index":283,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public",{"_index":659,"title":{},"body":{"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{}}}],["qualification",{"_index":416,"title":{},"body":{"classes/CreateTeacherDto.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{}}}],["randomname",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${fileextname",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":1265,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AttendanceController.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":743,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["reflector().get(responsemessagekey",{"_index":753,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["refreshtoken",{"_index":234,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["rejected",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["remove",{"_index":110,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":148,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":124,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removes",{"_index":165,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/MarksService.html":{},"injectables/SubjectService.html":{}}}],["repository",{"_index":204,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":176,"title":{"interfaces/Req.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"interfaces/Req.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["req.headers.host",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.method",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.password",{"_index":263,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.url",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":241,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.user.id",{"_index":232,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.user.username",{"_index":243,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["req.username",{"_index":255,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["reqid",{"_index":763,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["request",{"_index":187,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{}}}],["requests/create",{"_index":1026,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requesttimeoutexception",{"_index":966,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["res.statuscode",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resourcebody",{"_index":651,"title":{"interfaces/ResourceBody.html":{}},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["response",{"_index":460,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["response.status(httpstatus.unprocessable_entity).json",{"_index":468,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{}}}],["response/types",{"_index":740,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["response/user",{"_index":201,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["responsemessage",{"_index":604,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"backend",{"_index":612,"title":{},"body":{"controllers/HealthController.html":{}}}],["responsemessage('user",{"_index":1031,"title":{},"body":{"controllers/UserController.html":{}}}],["responsemessagekey",{"_index":741,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsetime",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsetransforminterceptor",{"_index":368,"title":{"injectables/ResponseTransformInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["responsetransforminterceptorignore",{"_index":601,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":611,"title":{},"body":{"controllers/HealthController.html":{}}}],["retrieved')@healthcheck()@responsetransforminterceptorignore",{"_index":591,"title":{},"body":{"controllers/HealthController.html":{}}}],["retrieved'})@responsemessage('backend",{"_index":590,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":390,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["role.staff_admin",{"_index":1034,"title":{},"body":{"controllers/UserController.html":{}}}],["role.student",{"_index":839,"title":{},"body":{"injectables/StudentService.html":{},"entities/User.html":{}}}],["role.teacher",{"_index":944,"title":{},"body":{"injectables/TeacherService.html":{}}}],["role})@isenum(role",{"_index":508,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["rollno",{"_index":391,"title":{},"body":{"classes/CreateStudentDto.html":{},"entities/Student.html":{},"injectables/StudentService.html":{}}}],["rss",{"_index":627,"title":{},"body":{"controllers/HealthController.html":{}}}],["run",{"_index":1241,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":569,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":739,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["salt_rounds",{"_index":296,"title":{},"body":{"classes/BcryptService.html":{}}}],["scalable",{"_index":1228,"title":{},"body":{"index.html":{}}}],["schema",{"_index":223,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["secondary",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["secret",{"_index":217,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["secretkey",{"_index":218,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["select",{"_index":999,"title":{},"body":{"entities/User.html":{}}}],["select(['user.id",{"_index":537,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["server",{"_index":1229,"title":{},"body":{"index.html":{}}}],["services/bcrypt.service",{"_index":281,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/DatabaseStrategy.html":{}}}],["services/user.service",{"_index":1023,"title":{},"body":{"controllers/UserController.html":{}}}],["set",{"_index":859,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["setmetadata(responsemessagekey",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1230,"title":{},"body":{"index.html":{}}}],["singleline",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket.io",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Attendance.html":{},"controllers/AttendanceController.html":{},"modules/AttendanceModule.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"modules/ClassModule.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/CreateAttendanceDto.html":{},"classes/CreateClassDto.html":{},"classes/CreateMarkDto.html":{},"classes/CreateStudentDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/Mark.html":{},"controllers/MarksController.html":{},"modules/MarksModule.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"injectables/TokenGuard.html":{},"interfaces/TokenStorage.html":{},"classes/UpdateAttendanceDto.html":{},"classes/UpdateClassDto.html":{},"classes/UpdateMarkDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1259,"title":{},"body":{"index.html":{}}}],["src/.../authentication.controller.ts",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../contact.enum.ts",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../database.config.ts",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.ts",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db.config.ts",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.enum.ts",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../globallogger.ts",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.utils.ts",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password.generator.ts",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pinologgerconfig.ts",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../priority.enum.ts",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../response",{"_index":1220,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../response.decorator.ts",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["src/attendance/attendance.controller.ts",{"_index":105,"title":{},"body":{"controllers/AttendanceController.html":{},"coverage.html":{}}}],["src/attendance/attendance.controller.ts:11",{"_index":115,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:16",{"_index":119,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:21",{"_index":122,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:26",{"_index":130,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.controller.ts:31",{"_index":126,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["src/attendance/attendance.module.ts",{"_index":152,"title":{},"body":{"modules/AttendanceModule.html":{}}}],["src/attendance/attendance.service.ts",{"_index":154,"title":{},"body":{"injectables/AttendanceService.html":{},"coverage.html":{}}}],["src/attendance/attendance.service.ts:11",{"_index":156,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:15",{"_index":158,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:19",{"_index":160,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:23",{"_index":159,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/attendance.service.ts:7",{"_index":155,"title":{},"body":{"injectables/AttendanceService.html":{}}}],["src/attendance/dto/create",{"_index":373,"title":{},"body":{"classes/CreateAttendanceDto.html":{},"coverage.html":{}}}],["src/attendance/dto/update",{"_index":977,"title":{},"body":{"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["src/attendance/entities/attendance.entity.ts",{"_index":103,"title":{},"body":{"classes/Attendance.html":{},"coverage.html":{}}}],["src/authentication/authentication.module.ts",{"_index":276,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/http/controllers/authentication.controller",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts",{"_index":167,"title":{},"body":{"controllers/AuthenticationController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:110",{"_index":183,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:25",{"_index":174,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/controllers/authentication.controller.ts:52",{"_index":179,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["src/authentication/http/response/user",{"_index":1046,"title":{},"body":{"classes/UserDetailResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/authentication/http/token.guard.ts",{"_index":974,"title":{},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts",{"_index":522,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts:10",{"_index":525,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["src/authentication/passport/strategy/database.strategy.ts:19",{"_index":527,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts",{"_index":687,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"coverage.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts:10",{"_index":690,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/passport/strategy/jwt.strategy.ts:19",{"_index":692,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/providers/token",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/services/bcrypt.service",{"_index":1059,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/authentication/services/bcrypt.service.ts",{"_index":294,"title":{},"body":{"classes/BcryptService.html":{},"coverage.html":{}}}],["src/authentication/services/bcrypt.service.ts:11",{"_index":305,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:15",{"_index":308,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:5",{"_index":303,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/services/bcrypt.service.ts:7",{"_index":310,"title":{},"body":{"classes/BcryptService.html":{}}}],["src/authentication/storage/jwt.storage.ts",{"_index":656,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{}}}],["src/authentication/storage/jwt.storage.ts:15",{"_index":670,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:16",{"_index":672,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:18",{"_index":668,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:20",{"_index":663,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:32",{"_index":665,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/jwt.storage.ts:45",{"_index":667,"title":{},"body":{"injectables/JwtStorage.html":{}}}],["src/authentication/storage/token.storage.ts",{"_index":976,"title":{},"body":{"interfaces/TokenStorage.html":{},"coverage.html":{}}}],["src/class/class.controller.ts",{"_index":316,"title":{},"body":{"controllers/ClassController.html":{},"coverage.html":{}}}],["src/class/class.controller.ts:11",{"_index":319,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:16",{"_index":320,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:21",{"_index":321,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:26",{"_index":324,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.controller.ts:31",{"_index":322,"title":{},"body":{"controllers/ClassController.html":{}}}],["src/class/class.module.ts",{"_index":347,"title":{},"body":{"modules/ClassModule.html":{}}}],["src/class/class.service.ts",{"_index":351,"title":{},"body":{"injectables/ClassService.html":{},"coverage.html":{}}}],["src/class/class.service.ts:11",{"_index":353,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:15",{"_index":354,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:19",{"_index":356,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:23",{"_index":355,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/class.service.ts:7",{"_index":352,"title":{},"body":{"injectables/ClassService.html":{}}}],["src/class/dto/create",{"_index":375,"title":{},"body":{"classes/CreateClassDto.html":{},"coverage.html":{}}}],["src/class/dto/update",{"_index":980,"title":{},"body":{"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["src/class/entities/class.entity.ts",{"_index":336,"title":{},"body":{"entities/ClassEntity.html":{},"coverage.html":{}}}],["src/class/entities/class.entity.ts:10",{"_index":339,"title":{},"body":{"entities/ClassEntity.html":{}}}],["src/class/entities/class.entity.ts:7",{"_index":341,"title":{},"body":{"entities/ClassEntity.html":{}}}],["src/common/enums/priority.enum.ts",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/status.enum.ts",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/user",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/config/database.config.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/globallogger.ts",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/ormconfig.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/pinologgerconfig.ts",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/db.config.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":369,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/decorators/response.decorator",{"_index":605,"title":{},"body":{"controllers/HealthController.html":{},"controllers/UserController.html":{}}}],["src/core/decorators/response.decorator.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/http/controller.ts/core.controllers.ts",{"_index":358,"title":{},"body":{"controllers/CoreController.html":{},"coverage.html":{}}}],["src/core/http/controller.ts/core.controllers.ts:8",{"_index":361,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/http/interceptors/exception.interceptor.ts",{"_index":556,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["src/core/http/interceptors/exception.interceptor.ts:12",{"_index":562,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["src/core/http/interceptors/response",{"_index":735,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/http/interceptors/timeout.interceptor.ts",{"_index":964,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/core/http/interceptors/timeout.interceptor.ts:18",{"_index":965,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/core/http/request/request.ts",{"_index":733,"title":{},"body":{"interfaces/Req.html":{},"coverage.html":{}}}],["src/core/http/response/types.ts",{"_index":638,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/health/health.controller.ts",{"_index":587,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:30",{"_index":592,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":631,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/marks/dto/create",{"_index":378,"title":{},"body":{"classes/CreateMarkDto.html":{},"coverage.html":{}}}],["src/marks/dto/update",{"_index":982,"title":{},"body":{"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["src/marks/entities/mark.entity.ts",{"_index":703,"title":{},"body":{"classes/Mark.html":{},"coverage.html":{}}}],["src/marks/marks.controller.ts",{"_index":705,"title":{},"body":{"controllers/MarksController.html":{},"coverage.html":{}}}],["src/marks/marks.controller.ts:11",{"_index":708,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:16",{"_index":709,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:21",{"_index":710,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:26",{"_index":713,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.controller.ts:31",{"_index":711,"title":{},"body":{"controllers/MarksController.html":{}}}],["src/marks/marks.module.ts",{"_index":725,"title":{},"body":{"modules/MarksModule.html":{}}}],["src/marks/marks.service.ts",{"_index":727,"title":{},"body":{"injectables/MarksService.html":{},"coverage.html":{}}}],["src/marks/marks.service.ts:11",{"_index":729,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:15",{"_index":730,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:19",{"_index":732,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:23",{"_index":731,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/marks/marks.service.ts:7",{"_index":728,"title":{},"body":{"injectables/MarksService.html":{}}}],["src/student/dto/create",{"_index":381,"title":{},"body":{"classes/CreateStudentDto.html":{},"coverage.html":{}}}],["src/student/dto/update",{"_index":984,"title":{},"body":{"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["src/student/entities/student.entity",{"_index":344,"title":{},"body":{"entities/ClassEntity.html":{}}}],["src/student/entities/student.entity.ts",{"_index":765,"title":{},"body":{"entities/Student.html":{},"coverage.html":{}}}],["src/student/entities/student.entity.ts:13",{"_index":777,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:16",{"_index":773,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:19",{"_index":778,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:22",{"_index":774,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:25",{"_index":772,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:28",{"_index":779,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:31",{"_index":769,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:34",{"_index":775,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:37",{"_index":776,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:40",{"_index":768,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:44",{"_index":786,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:47",{"_index":771,"title":{},"body":{"entities/Student.html":{}}}],["src/student/entities/student.entity.ts:50",{"_index":781,"title":{},"body":{"entities/Student.html":{}}}],["src/student/student.controller.ts",{"_index":795,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student.controller.ts:11",{"_index":797,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:16",{"_index":798,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:21",{"_index":799,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:26",{"_index":802,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.controller.ts:31",{"_index":800,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student.module.ts",{"_index":815,"title":{},"body":{"modules/StudentModule.html":{}}}],["src/student/student.service.ts",{"_index":822,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/student/student.service.ts:10",{"_index":824,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:17",{"_index":826,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:41",{"_index":827,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:45",{"_index":828,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:49",{"_index":830,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/student.service.ts:59",{"_index":829,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/subject/dto/create",{"_index":407,"title":{},"body":{"classes/CreateSubjectDto.html":{},"coverage.html":{}}}],["src/subject/dto/update",{"_index":986,"title":{},"body":{"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["src/subject/entities/subject.entity.ts",{"_index":862,"title":{},"body":{"classes/Subject.html":{},"coverage.html":{}}}],["src/subject/subject.controller.ts",{"_index":864,"title":{},"body":{"controllers/SubjectController.html":{},"coverage.html":{}}}],["src/subject/subject.controller.ts:11",{"_index":866,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:16",{"_index":867,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:21",{"_index":868,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:26",{"_index":871,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.controller.ts:31",{"_index":869,"title":{},"body":{"controllers/SubjectController.html":{}}}],["src/subject/subject.module.ts",{"_index":883,"title":{},"body":{"modules/SubjectModule.html":{}}}],["src/subject/subject.service.ts",{"_index":885,"title":{},"body":{"injectables/SubjectService.html":{},"coverage.html":{}}}],["src/subject/subject.service.ts:11",{"_index":887,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:15",{"_index":888,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:19",{"_index":890,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:23",{"_index":889,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/subject/subject.service.ts:7",{"_index":886,"title":{},"body":{"injectables/SubjectService.html":{}}}],["src/teacher/dto/create",{"_index":410,"title":{},"body":{"classes/CreateTeacherDto.html":{},"coverage.html":{}}}],["src/teacher/dto/update",{"_index":988,"title":{},"body":{"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["src/teacher/entities/teacher.entity.ts",{"_index":892,"title":{},"body":{"entities/Teacher.html":{},"coverage.html":{}}}],["src/teacher/entities/teacher.entity.ts:16",{"_index":898,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:19",{"_index":896,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:22",{"_index":900,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:25",{"_index":897,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:28",{"_index":893,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:31",{"_index":901,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:34",{"_index":899,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:37",{"_index":902,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:40",{"_index":895,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:43",{"_index":894,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/entities/teacher.entity.ts:47",{"_index":903,"title":{},"body":{"entities/Teacher.html":{}}}],["src/teacher/teacher.controller.ts",{"_index":908,"title":{},"body":{"controllers/TeacherController.html":{},"coverage.html":{}}}],["src/teacher/teacher.controller.ts:11",{"_index":910,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:16",{"_index":911,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:21",{"_index":912,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:26",{"_index":915,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.controller.ts:31",{"_index":913,"title":{},"body":{"controllers/TeacherController.html":{}}}],["src/teacher/teacher.module.ts",{"_index":928,"title":{},"body":{"modules/TeacherModule.html":{}}}],["src/teacher/teacher.service.ts",{"_index":932,"title":{},"body":{"injectables/TeacherService.html":{},"coverage.html":{}}}],["src/teacher/teacher.service.ts:16",{"_index":936,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:44",{"_index":937,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:48",{"_index":938,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:52",{"_index":940,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:62",{"_index":939,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/teacher/teacher.service.ts:9",{"_index":934,"title":{},"body":{"injectables/TeacherService.html":{}}}],["src/user/commands/create",{"_index":430,"title":{},"body":{"classes/CreateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/commands/fetch",{"_index":573,"title":{},"body":{"classes/FetchUserByIdCommand.html":{},"coverage.html":{}}}],["src/user/commands/handlers/create",{"_index":475,"title":{},"body":{"classes/CreateUserHandler.html":{},"coverage.html":{}}}],["src/user/commands/handlers/fetch",{"_index":580,"title":{},"body":{"classes/FetchUserByIdHandler.html":{},"coverage.html":{}}}],["src/user/dto/create",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":991,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":789,"title":{},"body":{"entities/Student.html":{},"modules/StudentModule.html":{},"entities/Teacher.html":{},"modules/TeacherModule.html":{}}}],["src/user/entities/user.entity.ts",{"_index":994,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":997,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:20",{"_index":1008,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:27",{"_index":1001,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:35",{"_index":1003,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:39",{"_index":996,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:43",{"_index":1005,"title":{},"body":{"entities/User.html":{}}}],["src/user/exceptions/create",{"_index":443,"title":{},"body":{"classes/CreateUserException.html":{},"coverage.html":{}}}],["src/user/exceptions/duplicate",{"_index":550,"title":{},"body":{"classes/DuplicateUserException.html":{},"coverage.html":{}}}],["src/user/http/controllers/user.controller.ts",{"_index":1011,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/http/controllers/user.controller.ts:33",{"_index":1017,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:43",{"_index":1018,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:48",{"_index":1019,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:53",{"_index":1021,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/controllers/user.controller.ts:58",{"_index":1020,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/http/exception",{"_index":450,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"coverage.html":{}}}],["src/user/http/requests/create",{"_index":503,"title":{},"body":{"classes/CreateUserRequest.html":{},"coverage.html":{}}}],["src/user/http/services/user.service",{"_index":819,"title":{},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{}}}],["src/user/http/services/user.service.ts",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/http/services/user.service.ts:12",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:30",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:37",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:41",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:45",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:68",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:79",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/http/services/user.service.ts:89",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/types",{"_index":405,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["src/user/types.ts",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/user.module",{"_index":820,"title":{},"body":{"modules/StudentModule.html":{},"modules/TeacherModule.html":{}}}],["src/user/user.module.ts",{"_index":1056,"title":{},"body":{"modules/UserModule.html":{}}}],["src/utils/enums/contact.enum.ts",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/gender.enum.ts",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/status.enum.ts",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/user",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/images.utils.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/password.generator.ts",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1242,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1245,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1247,"title":{},"body":{"index.html":{}}}],["started",{"_index":1222,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1234,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":295,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["status",{"_index":470,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/HealthController.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["statuscode",{"_index":761,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["statusenum",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":1267,"title":{},"body":{"index.html":{}}}],["storage.provider",{"_index":284,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storage.provider.ts",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage/jwt.storage",{"_index":286,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["storage/token.storage",{"_index":198,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["strategy",{"_index":529,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"injectables/ClassService.html":{},"controllers/CoreController.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/FetchUserByIdCommand.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/NestJwtStrategy.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":343,"title":{"entities/Student.html":{}},"body":{"entities/ClassEntity.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["student.controller",{"_index":816,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.dto",{"_index":805,"title":{},"body":{"controllers/StudentController.html":{},"injectables/StudentService.html":{},"classes/UpdateStudentDto.html":{}}}],["student.dto.ts",{"_index":382,"title":{},"body":{"classes/CreateStudentDto.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["student.dto.ts:10",{"_index":398,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:11",{"_index":399,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:12",{"_index":392,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:13",{"_index":404,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:14",{"_index":401,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:15",{"_index":402,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:4",{"_index":396,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:5",{"_index":400,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:6",{"_index":397,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:7",{"_index":395,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:8",{"_index":403,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.dto.ts:9",{"_index":393,"title":{},"body":{"classes/CreateStudentDto.html":{}}}],["student.service",{"_index":804,"title":{},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{}}}],["student/student.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["studentcontroller",{"_index":794,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentmodule",{"_index":45,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentrepository",{"_index":825,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":803,"title":{"injectables/StudentService.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["sub",{"_index":675,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["subject",{"_index":861,"title":{"classes/Subject.html":{}},"body":{"classes/Subject.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"coverage.html":{}}}],["subject.controller",{"_index":884,"title":{},"body":{"modules/SubjectModule.html":{}}}],["subject.dto",{"_index":874,"title":{},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"classes/UpdateSubjectDto.html":{}}}],["subject.dto.ts",{"_index":408,"title":{},"body":{"classes/CreateSubjectDto.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["subject.service",{"_index":873,"title":{},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{}}}],["subject/subject.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["subjectcontroller",{"_index":863,"title":{"controllers/SubjectController.html":{}},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"coverage.html":{}}}],["subjectmodule",{"_index":46,"title":{"modules/SubjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubjectModule.html":{},"modules.html":{},"overview.html":{}}}],["subjectservice",{"_index":872,"title":{"injectables/SubjectService.html":{}},"body":{"controllers/SubjectController.html":{},"modules/SubjectModule.html":{},"injectables/SubjectService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":1016,"title":{},"body":{"controllers/UserController.html":{}}}],["super",{"_index":533,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["super(message",{"_index":448,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["super(props",{"_index":1052,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["supplied",{"_index":510,"title":{},"body":{"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{}}}],["support",{"_index":1260,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":833,"title":{},"body":{"injectables/StudentService.html":{}}}],["svg",{"_index":1278,"title":{},"body":{"modules.html":{}}}],["svg|svg|jpg|jpeg|png|jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('ignoredpropertyname",{"_index":746,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":652,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["table",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":748,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["teacher",{"_index":891,"title":{"entities/Teacher.html":{}},"body":{"entities/Teacher.html":{},"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["teacher.controller",{"_index":929,"title":{},"body":{"modules/TeacherModule.html":{}}}],["teacher.dto",{"_index":918,"title":{},"body":{"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{}}}],["teacher.dto.ts",{"_index":411,"title":{},"body":{"classes/CreateTeacherDto.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["teacher.dto.ts:10",{"_index":426,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:11",{"_index":419,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:12",{"_index":418,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:13",{"_index":428,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:14",{"_index":425,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:15",{"_index":427,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:4",{"_index":420,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:5",{"_index":423,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:6",{"_index":421,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:7",{"_index":417,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:8",{"_index":424,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.dto.ts:9",{"_index":422,"title":{},"body":{"classes/CreateTeacherDto.html":{}}}],["teacher.service",{"_index":917,"title":{},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{}}}],["teacher/teacher.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["teachercontroller",{"_index":907,"title":{"controllers/TeacherController.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"coverage.html":{}}}],["teachermodule",{"_index":47,"title":{"modules/TeacherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeacherModule.html":{},"modules.html":{},"overview.html":{}}}],["teacherrepository",{"_index":935,"title":{},"body":{"injectables/TeacherService.html":{}}}],["teacherservice",{"_index":916,"title":{"injectables/TeacherService.html":{}},"body":{"controllers/TeacherController.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"coverage.html":{},"overview.html":{}}}],["terminusmodule",{"_index":632,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covsupport",{"_index":1252,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1251,"title":{},"body":{"index.html":{}}}],["test@1234",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["testdb",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["tests",{"_index":1249,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1258,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.attendanceservice.create(createattendancedto",{"_index":142,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.findall",{"_index":143,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.findone(+id",{"_index":145,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.remove(+id",{"_index":149,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.attendanceservice.update(+id",{"_index":147,"title":{},"body":{"controllers/AttendanceController.html":{}}}],["this.bcrypt.hashpassword(command.data.password",{"_index":500,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["this.bcrypt.hashpassword(data.password",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["this.bcryptservice.verifycredentials(user",{"_index":549,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["this.classservice.create(createclassdto",{"_index":329,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.findall",{"_index":330,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.findone(+id",{"_index":331,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.remove(+id",{"_index":333,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.classservice.update(+id",{"_index":332,"title":{},"body":{"controllers/ClassController.html":{}}}],["this.commandbus.execute(new",{"_index":1038,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.fail(401",{"_index":698,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.hashpassword(user.password",{"_index":314,"title":{},"body":{"classes/BcryptService.html":{}}}],["this.health.check",{"_index":613,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('base",{"_index":614,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice",{"_index":677,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.jwtservice.sign(user",{"_index":220,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.jwtservice.signasync",{"_index":678,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":681,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.marksservice.create(createmarkdto",{"_index":718,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.findall",{"_index":719,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.findone(+id",{"_index":720,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.remove(+id",{"_index":722,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.marksservice.update(+id",{"_index":721,"title":{},"body":{"controllers/MarksController.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":623,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":629,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.mongodbhealth.pingcheck('database",{"_index":617,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.studentrepository.create",{"_index":840,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.createquerybuilder(\"student\").getmany",{"_index":853,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.createquerybuilder(\"user",{"_index":856,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.delete(id",{"_index":860,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.findone",{"_index":854,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentrepository.save(student",{"_index":852,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.studentservice.create(createstudentdto",{"_index":807,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.findall",{"_index":808,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.findone(+id",{"_index":809,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.remove(id",{"_index":811,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.update(+id",{"_index":810,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.subjectservice.create(createsubjectdto",{"_index":876,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.findall",{"_index":877,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.findone(+id",{"_index":878,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.remove(+id",{"_index":880,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.subjectservice.update(+id",{"_index":879,"title":{},"body":{"controllers/SubjectController.html":{}}}],["this.success(user",{"_index":700,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.teacherrepository.create",{"_index":946,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.createquerybuilder(\"teacher\").getmany",{"_index":958,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.createquerybuilder(\"user",{"_index":960,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.delete(id",{"_index":962,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.findone",{"_index":959,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherrepository.save(teacher",{"_index":957,"title":{},"body":{"injectables/TeacherService.html":{}}}],["this.teacherservice.create(createteacherdto",{"_index":920,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findall",{"_index":921,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.findone(+id",{"_index":922,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.remove(id",{"_index":924,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.teacherservice.update(+id",{"_index":923,"title":{},"body":{"controllers/TeacherController.html":{}}}],["this.tokenstorage",{"_index":694,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.tokenstorage.generatetoken",{"_index":256,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.tokenstorage.generatetoken(req.user",{"_index":233,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["this.tokenstorage.validatetoken(token",{"_index":699,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["this.userrepository",{"_index":534,"title":{},"body":{"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["this.userrepository.create",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder(\"user\").getmany",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.delete(id",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":231,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail",{"_index":684,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["this.userrepository.insert",{"_index":498,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["this.userrepository.save(user",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create",{"_index":836,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["this.userservice.create(body",{"_index":1040,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.create(createuserdto",{"_index":1041,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":1042,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(+id",{"_index":1043,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":1045,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":1044,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":244,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["throwerror",{"_index":568,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":967,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(1000",{"_index":969,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":968,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":963,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["title",{"_index":469,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/DuplicateUserExceptionFilter.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["todo",{"_index":235,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["token",{"_index":228,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{}}}],["token.storage",{"_index":673,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["token_expiry",{"_index":657,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["token_type",{"_index":658,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenbody",{"_index":674,"title":{"interfaces/TokenBody.html":{}},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"coverage.html":{}}}],["tokenbody.sub",{"_index":685,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenbody.type",{"_index":682,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["tokenguard",{"_index":973,"title":{"injectables/TokenGuard.html":{}},"body":{"injectables/TokenGuard.html":{},"coverage.html":{}}}],["tokenstorage",{"_index":197,"title":{"interfaces/TokenStorage.html":{}},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorageprovider",{"_index":282,"title":{},"body":{"modules/AuthenticationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokentype",{"_index":238,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["totalitems",{"_index":643,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["totalpages",{"_index":645,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{}}}],["touch",{"_index":1268,"title":{},"body":{"index.html":{}}}],["transform.interceptor",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{},"controllers/HealthController.html":{}}}],["transform.interceptor.ts",{"_index":736,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["transform.interceptor.ts:29",{"_index":737,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["transformer",{"_index":906,"title":{},"body":{"entities/Teacher.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transport",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.console",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.file",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn",{"_index":785,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{}}}],["try",{"_index":242,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["ts",{"_index":696,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{}}}],["twitter",{"_index":1274,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"controllers/ClassController.html":{},"entities/ClassEntity.html":{},"injectables/ClassService.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/Req.html":{},"interfaces/ResourceBody.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/Student.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"entities/Teacher.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1289,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":205,"title":{},"body":{"controllers/AuthenticationController.html":{},"entities/ClassEntity.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"entities/Student.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":597,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/StudentModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([classentity",{"_index":350,"title":{},"body":{"modules/ClassModule.html":{}}}],["typeormmodule.forfeature([student",{"_index":821,"title":{},"body":{"modules/StudentModule.html":{}}}],["typeormmodule.forfeature([teacher,user]),usermodule",{"_index":931,"title":{},"body":{"modules/TeacherModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":289,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":435,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRequest.html":{},"entities/User.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1233,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":528,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":539,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["unauthorizedexception('you",{"_index":541,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["undefined",{"_index":178,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{}}}],["unique",{"_index":1009,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":1248,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":180,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1288,"title":{},"body":{"properties.html":{}}}],["update",{"_index":111,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":146,"title":{},"body":{"controllers/AttendanceController.html":{},"controllers/ClassController.html":{},"controllers/MarksController.html":{},"controllers/StudentController.html":{},"controllers/SubjectController.html":{},"controllers/TeacherController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":127,"title":{},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"controllers/ClassController.html":{},"injectables/ClassService.html":{},"controllers/MarksController.html":{},"injectables/MarksService.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"controllers/TeacherController.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(student",{"_index":857,"title":{},"body":{"injectables/StudentService.html":{}}}],["update(teacher",{"_index":961,"title":{},"body":{"injectables/TeacherService.html":{}}}],["update(user",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["updateattendancedto",{"_index":128,"title":{"classes/UpdateAttendanceDto.html":{}},"body":{"controllers/AttendanceController.html":{},"injectables/AttendanceService.html":{},"classes/UpdateAttendanceDto.html":{},"coverage.html":{}}}],["updateclassdto",{"_index":323,"title":{"classes/UpdateClassDto.html":{}},"body":{"controllers/ClassController.html":{},"injectables/ClassService.html":{},"classes/UpdateClassDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":767,"title":{},"body":{"entities/Student.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":780,"title":{},"body":{"entities/Student.html":{},"entities/Teacher.html":{},"entities/User.html":{}}}],["updatemarkdto",{"_index":712,"title":{"classes/UpdateMarkDto.html":{}},"body":{"controllers/MarksController.html":{},"injectables/MarksService.html":{},"classes/UpdateMarkDto.html":{},"coverage.html":{}}}],["updates",{"_index":164,"title":{},"body":{"injectables/AttendanceService.html":{},"injectables/ClassService.html":{},"injectables/MarksService.html":{},"injectables/SubjectService.html":{}}}],["updatestudentdto",{"_index":801,"title":{"classes/UpdateStudentDto.html":{}},"body":{"controllers/StudentController.html":{},"classes/UpdateStudentDto.html":{},"coverage.html":{}}}],["updatesubjectdto",{"_index":870,"title":{"classes/UpdateSubjectDto.html":{}},"body":{"controllers/SubjectController.html":{},"injectables/SubjectService.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["updateteacherdto",{"_index":914,"title":{"classes/UpdateTeacherDto.html":{}},"body":{"controllers/TeacherController.html":{},"classes/UpdateTeacherDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":990,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["use",{"_index":619,"title":{},"body":{"controllers/HealthController.html":{},"injectables/UserService.html":{}}}],["useclass",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefilters",{"_index":1022,"title":{},"body":{"controllers/UserController.html":{}}}],["usefilters(new",{"_index":1029,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards",{"_index":188,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(authguard(\"local",{"_index":221,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["useguards(undefined)@post('/authentication')@apibody({schema",{"_index":177,"title":{},"body":{"controllers/AuthenticationController.html":{}}}],["user",{"_index":195,"title":{"entities/User.html":{}},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"classes/CreateUserException.html":{},"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"classes/DuplicateUserException.html":{},"classes/DuplicateUserExceptionFilter.html":{},"classes/FetchUserByIdCommand.html":{},"classes/FetchUserByIdHandler.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/Req.html":{},"entities/Student.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"entities/Teacher.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDetailResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.command",{"_index":489,"title":{},"body":{"classes/CreateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":431,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:3",{"_index":434,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["user.confirmedat",{"_index":540,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["user.dto",{"_index":993,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:4",{"_index":441,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":439,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":440,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.exception",{"_index":452,"title":{},"body":{"classes/CreateUserExceptionFilter.html":{},"classes/CreateUserHandler.html":{},"classes/DuplicateUserExceptionFilter.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["user.exception.ts",{"_index":444,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{},"coverage.html":{}}}],["user.exception.ts:1",{"_index":447,"title":{},"body":{"classes/CreateUserException.html":{},"classes/DuplicateUserException.html":{}}}],["user.handler",{"_index":1061,"title":{},"body":{"modules/UserModule.html":{}}}],["user.handler.ts",{"_index":476,"title":{},"body":{"classes/CreateUserHandler.html":{},"coverage.html":{}}}],["user.handler.ts:10",{"_index":480,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["user.handler.ts:17",{"_index":482,"title":{},"body":{"classes/CreateUserHandler.html":{}}}],["user.id",{"_index":257,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["user.password",{"_index":259,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/BcryptService.html":{},"injectables/DatabaseStrategy.html":{}}}],["user.raw[0",{"_index":850,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{}}}],["user.request",{"_index":1027,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.request.ts",{"_index":504,"title":{},"body":{"classes/CreateUserRequest.html":{},"coverage.html":{}}}],["user.request.ts:14",{"_index":506,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.request.ts:21",{"_index":511,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.request.ts:9",{"_index":512,"title":{},"body":{"classes/CreateUserRequest.html":{}}}],["user.username",{"_index":258,"title":{},"body":{"controllers/AuthenticationController.html":{},"injectables/DatabaseStrategy.html":{}}}],["user/entities/user.entity",{"_index":196,"title":{},"body":{"controllers/AuthenticationController.html":{},"modules/AuthenticationModule.html":{},"classes/BcryptService.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"injectables/JwtStrategy.html":{},"classes/NestJwtStrategy.html":{},"interfaces/TokenBody.html":{},"interfaces/TokenStorage.html":{},"classes/UserDetailResponse.html":{}}}],["user/user.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":1010,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":1037,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userdetailresponse",{"_index":200,"title":{"classes/UserDetailResponse.html":{}},"body":{"controllers/AuthenticationController.html":{},"classes/UserDetailResponse.html":{},"coverage.html":{}}}],["userid",{"_index":577,"title":{},"body":{"classes/FetchUserByIdCommand.html":{}}}],["usermodule",{"_index":48,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthenticationController.html":{},"classes/CreateStudentDto.html":{},"classes/CreateTeacherDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserHandler.html":{},"classes/CreateUserRequest.html":{},"injectables/DatabaseStrategy.html":{},"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["userpassword",{"_index":266,"title":{},"body":{"controllers/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":212,"title":{},"body":{"controllers/AuthenticationController.html":{},"classes/CreateUserHandler.html":{},"injectables/DatabaseStrategy.html":{},"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":818,"title":{"injectables/UserService.html":{}},"body":{"modules/StudentModule.html":{},"injectables/StudentService.html":{},"modules/TeacherModule.html":{},"injectables/TeacherService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertypeenum",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validate",{"_index":524,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["validate(username",{"_index":526,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["validatetoken",{"_index":661,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenStorage.html":{}}}],["validatetoken(token",{"_index":666,"title":{},"body":{"injectables/JwtStorage.html":{},"interfaces/TokenBody.html":{}}}],["validationerrors",{"_index":640,"title":{},"body":{"interfaces/IErrorBody.html":{},"interfaces/ItemsBody.html":{},"interfaces/PaginationMetaInterface.html":{},"interfaces/ResourceBody.html":{},"miscellaneous/typealiases.html":{}}}],["validator",{"_index":518,"title":{},"body":{"classes/CreateUserRequest.html":{},"dependencies.html":{}}}],["value",{"_index":301,"title":{},"body":{"classes/BcryptService.html":{},"injectables/JwtStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1291,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifycredentials",{"_index":299,"title":{},"body":{"classes/BcryptService.html":{}}}],["verifycredentials(user",{"_index":309,"title":{},"body":{"classes/BcryptService.html":{}}}],["version",{"_index":1287,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":1243,"title":{},"body":{"index.html":{}}}],["website",{"_index":1272,"title":{},"body":{"index.html":{}}}],["where(\"user.id=:id",{"_index":858,"title":{},"body":{"injectables/StudentService.html":{},"injectables/TeacherService.html":{},"injectables/UserService.html":{}}}],["where('user.username",{"_index":536,"title":{},"body":{"injectables/DatabaseStrategy.html":{}}}],["winston",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["winston.format.simple",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":1237,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1050,"title":{},"body":{"classes/UserDetailResponse.html":{}}}],["you'd",{"_index":1263,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AttendanceModule.html":{},"modules/AuthenticationModule.html":{},"modules/ClassModule.html":{},"modules/CoreModule.html":{},"modules/MarksModule.html":{},"modules/StudentModule.html":{},"modules/SubjectModule.html":{},"modules/TeacherModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAttendanceModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nClassModule\n\nClassModule\n\nAppModule -->\n\nClassModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMarksModule\n\nMarksModule\n\nAppModule -->\n\nMarksModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nAppModule -->\n\nSubjectModule->AppModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nAppModule -->\n\nTeacherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttendanceModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            ClassModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            MarksModule\n                        \n                        \n                            StudentModule\n                        \n                        \n                            SubjectModule\n                        \n                        \n                            TeacherModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { ConfigModule } from \"@nestjs/config\";\nimport { CoreModule } from './core/core.module';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { TeacherModule } from './teacher/teacher.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { StudentModule } from './student/student.module';\nimport { ClassModule } from './class/class.module';\nimport { SubjectModule } from './subject/subject.module';\nimport { AttendanceModule } from './attendance/attendance.module';\nimport { MarksModule } from './marks/marks.module';\nimport dbconfig from './config/database.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(\n      {\n        type: 'postgres',\n        host: '110.44.123.230',\n        port: 5432,\n        username: 'test',\n        password: 'test@1234',\n        database: 'testdb',\n        // entities: ['../**/*.entity.{ts,js}'],\n        synchronize: true,\n        autoLoadEntities: true,\n      }\n    ),\n    MulterModule.register({\n      dest: './files',\n    }),\n    ConfigModule.forRoot(),\n    CoreModule,\n    UserModule,\n    TeacherModule,\n    AuthenticationModule,\n    StudentModule,\n    ClassModule,\n    SubjectModule,\n    AttendanceModule,\n    MarksModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n\n// {\n//   type: 'postgres',\n//   host: '110.44.123.230',\n//   port: 5432,\n//   username: 'test',\n//   password: 'test@1234',\n//   database: 'testdb',\n//   // entities: ['../**/*.entity.{ts,js}'],\n//   synchronize: true,\n//   autoLoadEntities: true,\n// }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attendance.html":{"url":"classes/Attendance.html","title":"class - Attendance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attendance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/entities/attendance.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Attendance {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AttendanceController.html":{"url":"controllers/AttendanceController.html","title":"controller - AttendanceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AttendanceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/attendance.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                attendance\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAttendanceDto: CreateAttendanceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAttendanceDto\n                                            \n                                                            CreateAttendanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAttendanceDto: UpdateAttendanceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/attendance/attendance.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAttendanceDto\n                                            \n                                                            UpdateAttendanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AttendanceService } from './attendance.service';\nimport { CreateAttendanceDto } from './dto/create-attendance.dto';\nimport { UpdateAttendanceDto } from './dto/update-attendance.dto';\n\n@Controller('attendance')\nexport class AttendanceController {\n  constructor(private readonly attendanceService: AttendanceService) {}\n\n  @Post()\n  create(@Body() createAttendanceDto: CreateAttendanceDto) {\n    return this.attendanceService.create(createAttendanceDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.attendanceService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.attendanceService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAttendanceDto: UpdateAttendanceDto) {\n    return this.attendanceService.update(+id, updateAttendanceDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.attendanceService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AttendanceModule.html":{"url":"modules/AttendanceModule.html","title":"module - AttendanceModule","body":"\n                   \n\n\n\n\n    Modules\n    AttendanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AttendanceModule\n\n\n\ncluster_AttendanceModule_providers\n\n\n\n\nAttendanceService\n\nAttendanceService\n\n\n\nAttendanceModule\n\nAttendanceModule\n\nAttendanceModule -->\n\nAttendanceService->AttendanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/attendance/attendance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AttendanceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AttendanceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AttendanceService } from './attendance.service';\nimport { AttendanceController } from './attendance.controller';\n\n@Module({\n  controllers: [AttendanceController],\n  providers: [AttendanceService],\n})\nexport class AttendanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttendanceService.html":{"url":"injectables/AttendanceService.html","title":"injectable - AttendanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttendanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/attendance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAttendanceDto: CreateAttendanceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAttendanceDto\n                                            \n                                                            CreateAttendanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAttendanceDto: UpdateAttendanceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/attendance/attendance.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAttendanceDto\n                                            \n                                                            UpdateAttendanceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAttendanceDto } from './dto/create-attendance.dto';\nimport { UpdateAttendanceDto } from './dto/update-attendance.dto';\n\n@Injectable()\nexport class AttendanceService {\n  create(createAttendanceDto: CreateAttendanceDto) {\n    return 'This action adds a new attendance';\n  }\n\n  findAll() {\n    return `This action returns all attendance`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} attendance`;\n  }\n\n  update(id: number, updateAttendanceDto: UpdateAttendanceDto) {\n    return `This action updates a #${id} attendance`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} attendance`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthenticationController.html":{"url":"controllers/AuthenticationController.html","title":"controller - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/controllers/authentication.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                loginUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _createToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    _createToken(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req: Req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('/authentication')@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Req\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/me')@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/authentication/http/controllers/authentication.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpException, HttpStatus, Inject, Post, Request, UseGuards } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport * as bcrypt from \"bcrypt\";\n\nimport { ApiBody, ApiTags } from \"@nestjs/swagger\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\nimport { Req } from \"../../../core/http/request/request\";\nimport { UserDetailResponse } from \"../response/user-detail.response\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@ApiTags(\"Authentication\")\n@Controller()\nexport class AuthenticationController {\n  constructor(\n    private jwtService: JwtService,\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage,\n    @InjectRepository(User)\n    private readonly userRepository: Repository\n  ) {\n  }\n  private _createToken({ data }): any {\n    const expiresIn = '15d';\n    const secret = \"secretkey\";\n    const user = { data };\n    const accessToken = this.jwtService.sign(user);\n    return {\n      secret,\n      expiresIn,\n      accessToken,\n    };\n  }\n\n  @UseGuards(AuthGuard(\"local\"))\n  @Post(\"/authentication\")\n  @ApiBody({\n    schema: {\n      type: \"object\",\n      properties: {\n        username: {\n          type: \"string\"\n        },\n        password: {\n          type: \"string\"\n        }\n      }\n    }\n  })\n  async login(@Request() req: Req) {\n    console.log(req.user)\n    const [user, token] = await Promise.all([\n      await this.userRepository.findOne({ where: { id: req.user.id } }),\n      this.tokenStorage.generateToken(req.user)\n    ]);\n    return {\n      user: new UserDetailResponse({\n        ...user\n      }),\n      accessToken: token,\n      refreshToken: token, // Todo: will implement later\n      tokenType: \"bearer\"\n    };\n  }\n  // async login(@Request() req: Req) {\n  //   console.log('req.user:', req.user);\n  //    try {\n  //     if (!req.user || !req.user.username) {\n  //       throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n  //     }\n  \n  //     const [user, token] = await Promise.all([\n  //       await this.userRepository.findOne({ where: { id: req.user.id } }),\n  //       this.tokenStorage.generateToken(req.user)\n  //     ]);\n  \n  //     if (!user) {\n  //       throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n  //     }\n  \n  //     return {\n  //       user: new UserDetailResponse({\n  //         ...user\n  //       }),\n  //       accessToken: token,\n  //       refreshToken: token, // Todo: will implement later\n  //       tokenType: \"bearer\"\n  //     };\n  //   } catch (error) {\n  //     throw new HttpException('Authentication failed', HttpStatus.UNAUTHORIZED);\n  //   }\n  // }\n\n  @Post(\"/me\")\n  @ApiBody({\n    schema: {\n      type: \"object\",\n      properties: {\n        username: {\n          type: \"string\"\n        },\n        password: {\n          type: \"string\"\n        }\n      }\n    }\n  })\n  async loginUser(req) {\n    const user = await this.userRepository.findOne({ where: { username: req.username } });\n    const token = await this.tokenStorage.generateToken({\n      data: {\n        id: user.id,\n        username: user.username,\n        password: user.password\n      }\n    });\n\n\n\n    if (!user) {\n      throw new HttpException(\"User not found\", HttpStatus.UNAUTHORIZED);\n    }\n\n\n    const areEqual = await comparePasswords(user.password, req.password);\n\n    if (!areEqual) {\n      throw new HttpException(\n        \"Username or password is incorrect\",\n        HttpStatus.UNAUTHORIZED\n      );\n    } else {\n      return {\n        user: new UserDetailResponse({\n          ...user\n        }),\n        accessToken: token,\n        refreshToken: token, // Todo: will implement later\n        tokenType: \"bearer\"\n      };\n    }\n  }\n}\n\n\nexport const comparePasswords = async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nCoreModule->AuthenticationModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nAuthenticationModule->BcryptService \n\n\n\n\n\nJwtStorage \n\nJwtStorage \n\nJwtStorage  -->\n\nAuthenticationModule->JwtStorage \n\n\n\n\n\nDatabaseStrategy\n\nDatabaseStrategy\n\nAuthenticationModule -->\n\nDatabaseStrategy->AuthenticationModule\n\n\n\n\n\nJwtStorage\n\nJwtStorage\n\nAuthenticationModule -->\n\nJwtStorage->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseStrategy\n                        \n                        \n                            JwtStorage\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BcryptService\n                        \n                        \n                            JwtStorage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { User } from \"../user/entities/user.entity\";\nimport { NestJwtStrategy } from \"./passport/strategy/jwt.strategy\";\nimport { AuthenticationController } from \"./http/controllers/authentication.controller\";\nimport { BcryptService } from \"./services/bcrypt.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { TokenStorageProvider } from \"./providers/token-storage.provider\";\nimport { DatabaseStrategy } from \"./passport/strategy/database.strategy\";\nimport { CoreModule } from \"../core/core.module\";\nimport { JwtStorage } from \"./storage/jwt.storage\";\nimport { CqrsModule } from \"@nestjs/cqrs\";\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Module({\n  imports: [CqrsModule, TypeOrmModule.forFeature([User]), CoreModule, PassportModule.register({ defaultStrategy: \"jwt\" })],\n  providers: [DatabaseStrategy,JwtService, NestJwtStrategy, TokenStorageProvider, BcryptService, JwtStorage],\n  controllers: [AuthenticationController],\n  exports: [BcryptService, JwtStorage]\n})\nexport class AuthenticationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BcryptService.html":{"url":"classes/BcryptService.html","title":"class - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/services/bcrypt.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                SALT_ROUNDS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hashPassword\n                            \n                            \n                                    Async\n                                hashUserPassword\n                            \n                            \n                                verifyCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        SALT_ROUNDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 7\n                    \n                \n                    \n                        \n                                Defined in src/authentication/services/bcrypt.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n            \n                \nhashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashUserPassword(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCredentials\n                        \n                    \n                \n            \n            \n                \nverifyCredentials(user: User, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/services/bcrypt.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { User } from '../../user/entities/user.entity';\n\nexport class BcryptService {\n  private static readonly SALT_ROUNDS: number = 7;\n\n  verifyCredentials(user: User, password: string): Promise {\n    return bcrypt.compare(password, user.password);\n  }\n\n  hashPassword(password: string): Promise {\n    return bcrypt.hash(password, BcryptService.SALT_ROUNDS);\n  }\n\n  async hashUserPassword(user: User): Promise {\n    return {\n      ...user,\n      password: await this.hashPassword(user.password),\n    } as User;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClassController.html":{"url":"controllers/ClassController.html","title":"controller - ClassController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClassController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/class.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                class\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createClassDto: CreateClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createClassDto\n                                            \n                                                            CreateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateClassDto: UpdateClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/class/class.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateClassDto\n                                            \n                                                            UpdateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ClassService } from './class.service';\nimport { CreateClassDto } from './dto/create-class.dto';\nimport { UpdateClassDto } from './dto/update-class.dto';\n\n@Controller('class')\nexport class ClassController {\n  constructor(private readonly classService: ClassService) {}\n\n  @Post()\n  create(@Body() createClassDto: CreateClassDto) {\n    return this.classService.create(createClassDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.classService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.classService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateClassDto: UpdateClassDto) {\n    return this.classService.update(+id, updateClassDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.classService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ClassEntity.html":{"url":"entities/ClassEntity.html","title":"entity - ClassEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ClassEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/entities/class.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                className\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/class/entities/class.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/class/entities/class.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { Student } from 'src/student/entities/student.entity';\n\n@Entity()\nexport class ClassEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  className: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClassModule.html":{"url":"modules/ClassModule.html","title":"module - ClassModule","body":"\n                   \n\n\n\n\n    Modules\n    ClassModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClassModule\n\n\n\ncluster_ClassModule_providers\n\n\n\n\nClassService\n\nClassService\n\n\n\nClassModule\n\nClassModule\n\nClassModule -->\n\nClassService->ClassModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/class/class.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClassService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClassController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ClassEntity } from './entities/class.entity';\nimport { ClassController } from './class.controller';\nimport { ClassService } from './class.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ClassEntity])],\n  controllers: [ClassController],\n  providers: [ClassService],\n})\nexport class ClassModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassService.html":{"url":"injectables/ClassService.html","title":"injectable - ClassService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClassService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/class.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createClassDto: CreateClassDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createClassDto\n                                            \n                                                            CreateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateClassDto: UpdateClassDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/class/class.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateClassDto\n                                            \n                                                            UpdateClassDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateClassDto } from './dto/create-class.dto';\nimport { UpdateClassDto } from './dto/update-class.dto';\n\n@Injectable()\nexport class ClassService {\n  create(createClassDto: CreateClassDto) {\n    return 'This action adds a new class';\n  }\n\n  findAll() {\n    return `This action returns all class`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} class`;\n  }\n\n  update(id: number, updateClassDto: UpdateClassDto) {\n    return `This action updates a #${id} class`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} class`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/controller.ts/core.controllers.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                health\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        health\n                        \n                    \n                \n            \n            \n                \n                        \n                    health()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/health')\n                \n            \n\n                    \n                        \n                            Defined in src/core/http/controller.ts/core.controllers.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Core API')\n@Controller()\nexport class CoreController {\n  @Get('/health')\n  health() {\n    return {\n      message: 'All good!',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nResponseTransformInterceptor\n\nResponseTransformInterceptor\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nResponseTransformInterceptor->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResponseTransformInterceptor\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResponseTransformInterceptor } from './http/interceptors/response-transform.interceptor';\nimport { CoreController } from './http/controller.ts/core.controllers';\n\n@Module({\n  imports: [],\n  providers: [ResponseTransformInterceptor],\n  controllers: [CoreController],\n  exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAttendanceDto.html":{"url":"classes/CreateAttendanceDto.html","title":"class - CreateAttendanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAttendanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/dto/create-attendance.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAttendanceDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClassDto.html":{"url":"classes/CreateClassDto.html","title":"class - CreateClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/dto/create-class.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateClassDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMarkDto.html":{"url":"classes/CreateMarkDto.html","title":"class - CreateMarkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMarkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/dto/create-mark.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMarkDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStudentDto.html":{"url":"classes/CreateStudentDto.html","title":"class - CreateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dto/create-student.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                className\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                guardianName\n                            \n                            \n                                guardianPhone\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                rollNo\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardianName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardianPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/student/dto/create-student.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"src/user/types\";\n\nexport class CreateStudentDto {\n  firstName: string;\n  lastName: string;\n  gender: string;\n  dateOfBirth: Date;\n  rollNo: string;\n  className: string;\n  guardianName: string;\n  guardianPhone: string;\n  address: string;\n  username: string;\n  password: string;\n  readonly role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubjectDto.html":{"url":"classes/CreateSubjectDto.html","title":"class - CreateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/dto/create-subject.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSubjectDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherDto.html":{"url":"classes/CreateTeacherDto.html","title":"class - CreateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/dto/create-teacher.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                experience\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                joiningDate\n                            \n                            \n                                lastName\n                            \n                            \n                                mobile\n                            \n                            \n                                password\n                            \n                            \n                                qualification\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joiningDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/teacher/dto/create-teacher.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"src/user/types\";\n\nexport class CreateTeacherDto {\n  firstName: string;\n  lastName: string;\n  gender: string;\n  dateOfBirth: Date;\n  mobile: string;\n  joiningDate: Date;\n  qualification: string;\n  experience: number;\n  email: string;\n  username: string;\n  password: string;\n  readonly role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/create-user.command.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../types\";\n\nexport class CreateUserCommand {\n  constructor(\n    readonly data: {\n      readonly username: string;\n      readonly password: string;\n      readonly role: Role;\n    },\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"../types\";\n\nexport class CreateUserDto {\n    username: string;\n    password: string;\n    role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserException.html":{"url":"classes/CreateUserException.html","title":"class - CreateUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/exceptions/create-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/exceptions/create-user.exception.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserException extends Error {\n  constructor(message = 'Could not create user.') {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserExceptionFilter.html":{"url":"classes/CreateUserExceptionFilter.html","title":"class - CreateUserExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/exception-filters/create-user.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: CreateUserException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/exception-filters/create-user.exception-filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            CreateUserException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { CreateUserException } from '../../exceptions/create-user.exception';\nimport { IErrorBody } from '../../../core/http/response/types';\n\n@Catch(CreateUserException)\nexport class CreateUserExceptionFilter implements ExceptionFilter {\n  catch(exception: CreateUserException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      title: 'Could not create user',\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      detail: exception.message,\n    } as IErrorBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserHandler.html":{"url":"classes/CreateUserHandler.html","title":"class - CreateUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/handlers/create-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcrypt: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/handlers/create-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcrypt\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/commands/handlers/create-user.handler.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateUserCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entities/user.entity';\nimport { BcryptService } from '../../../authentication/services/bcrypt.service';\nimport { DuplicateUserException } from '../../exceptions/duplicate-user.exception';\nimport { CreateUserCommand } from '../create-user.command';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly bcrypt: BcryptService,\n  ) {}\n\n  async execute(command: CreateUserCommand): Promise {\n    if (await this.userRepository.findOne({ where: { username: command.data.username } })) {\n      throw new DuplicateUserException('Username already exists');\n    }\n\n    // if (command.data.phone && (await this.userRepository.findOne({ where: { phone: command.data.phone } }))) {\n    //   throw new DuplicateUserException('Phone number already exists');\n    // }\n\n    const user = await this.userRepository.insert({ ...command.data, password: await this.bcrypt.hashPassword(command.data.password) });\n    console.log(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRequest.html":{"url":"classes/CreateUserRequest.html","title":"class - CreateUserRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/requests/create-user.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty({enum: Role})@IsEnum(Role, {message: 'Invalid role supplied'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/http/requests/create-user.request.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Role } from '../../types';\n\nexport class  CreateUserRequest {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty()\n  readonly username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty()\n  readonly password: string;\n\n  @IsNotEmpty()\n  @ApiProperty({ enum: Role })\n  @IsEnum(Role, {\n    message: 'Invalid role supplied',\n  })\n  readonly role: Role;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseStrategy.html":{"url":"injectables/DatabaseStrategy.html","title":"injectable - DatabaseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/database.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcryptService: BcryptService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/passport/strategy/database.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptService\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/passport/strategy/database.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { User } from '../../../user/entities/user.entity';\nimport { BcryptService } from '../../services/bcrypt.service';\n\n@Injectable()\nexport class DatabaseStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly bcryptService: BcryptService,\n  ) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.userRepository\n      .createQueryBuilder('user')\n      .where('user.username = :username', {\n        username,\n      })\n      .select(['user.id', 'user.username', 'user.password'])\n      .getOne();\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid username or password supplied');\n    }\n\n    // if (!user.confirmedAt) {\n    //   throw new UnauthorizedException('You must accept the invitation before you log in. Please check your email first.');\n    // }\n\n    if (await this.bcryptService.verifyCredentials(user, password)) {\n      return user;\n    }\n\n    throw new UnauthorizedException('Invalid username or password supplied');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUserException.html":{"url":"classes/DuplicateUserException.html","title":"class - DuplicateUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/exceptions/duplicate-user.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/exceptions/duplicate-user.exception.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DuplicateUserException extends Error {\n  constructor(message = 'User already exists') {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUserExceptionFilter.html":{"url":"classes/DuplicateUserExceptionFilter.html","title":"class - DuplicateUserExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUserExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/exception-filters/duplicate-user.exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: DuplicateUserException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/exception-filters/duplicate-user.exception-filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            DuplicateUserException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\nimport { DuplicateUserException } from '../../exceptions/duplicate-user.exception';\nimport { IErrorBody } from '../../../core/http/response/types';\n\n@Catch(DuplicateUserException)\nexport class DuplicateUserExceptionFilter implements ExceptionFilter {\n  catch(exception: DuplicateUserException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    response.status(HttpStatus.UNPROCESSABLE_ENTITY).json({\n      title: 'Duplicate user',\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      detail: exception.message,\n    } as IErrorBody);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionInterceptor.html":{"url":"injectables/ExceptionInterceptor.html","title":"injectable - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/exception.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/exception.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadGatewayException,\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next\n      .handle()\n      .pipe(catchError((err) => throwError(() => new BadGatewayException())));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserByIdCommand.html":{"url":"classes/FetchUserByIdCommand.html","title":"class - FetchUserByIdCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserByIdCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/fetch-user-by-id.command.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/user/commands/fetch-user-by-id.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FetchUserByIdCommand{\n  constructor(readonly userId: string) {\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserByIdHandler.html":{"url":"classes/FetchUserByIdHandler.html","title":"class - FetchUserByIdHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserByIdHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/commands/handlers/fetch-user-by-id.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: FetchUserByIdCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/commands/handlers/fetch-user-by-id.command.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            FetchUserByIdCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from \"@nestjs/cqrs\";\nimport { FetchUserByIdCommand } from \"../fetch-user-by-id.command\";\n\n@CommandHandler(FetchUserByIdCommand)\nclass FetchUserByIdHandler implements ICommandHandler{\n  async execute(command: FetchUserByIdCommand): Promise {\n    return null;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Backend Health status retrieved'})@ResponseMessage('Backend Health status retrieved')@HealthCheck()@ResponseTransformInterceptorIgnore()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  MongooseHealthIndicator,\n  TypeOrmHealthIndicator,\n  DiskHealthIndicator,\n  MemoryHealthIndicator,\n} from '@nestjs/terminus';\nimport { ResponseTransformInterceptorIgnore } from '../core/http/interceptors/response-transform.interceptor';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\n\n@ApiTags('Health Check')\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private mongoDBHealth: MongooseHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ description: 'Backend Health status retrieved' })\n  @ResponseMessage(\"Backend Health status retrieved\")\n  @HealthCheck()\n  @ResponseTransformInterceptorIgnore()\n  check() {\n    // return this.health.check([() => this.http.pingCheck('base-OKR', 'http://localhost:3002')]);\n    return this.health.check([\n      () => this.mongoDBHealth.pingCheck('database'),\n      // the process should not use more than 300MB memory\n      () =>\n        this.memoryHealthIndicator.checkHeap('memory heap', 300 * 1024 * 1024),\n      // The process should not have more than 300MB RSS memory allocated\n      () =>\n        this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorBody.html":{"url":"interfaces/IErrorBody.html","title":"interface - IErrorBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validationErrors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationErrors:         ValidationErrors\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidationErrors\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemsBody.html":{"url":"interfaces/ItemsBody.html","title":"interface - ItemsBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemsBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStorage.html":{"url":"injectables/JwtStorage.html","title":"injectable - JwtStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/jwt.storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                jwtService\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TOKEN_EXPIRY\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                TOKEN_TYPE\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateToken\n                            \n                            \n                                    Public\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/storage/jwt.storage.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/storage/jwt.storage.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/storage/jwt.storage.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        jwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtService\n\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TOKEN_EXPIRY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '7 days'\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        TOKEN_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authentication'\n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/authentication/storage/jwt.storage.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { TokenStorage } from './token.storage';\n\ninterface TokenBody {\n  readonly type: string;\n  readonly sub: string;\n}\n\n@Injectable()\nexport class JwtStorage implements TokenStorage {\n  private static readonly TOKEN_EXPIRY = '7 days';\n  private static readonly TOKEN_TYPE = 'authentication';\n\n  private readonly jwtService: JwtService;\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  constructor(\n    @Inject(JwtService)\n    jwtService: JwtService,\n    @InjectRepository(User)\n    userRepository: Repository,\n  ) {\n    this.jwtService = jwtService;\n    this.userRepository = userRepository;\n  }\n\n  public async generateToken(user: User): Promise {\n    return this.jwtService.signAsync(\n      {\n        type: JwtStorage.TOKEN_TYPE,\n        sub: user.id,\n      } as TokenBody,\n      {\n        expiresIn: JwtStorage.TOKEN_EXPIRY,\n        secret: 'secretkey'\n      },\n    );\n  }\n\n  public async validateToken(token: string): Promise {\n    const tokenBody: TokenBody = await this.jwtService.verifyAsync(token);\n    if (tokenBody.type !== JwtStorage.TOKEN_TYPE) {\n      throw new Error('Invalid token');\n    }\n\n    return this.userRepository.findOneOrFail({ where: { id: tokenBody.sub } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Strategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/passport/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                        TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/authentication/passport/strategy/jwt.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from \"passport-strategy\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { Request } from \"express\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\n\n@Injectable()\nexport class JwtStrategy extends Strategy {\n  constructor(\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage\n  ) { \n    super();\n    this.tokenStorage = tokenStorage;\n  }\n\n  public async authenticate(req: Request): Promise {\n    const token: string | null = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n\n    if (!token) {\n      // @ts-ignore\n      return this.fail(401);\n    }\n\n    try {\n      const user: User = await this.tokenStorage.validateToken(token);\n      // @ts-ignore\n      this.success(user);\n\n    } catch {\n      // @ts-ignore\n      this.fail(401);\n    }\n  }\n}\n\nexport class NestJwtStrategy extends PassportStrategy(JwtStrategy, \"jwt\") {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mark.html":{"url":"classes/Mark.html","title":"class - Mark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/entities/mark.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mark {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MarksController.html":{"url":"controllers/MarksController.html","title":"controller - MarksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MarksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/marks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                marks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMarkDto: CreateMarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateMarkDto: UpdateMarkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/marks/marks.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMarkDto\n                                            \n                                                            UpdateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { MarksService } from './marks.service';\nimport { CreateMarkDto } from './dto/create-mark.dto';\nimport { UpdateMarkDto } from './dto/update-mark.dto';\n\n@Controller('marks')\nexport class MarksController {\n  constructor(private readonly marksService: MarksService) {}\n\n  @Post()\n  create(@Body() createMarkDto: CreateMarkDto) {\n    return this.marksService.create(createMarkDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.marksService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.marksService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMarkDto: UpdateMarkDto) {\n    return this.marksService.update(+id, updateMarkDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.marksService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarksModule.html":{"url":"modules/MarksModule.html","title":"module - MarksModule","body":"\n                   \n\n\n\n\n    Modules\n    MarksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarksModule\n\n\n\ncluster_MarksModule_providers\n\n\n\n\nMarksService\n\nMarksService\n\n\n\nMarksModule\n\nMarksModule\n\nMarksModule -->\n\nMarksService->MarksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/marks/marks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MarksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MarksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MarksService } from './marks.service';\nimport { MarksController } from './marks.controller';\n\n@Module({\n  controllers: [MarksController],\n  providers: [MarksService],\n})\nexport class MarksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarksService.html":{"url":"injectables/MarksService.html","title":"injectable - MarksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/marks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMarkDto: CreateMarkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarkDto\n                                            \n                                                            CreateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMarkDto: UpdateMarkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/marks/marks.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMarkDto\n                                            \n                                                            UpdateMarkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMarkDto } from './dto/create-mark.dto';\nimport { UpdateMarkDto } from './dto/update-mark.dto';\n\n@Injectable()\nexport class MarksService {\n  create(createMarkDto: CreateMarkDto) {\n    return 'This action adds a new mark';\n  }\n\n  findAll() {\n    return `This action returns all marks`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} mark`;\n  }\n\n  update(id: number, updateMarkDto: UpdateMarkDto) {\n    return `This action updates a #${id} mark`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} mark`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestJwtStrategy.html":{"url":"classes/NestJwtStrategy.html","title":"class - NestJwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestJwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/passport/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(JwtStrategy, \"jwt\")\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Strategy } from \"passport-strategy\";\nimport { ExtractJwt } from \"passport-jwt\";\nimport { Request } from \"express\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { User } from \"../../../user/entities/user.entity\";\nimport { TokenStorage } from \"../../storage/token.storage\";\n\n@Injectable()\nexport class JwtStrategy extends Strategy {\n  constructor(\n    @Inject(\"TokenStorage\")\n    private readonly tokenStorage: TokenStorage\n  ) { \n    super();\n    this.tokenStorage = tokenStorage;\n  }\n\n  public async authenticate(req: Request): Promise {\n    const token: string | null = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n\n    if (!token) {\n      // @ts-ignore\n      return this.fail(401);\n    }\n\n    try {\n      const user: User = await this.tokenStorage.validateToken(token);\n      // @ts-ignore\n      this.success(user);\n\n    } catch {\n      // @ts-ignore\n      this.fail(401);\n    }\n  }\n}\n\nexport class NestJwtStrategy extends PassportStrategy(JwtStrategy, \"jwt\") {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationMetaInterface.html":{"url":"interfaces/PaginationMetaInterface.html","title":"interface - PaginationMetaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationMetaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstPageUrl\n                                        \n                                \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            itemsPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastPageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nextPageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            previousPageUrl\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previousPageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previousPageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Req.html":{"url":"interfaces/Req.html","title":"interface - Req","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Req\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/request/request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ExpressRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request as ExpressRequest } from 'express';\n\nexport interface Req extends ExpressRequest {\n  readonly user: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceBody.html":{"url":"interfaces/ResourceBody.html","title":"interface - ResourceBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/response/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type ValidationErrors = {\n  readonly [type: string]: {\n    readonly [type: string]: string;\n  };\n};\n\nexport interface IErrorBody {\n  readonly type?: string;\n  readonly title: string;\n  readonly status: number;\n  readonly detail?: string;\n  readonly instance?: string;\n  readonly validationErrors?: ValidationErrors;\n}\n\nexport interface PaginationMetaInterface {\n  readonly itemCount: number;\n  readonly totalItems: number;\n  readonly itemsPerPage: number;\n  readonly totalPages: number;\n  readonly currentPage: number;\n  readonly firstPageUrl?: string;\n  readonly lastPageUrl?: string;\n  readonly nextPageUrl?: string;\n  readonly previousPageUrl?: string;\n}\n\nexport interface ResourceBody {\n  readonly data: T;\n}\n\nexport interface ItemsBody {\n  readonly items: T;\n}\n\nexport type ISuccessBody = ResourceBody | ItemsBody;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseTransformInterceptor.html":{"url":"injectables/ResponseTransformInterceptor.html","title":"injectable - ResponseTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/response-transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/response-transform.interceptor.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ISuccessBody } from '../response/types';\nimport { ResponseMessageKey } from '../../decorators/response.decorator';\nimport { Reflector } from '@nestjs/core';\n\nconst IgnoredPropertyName = Symbol('IgnoredPropertyName');\n\nexport function ResponseTransformInterceptorIgnore() {\n  return function (\n    target,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    descriptor.value[IgnoredPropertyName] = true;\n  };\n}\n\n@Injectable()\nexport class ResponseTransformInterceptor\n  implements NestInterceptor | null>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | null> {\n    const responseMessage =\n      new Reflector().get(ResponseMessageKey, context.getHandler()) ??\n      '';\n    const isIgnored = context.getHandler()[IgnoredPropertyName];\n    if (!!isIgnored) {\n      return next.handle().pipe(map((data) => data));\n    }\n\n    return next.handle().pipe(\n      map((data: ISuccessBody | undefined) => {\n        if (data === undefined) {\n          return null;\n        }\n\n        if (data.hasOwnProperty('items')) {\n          return data;\n        }\n\n        return {\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          reqId: context.switchToHttp().getRequest().reqId,\n          message: responseMessage ?? '',\n          data,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Student.html":{"url":"entities/Student.html","title":"entity - Student","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/entities/student.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                className\n                            \n                            \n                                    \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                guardianName\n                            \n                            \n                                    \n                                guardianPhone\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                rollNo\n                            \n                            \n                                    \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guardianName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guardianPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rollNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true, eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/student/entities/student.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { User } from \"src/user/entities/user.entity\";\n\n@Entity()\nexport class Student {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  gender: string;\n\n  @Column()\n  dateOfBirth: Date;\n\n  @Column()\n  rollNo: string;\n\n  @Column()\n  className: string;\n\n  @Column()\n  guardianName: string;\n\n  @Column()\n  guardianPhone: string;\n\n  @Column()\n  address: string;\n\n  @OneToOne(() => User, { cascade: true, eager: true })\n  @JoinColumn()\n  user: User;\n\n  @CreateDateColumn()\n  readonly createdAt: Date;\n\n  @UpdateDateColumn()\n  readonly updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createStudentDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStudentDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateStudentDto: UpdateStudentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/student/student.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStudentDto\n                                            \n                                                            UpdateStudentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport { CreateStudentDto } from './dto/create-student.dto';\nimport { UpdateStudentDto } from './dto/update-student.dto';\n\n@Controller('student')\nexport class StudentController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @Post()\n  create(@Body() createStudentDto: any) {\n    return this.studentService.create(createStudentDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.studentService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.studentService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateStudentDto: UpdateStudentDto) {\n    return this.studentService.update(+id, updateStudentDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.studentService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_providers\n\n\n\ncluster_StudentModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nUserModule->StudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport { StudentController } from './student.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Student } from './entities/student.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Student, User]), UserModule],\n  controllers: [StudentController],\n  providers: [StudentService],\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/student/student.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createStudentDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStudentDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/student/student.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Student } from './entities/student.entity'; // Make sure to import the correct entity\nimport { UserService } from 'src/user/http/services/user.service';\nimport { Role } from 'src/user/types';\nimport { CreateStudentDto } from './dto/create-student.dto';\n\n@Injectable()\nexport class StudentService {\n  constructor(\n    @InjectRepository(Student)\n    private studentRepository: Repository,\n    private readonly userService: UserService,\n  ) {}\n\n  async create(createStudentDto: any) {\n    const user = await this.userService.create({\n      username: createStudentDto.username,\n      password: createStudentDto.password,\n      role: Role.student,\n    });\n\n    // Create student with the user ID\n    const student = this.studentRepository.create({\n      firstName: createStudentDto.firstName,\n      lastName: createStudentDto.lastName,\n      gender: createStudentDto.gender,\n      dateOfBirth: createStudentDto.dateOfBirth,\n      rollNo: createStudentDto.rollNo,\n      className: createStudentDto.className,\n      guardianName: createStudentDto.guardianName,\n      guardianPhone: createStudentDto.guardianPhone,\n      address: createStudentDto.address,\n      user: user.raw[0], // Assign the user entity\n    });\n\n    return this.studentRepository.save(student);\n  }\n\n  async findAll() {\n    return this.studentRepository.createQueryBuilder(\"student\").getMany();\n  }\n\n  async findOne(id: number) {\n    return this.studentRepository.findOne({ where: { id: id.toString() } });\n  }\n\n  async update(id, data) {\n    return this.studentRepository.createQueryBuilder(\"user\")\n      .update(Student)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.studentRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subject.html":{"url":"classes/Subject.html","title":"class - Subject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/entities/subject.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Subject {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubjectController.html":{"url":"controllers/SubjectController.html","title":"controller - SubjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subject\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubjectDto: CreateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubjectDto\n                                            \n                                                            CreateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSubjectDto: UpdateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subject/subject.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSubjectDto\n                                            \n                                                            UpdateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SubjectService } from './subject.service';\nimport { CreateSubjectDto } from './dto/create-subject.dto';\nimport { UpdateSubjectDto } from './dto/update-subject.dto';\n\n@Controller('subject')\nexport class SubjectController {\n  constructor(private readonly subjectService: SubjectService) {}\n\n  @Post()\n  create(@Body() createSubjectDto: CreateSubjectDto) {\n    return this.subjectService.create(createSubjectDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.subjectService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subjectService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateSubjectDto: UpdateSubjectDto) {\n    return this.subjectService.update(+id, updateSubjectDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.subjectService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubjectModule.html":{"url":"modules/SubjectModule.html","title":"module - SubjectModule","body":"\n                   \n\n\n\n\n    Modules\n    SubjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubjectModule\n\n\n\ncluster_SubjectModule_providers\n\n\n\n\nSubjectService\n\nSubjectService\n\n\n\nSubjectModule\n\nSubjectModule\n\nSubjectModule -->\n\nSubjectService->SubjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subject/subject.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubjectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubjectService } from './subject.service';\nimport { SubjectController } from './subject.controller';\n\n@Module({\n  controllers: [SubjectController],\n  providers: [SubjectService],\n})\nexport class SubjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectService.html":{"url":"injectables/SubjectService.html","title":"injectable - SubjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/subject.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createSubjectDto: CreateSubjectDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubjectDto\n                                            \n                                                            CreateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSubjectDto: UpdateSubjectDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subject/subject.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSubjectDto\n                                            \n                                                            UpdateSubjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSubjectDto } from './dto/create-subject.dto';\nimport { UpdateSubjectDto } from './dto/update-subject.dto';\n\n@Injectable()\nexport class SubjectService {\n  create(createSubjectDto: CreateSubjectDto) {\n    return 'This action adds a new subject';\n  }\n\n  findAll() {\n    return `This action returns all subject`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} subject`;\n  }\n\n  update(id: number, updateSubjectDto: UpdateSubjectDto) {\n    return `This action updates a #${id} subject`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} subject`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Teacher.html":{"url":"entities/Teacher.html","title":"entity - Teacher","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/entities/teacher.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                experience\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                joiningDate\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                mobile\n                            \n                            \n                                    \n                                qualification\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        joiningDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true, eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher/entities/teacher.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, OneToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Exclude } from 'class-transformer';\nimport { User } from \"src/user/entities/user.entity\";\n\n\n\n@Entity()\nexport class Teacher {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column()\n  gender: string;\n\n  @Column()\n  dateOfBirth: Date;\n\n  @Column()\n  mobile: string;\n\n  @Column()\n  joiningDate: Date;\n\n  @Column()\n  qualification: string;\n\n  @Column()\n  experience: number;\n\n  @Column()\n  email: string;\n\n  @OneToOne(() => User, { cascade: true, eager: true })\n  @JoinColumn()\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherController.html":{"url":"controllers/TeacherController.html","title":"controller - TeacherController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/teacher.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teacher\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTeacherDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTeacherDto: UpdateTeacherDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/teacher/teacher.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTeacherDto\n                                            \n                                                            UpdateTeacherDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { CreateTeacherDto } from './dto/create-teacher.dto';\nimport { UpdateTeacherDto } from './dto/update-teacher.dto';\n\n@Controller('teacher')\nexport class TeacherController {\n  constructor(private readonly teacherService: TeacherService) {}\n\n  @Post()\n  create(@Body() createTeacherDto: any) {\n    return this.teacherService.create(createTeacherDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.teacherService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.teacherService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTeacherDto: UpdateTeacherDto) {\n    return this.teacherService.update(+id, updateTeacherDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.teacherService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherModule.html":{"url":"modules/TeacherModule.html","title":"module - TeacherModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_imports\n\n\n\ncluster_TeacherModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nTeacherModule\n\nTeacherModule\n\nTeacherModule -->\n\nUserModule->TeacherModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teacher/teacher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeacherService } from './teacher.service';\nimport { TeacherController } from './teacher.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Teacher } from './entities/teacher.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { UserModule } from 'src/user/user.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Teacher,User]),UserModule],\n  controllers: [TeacherController],\n  providers: [TeacherService],\n})\nexport class TeacherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherService.html":{"url":"injectables/TeacherService.html","title":"injectable - TeacherService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/teacher.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teacherRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/teacher/teacher.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teacherRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTeacherDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTeacherDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/teacher/teacher.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Teacher } from './entities/teacher.entity';\nimport { UserService } from 'src/user/http/services/user.service';\nimport { Role } from 'src/user/types';\n\n@Injectable()\nexport class TeacherService {\n  constructor(\n    @InjectRepository(Teacher)\n    private teacherRepository: Repository,\n    private readonly userService: UserService,\n  ) {}\n\n  async create(createTeacherDto: any) {\n    const user = await this.userService.create({\n      username: createTeacherDto.username,\n      password: createTeacherDto.password,\n      role: Role.teacher,\n      \n    });\n    console.log(user.raw)\n\n    // Create teacher with the user ID\n    const teacher = this.teacherRepository.create({\n      firstName: createTeacherDto.firstName,\n      lastName: createTeacherDto.lastName,\n      gender: createTeacherDto.gender,\n      dateOfBirth: createTeacherDto.dateOfBirth,\n      mobile: createTeacherDto.mobile,\n      joiningDate: createTeacherDto.joiningDate,\n      qualification: createTeacherDto.qualification,\n      experience: createTeacherDto.experience,\n      email: createTeacherDto.email,\n      user: user.raw[0], // Assign the user entity\n    });\n    // console.log(createTeacherDto)\n\n    return this.teacherRepository.save(teacher);\n  }\n  \n\n  async findAll(){\n    return this.teacherRepository.createQueryBuilder(\"teacher\").getMany();\n  }\n\n  async findOne(id: number) {\n    return this.teacherRepository.findOne({ where: { id: id.toString() } });\n  }\n\n  async update(id, data) {\n    return this.teacherRepository.createQueryBuilder(\"user\")\n      .update(Teacher)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.teacherRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/interceptors/timeout.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http/interceptors/timeout.interceptor.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport {\n  catchError,\n  Observable,\n  throwError,\n  timeout,\n  TimeoutError,\n} from 'rxjs';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(1000),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => new Error());\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenBody.html":{"url":"interfaces/TokenBody.html","title":"interface - TokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/jwt.storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { TokenStorage } from './token.storage';\n\ninterface TokenBody {\n  readonly type: string;\n  readonly sub: string;\n}\n\n@Injectable()\nexport class JwtStorage implements TokenStorage {\n  private static readonly TOKEN_EXPIRY = '7 days';\n  private static readonly TOKEN_TYPE = 'authentication';\n\n  private readonly jwtService: JwtService;\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  constructor(\n    @Inject(JwtService)\n    jwtService: JwtService,\n    @InjectRepository(User)\n    userRepository: Repository,\n  ) {\n    this.jwtService = jwtService;\n    this.userRepository = userRepository;\n  }\n\n  public async generateToken(user: User): Promise {\n    return this.jwtService.signAsync(\n      {\n        type: JwtStorage.TOKEN_TYPE,\n        sub: user.id,\n      } as TokenBody,\n      {\n        expiresIn: JwtStorage.TOKEN_EXPIRY,\n        secret: 'secretkey'\n      },\n    );\n  }\n\n  public async validateToken(token: string): Promise {\n    const tokenBody: TokenBody = await this.jwtService.verifyAsync(token);\n    if (tokenBody.type !== JwtStorage.TOKEN_TYPE) {\n      throw new Error('Invalid token');\n    }\n\n    return this.userRepository.findOneOrFail({ where: { id: tokenBody.sub } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenGuard.html":{"url":"injectables/TokenGuard.html","title":"injectable - TokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class TokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenStorage.html":{"url":"interfaces/TokenStorage.html","title":"interface - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/storage/token.storage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            generateToken\n                                        \n                                \n                                \n                                        \n                                            validateToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validateToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validateToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../../user/entities/user.entity';\n\nexport interface TokenStorage {\n  readonly generateToken: (user: any) => Promise;\n  readonly validateToken: (token: string) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAttendanceDto.html":{"url":"classes/UpdateAttendanceDto.html","title":"class - UpdateAttendanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAttendanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attendance/dto/update-attendance.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAttendanceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAttendanceDto } from './create-attendance.dto';\n\nexport class UpdateAttendanceDto extends PartialType(CreateAttendanceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClassDto.html":{"url":"classes/UpdateClassDto.html","title":"class - UpdateClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/class/dto/update-class.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateClassDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateClassDto } from './create-class.dto';\n\nexport class UpdateClassDto extends PartialType(CreateClassDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMarkDto.html":{"url":"classes/UpdateMarkDto.html","title":"class - UpdateMarkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMarkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/marks/dto/update-mark.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateMarkDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMarkDto } from './create-mark.dto';\n\nexport class UpdateMarkDto extends PartialType(CreateMarkDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStudentDto.html":{"url":"classes/UpdateStudentDto.html","title":"class - UpdateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/dto/update-student.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateStudentDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateStudentDto } from './create-student.dto';\n\nexport class UpdateStudentDto extends PartialType(CreateStudentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubjectDto.html":{"url":"classes/UpdateSubjectDto.html","title":"class - UpdateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subject/dto/update-subject.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubjectDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSubjectDto } from './create-subject.dto';\n\nexport class UpdateSubjectDto extends PartialType(CreateSubjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherDto.html":{"url":"classes/UpdateTeacherDto.html","title":"class - UpdateTeacherDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher/dto/update-teacher.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateTeacherDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTeacherDto } from './create-teacher.dto';\n\nexport class UpdateTeacherDto extends PartialType(CreateTeacherDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Exclude } from 'class-transformer';\nimport { Role } from \"../types\";\n\n@Entity()\nexport class User {\n  constructor(props?: Partial) {\n    if (props) {\n      Object.assign(this, props);\n    }\n  }\n\n  @PrimaryGeneratedColumn()\n  readonly id: string;\n\n  @Column({\n    unique: true,\n    nullable: false,\n  })\n  username: string;\n\n  @Exclude()\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  readonly password: string;\n\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    default: Role.student,\n  })\n  role: Role;\n\n  @Exclude()\n  @CreateDateColumn()\n  readonly createdAt: Date;\n\n  @Exclude()\n  @UpdateDateColumn()\n  readonly updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(body: CreateUserRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/user')@ResponseMessage('User created successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/http/controllers/user.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseFilters } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\nimport { UpdateUserDto } from '../../dto/update-user.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from 'src/user/commands/create-user.command';\nimport { CreateUserExceptionFilter } from '../exception-filters/create-user.exception-filter';\nimport { DuplicateUserExceptionFilter } from '../exception-filters/duplicate-user.exception-filter';\nimport { CreateUserRequest } from '../requests/create-user.request';\nimport { ResponseMessage } from 'src/core/decorators/response.decorator';\n\n@Controller('user')\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly commandBus: CommandBus\n    ) {\n  }\n\n  // @UseFilters(new DuplicateUserExceptionFilter())\n  // @UseFilters(new CreateUserExceptionFilter())\n  // @Post(\"/user\")\n  // @ResponseMessage('User created successfully')\n  // async createUser(@Body() body: CreateUserRequest) {\n  //   // if (body.role !== Role.STAFF_ADMIN ) {\n  //   //   throw new CreateUserException(`You are not allowed to create ${body.role} user`);\n  //   // }\n\n  //   const userdata = await this.commandBus.execute(new CreateUserCommand(body));\n  //   return userdata;\n  // }\n  @Post(\"/user\")\n  @ResponseMessage('User created successfully')\n  async createUser(@Body() body: CreateUserRequest) {\n    return this.userService.create(body);\n  }\n\n  // @Post()\n  // create(@Body() createUserDto: any) {\n  //   return this.userService.create(createUserDto);\n  // }\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetailResponse.html":{"url":"classes/UserDetailResponse.html","title":"class - UserDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/http/response/user-detail.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            User\n            \n\n            \n                Implements\n            \n            \n                            IUserResponse\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/http/response/user-detail.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/entities/user.entity';\n\nexport type IUserResponse = Omit;\n\nexport class UserDetailResponse extends User implements IUserResponse {\n  constructor(props?: Partial) {\n    super(props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './http/services/user.service';\nimport { UserController } from './http/controllers/user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { BcryptService } from 'src/authentication/services/bcrypt.service';\nimport { CreateUserHandler } from './commands/handlers/create-user.handler';\n\n@Module({\n  imports: [CqrsModule, TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [CreateUserHandler, BcryptService,UserService],\n  exports: [UserService],\n})\nexport class  UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/http/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                changePasswordForUser\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, bcrypt: BcryptService, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/user/http/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcrypt\n                                                  \n                                                        \n                                                                        BcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(id: number, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePasswordForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePasswordForUser(id: number, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/http/services/user.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entities/user.entity';\nimport { BcryptService } from 'src/authentication/services/bcrypt.service';\nimport { comparePasswords } from 'src/authentication/http/controllers/authentication.controller';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from 'src/user/commands/create-user.command';\nimport { CreateUserRequest } from '../requests/create-user.request';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private readonly bcrypt: BcryptService,\n    private readonly commandBus: CommandBus\n  ) {}\n\n  // async create(createUserDto: any) {\n  //   const user = this.userRepository.create({\n  //     username: createUserDto.username,\n  //     password: createUserDto.password,\n  //     role: createUserDto.role,\n  //   });\n  //   return this.userRepository.save(user);\n  // }\n\n\n    async create(createUserDto: CreateUserRequest) {\n    // Use the command bus logic for user creation\n    const userdata = await this.commandBus.execute(new CreateUserCommand(createUserDto));\n    return userdata;\n  }\n  \n\n  async findAll() {\n    return this.userRepository.createQueryBuilder(\"user\").getMany();\n  }\n\n  async findOne(id: number) {\n    return this.userRepository.findOne({ where: { id: id.toString() } });\n  }\n  \n  async changePassword(id: number, data) {\n    const user: any = await this.userRepository\n      .createQueryBuilder(\"user\")\n      .where(\"user.id=:id\", { id: id })\n      .addSelect(\"user.password\")\n      .getOne();\n    const areEqual= await comparePasswords(user.password, data.oldPassword);\n    if (!areEqual) {\n      throw new HttpException(\n        \"Username or password is incorrect\",\n        HttpStatus.NOT_ACCEPTABLE\n      );\n    } else {\n      return this.userRepository.createQueryBuilder(\"user\")\n        .update(User)\n        .where(\"user.id=:id\", { id: +id })\n        .set({\n          password: await this.bcrypt.hashPassword(data.password)\n        })\n        .execute();\n    }\n  }\n\n  async changePasswordForUser(id: number, data) {\n    return this.userRepository.createQueryBuilder(\"user\")\n      .update(User)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        password: await this.bcrypt.hashPassword(data.password)\n      })\n      .execute();\n  }\n\n\n  async update(id, data) {\n    return this.userRepository.createQueryBuilder(\"user\")\n      .update(User)\n      .where(\"user.id=:id\", { id: +id })\n      .set({\n        ...data\n      })\n      .execute();\n  }\n\n  async remove(id: string) {\n    await this.userRepository.delete(id);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/attendance/attendance.controller.ts\n            \n            controller\n            AttendanceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/attendance/attendance.service.ts\n            \n            injectable\n            AttendanceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/attendance/dto/create-attendance.dto.ts\n            \n            class\n            CreateAttendanceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/attendance/dto/update-attendance.dto.ts\n            \n            class\n            UpdateAttendanceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/attendance/entities/attendance.entity.ts\n            \n            class\n            Attendance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/http/controllers/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/authentication/http/controllers/authentication.controller.ts\n            \n            variable\n            comparePasswords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/http/response/user-detail.response.ts\n            \n            class\n            UserDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/http/token.guard.ts\n            \n            injectable\n            TokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/database.strategy.ts\n            \n            injectable\n            DatabaseStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/jwt.strategy.ts\n            \n            class\n            NestJwtStrategy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/passport/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/providers/token-storage.provider.ts\n            \n            variable\n            TokenStorageProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/services/bcrypt.service.ts\n            \n            class\n            BcryptService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/storage/jwt.storage.ts\n            \n            injectable\n            JwtStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/authentication/storage/jwt.storage.ts\n            \n            interface\n            TokenBody\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/authentication/storage/token.storage.ts\n            \n            interface\n            TokenStorage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/class/class.controller.ts\n            \n            controller\n            ClassController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/class/class.service.ts\n            \n            injectable\n            ClassService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/class/dto/create-class.dto.ts\n            \n            class\n            CreateClassDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/class/dto/update-class.dto.ts\n            \n            class\n            UpdateClassDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/class/entities/class.entity.ts\n            \n            entity\n            ClassEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            DATABASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            dbconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.ts\n            \n            variable\n            DATABASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.ts\n            \n            variable\n            dbconfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/globalLogger.ts\n            \n            variable\n            globalLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/ormconfig.ts\n            \n            variable\n            connectionSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/pinoLoggerConfig.ts\n            \n            variable\n            loggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/db.config.ts\n            \n            variable\n            DB_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/db.config.ts\n            \n            variable\n            DB_VARS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/response.decorator.ts\n            \n            variable\n            ResponseMessageKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/controller.ts/core.controllers.ts\n            \n            controller\n            CoreController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/exception.interceptor.ts\n            \n            injectable\n            ExceptionInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            injectable\n            ResponseTransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            function\n            ResponseTransformInterceptorIgnore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/response-transform.interceptor.ts\n            \n            variable\n            IgnoredPropertyName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/interceptors/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/request/request.ts\n            \n            interface\n            Req\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            IErrorBody\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            ItemsBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            PaginationMetaInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/http/response/types.ts\n            \n            interface\n            ResourceBody\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/dto/create-mark.dto.ts\n            \n            class\n            CreateMarkDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/dto/update-mark.dto.ts\n            \n            class\n            UpdateMarkDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/entities/mark.entity.ts\n            \n            class\n            Mark\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/marks/marks.controller.ts\n            \n            controller\n            MarksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/marks/marks.service.ts\n            \n            injectable\n            MarksService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/student/dto/create-student.dto.ts\n            \n            class\n            CreateStudentDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/student/dto/update-student.dto.ts\n            \n            class\n            UpdateStudentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/entities/student.entity.ts\n            \n            entity\n            Student\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/student/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subject/dto/create-subject.dto.ts\n            \n            class\n            CreateSubjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/dto/update-subject.dto.ts\n            \n            class\n            UpdateSubjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/entities/subject.entity.ts\n            \n            class\n            Subject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subject/subject.controller.ts\n            \n            controller\n            SubjectController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/subject/subject.service.ts\n            \n            injectable\n            SubjectService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teacher/dto/create-teacher.dto.ts\n            \n            class\n            CreateTeacherDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/teacher/dto/update-teacher.dto.ts\n            \n            class\n            UpdateTeacherDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/entities/teacher.entity.ts\n            \n            entity\n            Teacher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher/teacher.controller.ts\n            \n            controller\n            TeacherController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teacher/teacher.service.ts\n            \n            injectable\n            TeacherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/commands/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/commands/fetch-user-by-id.command.ts\n            \n            class\n            FetchUserByIdCommand\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/commands/handlers/create-user.handler.ts\n            \n            class\n            CreateUserHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/commands/handlers/fetch-user-by-id.command.ts\n            \n            class\n            FetchUserByIdHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/exceptions/create-user.exception.ts\n            \n            class\n            CreateUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/exceptions/duplicate-user.exception.ts\n            \n            class\n            DuplicateUserException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/http/exception-filters/create-user.exception-filter.ts\n            \n            class\n            CreateUserExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/exception-filters/duplicate-user.exception-filter.ts\n            \n            class\n            DuplicateUserExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/http/requests/create-user.request.ts\n            \n            class\n            CreateUserRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/http/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            imageFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/images.utils.ts\n            \n            variable\n            pdfFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/password.generator.ts\n            \n            variable\n            passwordGenerator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.2.8\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/terminus : ^10.2.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @nestjs/websockets : ^10.2.8\n        \n            @types/bcrypt : ^5.0.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            express-basic-auth : ^1.2.1\n        \n            joi : ^17.11.0\n        \n            moment : ^2.29.4\n        \n            mysql2 : ^3.6.5\n        \n            nestjs-winston-logger : ^1.1.11\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.3\n        \n            postgresql : ^0.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContactTypeEnum   (src/.../contact.enum.ts)\n                        \n                        \n                            GenderEnum   (src/.../gender.enum.ts)\n                        \n                        \n                            PriorityEnum   (src/.../priority.enum.ts)\n                        \n                        \n                            Role   (src/.../types.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            StatusEnum   (src/.../status.enum.ts)\n                        \n                        \n                            UserTypeEnum   (src/.../user-type.enum.ts)\n                        \n                        \n                            UserTypeEnum   (src/.../user-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/enums/contact.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactTypeEnum\n                    \n                \n                        \n                            \n                                 PRIMARY\n                            \n                        \n                        \n                            \n                                Value : PRIMARY\n                            \n                        \n                        \n                            \n                                 SECONDARY\n                            \n                        \n                        \n                            \n                                Value : SECONDARY\n                            \n                        \n            \n        \n\n    src/utils/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GenderEnum\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 OTHERS\n                            \n                        \n                        \n                            \n                                Value : OTHERS\n                            \n                        \n            \n        \n\n    src/common/enums/priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriorityEnum\n                    \n                \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : HIGH\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : MEDIUM\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : LOW\n                            \n                        \n            \n        \n\n    src/user/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n            \n        \n\n    src/common/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/utils/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/common/enums/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n    src/utils/enums/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ResponseTransformInterceptorIgnore   (src/.../response-transform.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/http/interceptors/response-transform.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResponseTransformInterceptorIgnore\n                        \n                    \n                \n            \n            \n                \nResponseTransformInterceptorIgnore()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AttendanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClassModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AttendanceModule\n\n\n\ncluster_AttendanceModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_ClassModule\n\n\n\ncluster_ClassModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_MarksModule\n\n\n\ncluster_MarksModule_providers\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_providers\n\n\n\ncluster_SubjectModule\n\n\n\ncluster_SubjectModule_providers\n\n\n\ncluster_TeacherModule\n\n\n\ncluster_TeacherModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAttendanceModule\n\nAttendanceModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAttendanceModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nAuthenticationModule->BcryptService \n\n\n\n\n\nJwtStorage \n\nJwtStorage \n\nJwtStorage  -->\n\nAuthenticationModule->JwtStorage \n\n\n\n\n\nClassModule\n\nClassModule\n\nAppModule -->\n\nClassModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAuthenticationModule -->\n\nCoreModule->AuthenticationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMarksModule\n\nMarksModule\n\nAppModule -->\n\nMarksModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nSubjectModule\n\nSubjectModule\n\nAppModule -->\n\nSubjectModule->AppModule\n\n\n\n\n\nTeacherModule\n\nTeacherModule\n\nAppModule -->\n\nTeacherModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nStudentModule -->\n\nUserModule->StudentModule\n\n\n\nTeacherModule -->\n\nUserModule->TeacherModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAttendanceService\n\nAttendanceService\n\nAttendanceModule -->\n\nAttendanceService->AttendanceModule\n\n\n\n\n\nDatabaseStrategy\n\nDatabaseStrategy\n\nAuthenticationModule -->\n\nDatabaseStrategy->AuthenticationModule\n\n\n\n\n\nJwtStorage\n\nJwtStorage\n\nAuthenticationModule -->\n\nJwtStorage->AuthenticationModule\n\n\n\n\n\nClassService\n\nClassService\n\nClassModule -->\n\nClassService->ClassModule\n\n\n\n\n\nResponseTransformInterceptor\n\nResponseTransformInterceptor\n\nCoreModule -->\n\nResponseTransformInterceptor->CoreModule\n\n\n\n\n\nMarksService\n\nMarksService\n\nMarksModule -->\n\nMarksService->MarksModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\nSubjectService\n\nSubjectService\n\nSubjectModule -->\n\nSubjectService->SubjectModule\n\n\n\n\n\nTeacherService\n\nTeacherService\n\nTeacherModule -->\n\nTeacherService->TeacherModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ISuccessBody   (src/.../types.ts)\n                        \n                        \n                            IUserResponse   (src/.../user-detail.response.ts)\n                        \n                        \n                            ValidationErrors   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/http/response/types.ts\n    \n    \n        \n            \n                \n                    \n                    ISuccessBody\n                \n            \n            \n                \n                        ResourceBody | ItemsBody\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValidationErrors\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/authentication/http/response/user-detail.response.ts\n    \n    \n        \n            \n                \n                    \n                    IUserResponse\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            comparePasswords   (src/.../authentication.controller.ts)\n                        \n                        \n                            connectionSource   (src/.../ormconfig.ts)\n                        \n                        \n                            DATABASE_URL   (src/.../database.config.ts)\n                        \n                        \n                            DATABASE_URL   (src/.../database.ts)\n                        \n                        \n                            DB_CONFIG   (src/.../db.config.ts)\n                        \n                        \n                            DB_VARS   (src/.../db.config.ts)\n                        \n                        \n                            dbconfig   (src/.../database.config.ts)\n                        \n                        \n                            dbconfig   (src/.../database.ts)\n                        \n                        \n                            editFileName   (src/.../images.utils.ts)\n                        \n                        \n                            globalLogger   (src/.../globalLogger.ts)\n                        \n                        \n                            IgnoredPropertyName   (src/.../response-transform.interceptor.ts)\n                        \n                        \n                            imageFileFilter   (src/.../images.utils.ts)\n                        \n                        \n                            loggerConfig   (src/.../pinoLoggerConfig.ts)\n                        \n                        \n                            passwordGenerator   (src/.../password.generator.ts)\n                        \n                        \n                            pdfFileFilter   (src/.../images.utils.ts)\n                        \n                        \n                            ResponseMessage   (src/.../response.decorator.ts)\n                        \n                        \n                            ResponseMessageKey   (src/.../response.decorator.ts)\n                        \n                        \n                            TokenStorageProvider   (src/.../token-storage.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/authentication/http/controllers/authentication.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (userPassword, currentPassword) => {\n  return await bcrypt.compare(currentPassword, userPassword);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  ...database,\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  migrationsRun: true,\n  migrations: [__dirname + '/../migrations/**/*.ts'],\n} as DataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbconfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port:\n    (process.env.DATABASE_PORT && parseInt(process.env.DATABASE_PORT, 10)) ||\n    3306,\n  database: process.env.DATABASE_NAME,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: process.env.DATABASE_SCHEMA_SYNC === 'true',\n  autoLoadEntities: true,\n  bigNumberStrings: false,\n  // logging: process.env.TYPEORM_QUERY_LOGGING === 'true',\n  // extra: {\n  //   max: (process.env.DB_CONNECTION_POOL_MAX && parseInt(process.env.DB_CONNECTION_POOL_MAX, 10)) || 5,\n  // },\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/config/database.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbconfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.DATABASE_HOST,\n  port:\n    (process.env.DATABASE_PORT && parseInt(process.env.DATABASE_PORT, 10)) ||\n    3306,\n  database: process.env.DATABASE_NAME,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  synchronize: process.env.DATABASE_SCHEMA_SYNC === 'true',\n  autoLoadEntities: true,\n  bigNumberStrings: false,\n  // logging: process.env.TYPEORM_QUERY_LOGGING === 'true',\n  // extra: {\n  //   max: (process.env.DB_CONNECTION_POOL_MAX && parseInt(process.env.DB_CONNECTION_POOL_MAX, 10)) || 5,\n  // },\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/core/config/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `mongodb+srv://${DB_VARS.username}:${DB_VARS.password}@${DB_VARS.host}/?retryWrites=true&w=majority`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DB_VARS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  host: process.env.DB_HOST,\n  port: process.env.DB_PORT,\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/images.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  const name = file.originalname.split('.')[0];\n  const fileExtName = extname(file.originalname);\n  const randomName = Array(4)\n    .fill(null)\n    .map(() => Math.round(Math.random() * 16).toString(16))\n    .join('');\n  return callback(null, `${name}-${randomName}${fileExtName}`);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (!file.originalname.match(/\\.(SVG|svg|JPG|JPEG|PNG|jpg|jpeg|png|gif)$/)) {\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n  return callback(null, true);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (\n    !file.originalname.match(\n      /\\.(SVG|svg|JPG|JPEG|PNG|jpg|jpeg|png|gif|pdf|doc|docx|xls|xlsx)$/,\n    )\n  ) {\n    return callback(\n      new Error('Only image files and document files are allowed!'),\n      false,\n    );\n  }\n  return callback(null, true);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/globalLogger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NestjsWinstonLoggerService({\n  format: format.combine(\n    format.timestamp({ format: 'isoDateTime' }),\n    format.json(),\n    format.colorize({ all: true }),\n  ),\n  transports: [\n    new transports.File({\n      filename: 'Logs/error.log',\n      level: 'error',\n      maxsize: 20,\n      maxFiles: 14,\n    }),\n    // new transports.File({ filename: 'combined.log' }),\n    new transports.Console({\n      format: winston.format.simple(),\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/core/http/interceptors/response-transform.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IgnoredPropertyName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IgnoredPropertyName')\n                    \n                \n\n\n        \n    \n\n    src/config/pinoLoggerConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  pinoHttp: {\n    transport: {\n      target: 'pino-pretty',\n      options: {\n        colorize: true,\n        singleLine: true,\n        messageFormat:\n          '{req.headers.host} - {req.method} {req.url} {res.statusCode} - {responseTime} ms',\n      },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/password.generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordGenerator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const chars =\n    '0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const passwordLength = 12;\n  let password = '';\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/core/decorators/response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(ResponseMessageKey, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ResponseMessageKey'\n                    \n                \n\n\n        \n    \n\n    src/authentication/providers/token-storage.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TokenStorageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  provide: 'TokenStorage',\n  useClass: JwtStorage,\n} as Provider\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
